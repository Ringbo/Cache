--- /tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-01 05:43:14.723151256 -0500
+++ /tmp/Arja_Defects4J_Math_95/patches_8px0/Patch_291/patched/tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-01 05:47:32.343241104 -0500
@@ -143,9 +143,7 @@
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+            return 1.0d;
     }
     
     /**


--- /tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-01 05:43:11.219151160 -0500
+++ /tmp/Arja_Defects4J_Math_95/patches_8px0/Patch_291/patched/tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-01 05:47:32.347241109 -0500
@@ -62,7 +62,10 @@
             throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
         }
 
-        // by default, do simple root finding using bracketing and default solver.
+        if (p == 0) {
+			return 0d;
+		}
+		// by default, do simple root finding using bracketing and default solver.
         // subclasses can overide if there is a better method.
         UnivariateRealFunction rootFindingFunction =
             new UnivariateRealFunction() {


