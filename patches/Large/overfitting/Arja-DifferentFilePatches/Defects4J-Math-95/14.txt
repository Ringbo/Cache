--- /tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-01 05:43:14.723151256 -0500
+++ /tmp/Arja_Defects4J_Math_95/patches_8px0/Patch_1664/patched/tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-01 06:03:14.567910477 -0500
@@ -69,7 +69,8 @@
      */
     public double cumulativeProbability(double x) throws MathException {
         double ret;
-        if (x <= 0.0) {
+        ret = Double.NEGATIVE_INFINITY;
+		if (x <= 0.0) {
             ret = 0.0;
         } else {
             double n = getNumeratorDegreesOfFreedom();
@@ -145,7 +146,7 @@
         double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


--- /tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-01 05:43:11.219151160 -0500
+++ /tmp/Arja_Defects4J_Math_95/patches_8px0/Patch_1664/patched/tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-01 06:03:14.567910477 -0500
@@ -76,7 +76,10 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        if (p == 1) {
+			return Double.POSITIVE_INFINITY;
+		}
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;


