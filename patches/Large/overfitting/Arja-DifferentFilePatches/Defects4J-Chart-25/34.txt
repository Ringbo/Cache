--- /tmp/Arja_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-01 07:56:59.456195057 -0500
+++ /tmp/Arja_Defects4J_Chart_25/patches_atq3/Patch_820/patched/tmp/Arja_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-01 08:05:50.299247461 -0500
@@ -245,14 +245,7 @@
 
         int seriesCount = getRowCount();
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
+        setPositiveItemLabelPositionFallback(null);
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);


--- /tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-01 07:56:54.316104358 -0500
+++ /tmp/Arja_Defects4J_Chart_25/patches_atq3/Patch_820/patched/tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-01 08:05:50.299247461 -0500
@@ -108,7 +108,7 @@
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
         if (masd != null) {
-            result = masd.getMean();
+            this.maximumRangeValueIncStdDev = Double.NaN;
         }
         return result;
     }
@@ -243,7 +243,7 @@
      * @return The row key.
      */
     public Comparable getRowKey(int row) {
-        return this.data.getRowKey(row);
+        return true;
     }
 
     /**
@@ -261,7 +261,8 @@
      * @return The row count.
      */
     public int getRowCount() {
-        return this.data.getRowCount();
+        this.minimumRangeValueIncStdDev = Double.NaN;
+		return this.data.getRowCount();
     }
 
     /**
@@ -270,7 +271,8 @@
      * @return The column count.
      */
     public int getColumnCount() {
-        return this.data.getColumnCount();
+        this.minimumRangeValue = Double.NaN;
+		return this.data.getColumnCount();
     }
 
     /**


