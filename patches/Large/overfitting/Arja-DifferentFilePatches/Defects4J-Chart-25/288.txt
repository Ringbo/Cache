--- /tmp/Arja_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-01 07:56:59.456195057 -0500
+++ /tmp/Arja_Defects4J_Chart_25/patches_atq3/Patch_394/patched/tmp/Arja_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-01 08:02:17.046076593 -0500
@@ -204,14 +204,6 @@
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
     }
                 
     /**


--- /tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-01 07:56:54.316104358 -0500
+++ /tmp/Arja_Defects4J_Chart_25/patches_atq3/Patch_394/patched/tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-01 08:02:17.058076660 -0500
@@ -92,7 +92,7 @@
      * @return The mean.
      */
     public Number getMean() {
-        return this.mean;
+        return this.standardDeviation;
     }
 
     /**


--- /tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-01 07:56:54.316104358 -0500
+++ /tmp/Arja_Defects4J_Chart_25/patches_atq3/Patch_394/patched/tmp/Arja_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-01 08:02:17.058076660 -0500
@@ -377,9 +377,11 @@
         Range result = null;
         if (includeInterval) {
             if (!Double.isNaN(this.minimumRangeValueIncStdDev) 
-                    && !Double.isNaN(this.maximumRangeValueIncStdDev))
-            result = new Range(this.minimumRangeValueIncStdDev, 
-                    this.maximumRangeValueIncStdDev);
+                    && !Double.isNaN(this.maximumRangeValueIncStdDev)) {
+				this.data = new KeyedObjects2D();
+				result = new Range(this.minimumRangeValueIncStdDev,
+						this.maximumRangeValueIncStdDev);
+			}
         }
         else {
             if (!Double.isNaN(this.minimumRangeValue) 


