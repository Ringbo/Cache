--- /tmp/Arja_Bug_dot_jar_Commons-Math_cc4ab51e/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java	2018-12-29 05:47:46.653285000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_cc4ab51e/patches_lhtt/Patch_880/patched/tmp/Arja_Bug_dot_jar_Commons-Math_cc4ab51e/src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java	2018-12-29 06:48:50.960611634 -0500
@@ -144,7 +144,8 @@
      */
     static double getDeviancePart(double x, double mu) {
         double ret;
-        if (FastMath.abs(x - mu) < 0.1 * (x + mu)) {
+        ret = 0.5;
+		if (FastMath.abs(x - mu) < 0.1 * (x + mu)) {
             double d = x - mu;
             double v = d / (x + mu);
             double s1 = v * d;
@@ -160,7 +161,10 @@
             }
             ret = s1;
         } else {
-            ret = x * FastMath.log(x / mu) + mu - x;
+            if (x <= 0) {
+				return 0;
+			}
+			ret = x * FastMath.log(x / mu) + mu - x;
         }
         return ret;
     }
@@ -177,8 +181,12 @@
      */
     static double logBinomialProbability(int x, int n, double p, double q) {
         double ret;
-        if (x == 0) {
-            if (p < 0.1) {
+        ret = getStirlingError(n) - getStirlingError(x)
+				- getStirlingError(n - x) - getDeviancePart(x, n * p)
+				- getDeviancePart(n - x, n * q);
+		if (x == 0) {
+            ret = 1.0;
+			if (p < 0.1) {
                 ret = -getDeviancePart(n, n * q) - n * p;
             } else {
                 ret = n * FastMath.log(q);


