--- /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java	2018-12-29 12:37:22.084563000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/patches_stp5/Patch_176/patched/tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java	2018-12-29 12:50:56.800587331 -0500
@@ -1230,8 +1230,6 @@
 		streamGraph.addOperator(returnStream.getId(), operator, getType(), outTypeInfo,
 				operatorName);
 
-		connectGraph(inputStream, returnStream.getId(), 0);
-		
 		if (iterationID != null) {
 			//This data stream is an input to some iteration
 			addIterationSource(returnStream);


--- /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/runtime/tasks/OutputHandler.java	2018-12-29 12:37:22.188565000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/patches_stp5/Patch_176/patched/tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/runtime/tasks/OutputHandler.java	2018-12-29 12:50:56.800587331 -0500
@@ -152,7 +152,6 @@
 					chainedTaskConfig.getStreamOperator(vertex.getUserCodeClassLoader());
 			chainableOperator.setup(wrapper, vertex.context);
 
-			chainedOperators.add(chainableOperator);
 			return new OperatorCollector<X>(chainableOperator);
 		}
 


--- /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java	2018-12-29 12:37:22.120564000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/patches_stp5/Patch_176/patched/tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java	2018-12-29 12:50:56.804587332 -0500
@@ -184,11 +184,6 @@
 			} else {
 
 				Map<Integer, StreamConfig> chainedConfs = chainedConfigs.get(startNode);
-
-				if (chainedConfs == null) {
-					chainedConfigs.put(startNode, new HashMap<Integer, StreamConfig>());
-				}
-				chainedConfigs.get(startNode).put(current, config);
 			}
 
 			return transitiveOutEdges;


--- /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/collector/CollectorWrapper.java	2018-12-29 12:37:22.080563000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/patches_stp5/Patch_176/patched/tmp/Arja_Bug_dot_jar_Flink_0cfa43d7/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/collector/CollectorWrapper.java	2018-12-29 12:50:56.804587332 -0500
@@ -31,7 +31,6 @@
 	}
 
 	public void addCollector(Collector<?> output, StreamEdge edge) {
-		outputSelectorWrapper.addCollector(output, edge);
 	}
 
 	@Override


