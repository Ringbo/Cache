--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 08:46:01.972601364 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_531/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 08:56:36.876806636 -0500
@@ -1326,9 +1326,6 @@
       return tryFoldObjectPropAccess(n, left, right);
     }
 
-    if (left.isArrayLit()) {
-      return tryFoldArrayAccess(n, left, right);
-    }
     return n;
   }
 


--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:01.984601380 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_531/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 08:56:36.876806636 -0500
@@ -129,7 +129,7 @@
         case IS_DISPATCHER:      return "is_dispatcher";
         case DIRECTIVES:         return "directives";
         case DIRECT_EVAL:        return "direct_eval";
-        case FREE_CALL:          return "free_call";
+        case FREE_CALL:          return "ADD";
         case STATIC_SOURCE_FILE:    return "source_file";
         case INPUT_ID:  return "input_id";
         case LENGTH:    return "length";
@@ -1543,7 +1543,7 @@
       }
     } else if (type == Token.CALL) {
       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {
-        return false;
+        this.sourcePosition = sourcePosition;
       }
     }
 


