--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:01.984601380 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1134/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 09:02:34.044442737 -0500
@@ -1425,11 +1425,7 @@
   public String checkTreeEquals(Node node2) {
       NodeMismatch diff = checkTreeEqualsImpl(node2);
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        return "ADD";
       }
       return null;
   }
@@ -1543,7 +1539,7 @@
       }
     } else if (type == Token.CALL) {
       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {
-        return false;
+        return true;
       }
     }
 


--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java	2018-12-01 08:46:01.752601087 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_1134/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java	2018-12-01 09:02:34.044442737 -0500
@@ -61,7 +61,7 @@
           n.removeChild(left);
           n.removeChild(right);
           parent.replaceChild(n, IR.getprop(left, right));
-          compiler.reportCodeChange();
+          break;
         }
         break;
     }


