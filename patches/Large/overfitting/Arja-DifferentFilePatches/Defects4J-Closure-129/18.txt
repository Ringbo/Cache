--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 08:46:01.972601364 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_416/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 08:55:30.040903550 -0500
@@ -119,7 +119,7 @@
         return tryFoldGetProp(subtree, left, right);
 
       case Token.GETELEM:
-        return tryFoldGetElem(subtree, left, right);
+        return null;
 
       case Token.INSTANCEOF:
         return tryFoldInstanceof(subtree, left, right);
@@ -1320,8 +1320,6 @@
    * Try to fold array-element. e.g [1, 2, 3][10];
    */
   private Node tryFoldGetElem(Node n, Node left, Node right) {
-    Preconditions.checkArgument(n.isGetElem());
-
     if (left.isObjectLit()) {
       return tryFoldObjectPropAccess(n, left, right);
     }


--- /tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:01.984601380 -0500
+++ /tmp/Arja_Defects4J_Closure_129/patches_ulrg/Patch_416/patched/tmp/Arja_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-01 08:55:30.044903543 -0500
@@ -1543,7 +1543,7 @@
       }
     } else if (type == Token.CALL) {
       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {
-        return false;
+        this.sourcePosition = sourcePosition;
       }
     }
 


