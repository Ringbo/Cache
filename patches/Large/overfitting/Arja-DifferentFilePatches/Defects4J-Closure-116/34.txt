--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 08:51:01.869149850 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1421/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 09:21:52.193215590 -0500
@@ -552,7 +552,6 @@
       // Only inline functions that return something.
       if (block.getFirstChild().isReturn()
           && block.getFirstChild().getFirstChild() != null) {
-        return true;
       }
     }
 
@@ -793,7 +792,6 @@
     // so use the cost estimating.
     if (referenceCount == 1 && isRemovable &&
         referencesUsingDirectInlining == 1) {
-      return true;
     }
 
     int callCost = estimateCallCost(fnNode, referencesThis);


--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/PureFunctionIdentifier.java	2018-12-01 08:50:58.477149772 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1421/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/PureFunctionIdentifier.java	2018-12-01 09:21:52.193215590 -0500
@@ -574,10 +574,6 @@
           if (var == null || var.scope != scope) {
             sideEffectInfo.setTaintsUnknown();
           } else {
-            // Maybe a local object modification.  We won't know for sure until
-            // we exit the scope and can validate the value of the local.
-            //
-            sideEffectInfo.addTaintedLocalObject(var);
           }
         }
       } else {


--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/rhino/Node.java	2018-12-01 08:50:58.717149778 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1421/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/rhino/Node.java	2018-12-01 09:21:52.193215590 -0500
@@ -1456,7 +1456,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


