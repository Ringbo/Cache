--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 08:51:01.869149850 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1646/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 09:25:22.190162283 -0500
@@ -552,7 +552,7 @@
       // Only inline functions that return something.
       if (block.getFirstChild().isReturn()
           && block.getFirstChild().getFirstChild() != null) {
-        return true;
+        return false;
       }
     }
 
@@ -719,18 +719,6 @@
     while (cArg != null || fnParam != null) {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
-        if (cArg != null) {
-
-          // Check for arguments that are evaluated more than once.
-          // Note: Unlike block inlining, there it is not possible that a
-          // parameter reference will be in a loop.
-          if (NodeUtil.mayEffectMutableState(cArg, compiler)
-              && NodeUtil.getNameReferenceCount(
-                  block, fnParam.getString()) > 1) {
-            return CanInlineResult.NO;
-          }
-        }
-
         // Move to the next name.
         fnParam = fnParam.getNext();
       }
@@ -738,9 +726,6 @@
       // For every call argument check for side-effects, even if there
       // isn't a named parameter to match.
       if (cArg != null) {
-        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {
-          return CanInlineResult.NO;
-        }
         cArg = cArg.getNext();
       }
     }


--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/PureFunctionIdentifier.java	2018-12-01 08:50:58.477149772 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1646/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/jscomp/PureFunctionIdentifier.java	2018-12-01 09:25:22.190162283 -0500
@@ -500,7 +500,6 @@
         if (param &&
             !sideEffectInfo.blacklisted.contains(v) &&
             sideEffectInfo.taintedLocals.contains(v)) {
-          sideEffectInfo.setTaintsArguments();
           continue;
         }
 


--- /tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/rhino/Node.java	2018-12-01 08:50:58.717149778 -0500
+++ /tmp/Arja_Defects4J_Closure_116/patches_186s/Patch_1646/patched/tmp/Arja_Defects4J_Closure_116/src/com/google/javascript/rhino/Node.java	2018-12-01 09:25:22.194162303 -0500
@@ -1456,7 +1456,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


