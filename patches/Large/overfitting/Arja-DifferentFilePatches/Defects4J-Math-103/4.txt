--- /tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-01 05:42:16.172560311 -0500
+++ /tmp/Arja_Defects4J_Math_103/patches_qdd1/Patch_1247/patched/tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-01 06:08:35.315225074 -0500
@@ -106,8 +106,8 @@
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+            return 0.5 * (1.0 + Erf.erf((x - mean)
+					/ (standardDeviation * Math.sqrt(2.0))));
     }
     
     /**


--- /tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java	2018-12-01 05:42:13.764560256 -0500
+++ /tmp/Arja_Defects4J_Math_103/patches_qdd1/Patch_1247/patched/tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/special/Gamma.java	2018-12-01 06:08:35.319225059 -0500
@@ -177,7 +177,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                ret = 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }


--- /tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java	2018-12-01 05:42:13.740560255 -0500
+++ /tmp/Arja_Defects4J_Math_103/patches_qdd1/Patch_1247/patched/tmp/Arja_Defects4J_Math_103/src/java/org/apache/commons/math/MathException.java	2018-12-01 06:08:35.319225059 -0500
@@ -263,7 +263,13 @@
      */
     public void printStackTrace(PrintWriter out) {
         synchronized (out) {
-            super.printStackTrace(out);
+            synchronized (out) {
+				super.printStackTrace(out);
+				if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
+					out.print("Caused by: ");
+					rootCause.printStackTrace(out);
+				}
+			}
             if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
                 out.print("Caused by: ");
                 rootCause.printStackTrace(out);


