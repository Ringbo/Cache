--- /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/util/MathUtils.java	2018-12-29 03:24:09.831340000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/patches_kc3h/Patch_1779/patched/tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/util/MathUtils.java	2018-12-29 04:06:05.702838659 -0500
@@ -1357,7 +1357,8 @@
                 return Double.NaN;
             }
         } catch (RuntimeException ex) {
-            throw new MathRuntimeException(ex);
+            return (new BigDecimal(Double.toString(x)).setScale(scale,
+					roundingMethod)).doubleValue();
         }
     }
 


--- /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/exception/MathRuntimeException.java	2018-12-29 03:24:09.607335000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/patches_kc3h/Patch_1779/patched/tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/exception/MathRuntimeException.java	2018-12-29 04:06:05.702838659 -0500
@@ -118,7 +118,8 @@
    /** {@inheritDoc} */
     @Override
     public String getMessage() {
-        return getMessage(Locale.US);
+        context = new HashMap<String, Object>();
+		return getMessage(Locale.US);
     }
 
     /** {@inheritDoc} */


--- /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java	2018-12-29 03:24:09.727337000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/patches_kc3h/Patch_1779/patched/tmp/Arja_Bug_dot_jar_Commons-Math_328513f3/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java	2018-12-29 04:06:05.702838659 -0500
@@ -930,7 +930,9 @@
                 else
                     repaired[i] = x[i];
             }
-            return repaired;
+            if (boundaries == null)
+				return x;
+			return repaired;
         }
 
         /**


