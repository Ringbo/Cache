--- /tmp/Arja_Defects4J_Closure_31/src/com/google/javascript/rhino/Node.java	2018-12-01 09:46:57.523791036 -0500
+++ /tmp/Arja_Defects4J_Closure_31/patches_4aem/Patch_379/patched/tmp/Arja_Defects4J_Closure_31/src/com/google/javascript/rhino/Node.java	2018-12-01 09:59:02.407997126 -0500
@@ -1427,11 +1427,12 @@
   public String checkTreeEquals(Node node2) {
       NodeMismatch diff = checkTreeEqualsImpl(node2);
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (diff != null) {
+			return "Node tree inequality:" + "\nTree1:\n" + toStringTree()
+					+ "\n\nTree2:\n" + node2.toStringTree() + "\n\nSubtree1: "
+					+ diff.nodeA.toStringTree() + "\n\nSubtree2: "
+					+ diff.nodeB.toStringTree();
+		}
       }
       return null;
   }
@@ -1456,7 +1457,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_31/src/com/google/javascript/jscomp/CommandLineRunner.java	2018-12-01 09:46:57.479790781 -0500
+++ /tmp/Arja_Defects4J_Closure_31/patches_4aem/Patch_379/patched/tmp/Arja_Defects4J_Closure_31/src/com/google/javascript/jscomp/CommandLineRunner.java	2018-12-01 09:59:02.407997126 -0500
@@ -457,8 +457,6 @@
           } else if (FALSES.contains(lowerParam)) {
             setter.addValue(false);
           } else {
-            setter.addValue(true);
-            return 0;
           }
           return 1;
         }


