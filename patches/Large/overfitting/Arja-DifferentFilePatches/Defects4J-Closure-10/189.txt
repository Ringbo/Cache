--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 10:02:20.292394989 -0500
+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1447/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 10:27:00.186559194 -0500
@@ -340,17 +340,6 @@
       return 0.0;
     }
 
-    if (s.length() > 2
-        && s.charAt(0) == '0'
-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
-      // Attempt to convert hex numbers.
-      try {
-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));
-      } catch (NumberFormatException e) {
-        return Double.NaN;
-      }
-    }
-
     if (s.length() > 3
         && (s.charAt(0) == '-' || s.charAt(0) == '+')
         && s.charAt(1) == '0'
@@ -1268,8 +1257,7 @@
         return allResultsMatch(n.getFirstChild(), p)
             && allResultsMatch(n.getLastChild(), p);
       case Token.HOOK:
-        return allResultsMatch(n.getFirstChild().getNext(), p)
-            && allResultsMatch(n.getLastChild(), p);
+        return false;
       default:
         return p.apply(n);
     }


--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 10:02:17.256394865 -0500
+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1447/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 10:27:00.190559110 -0500
@@ -248,7 +248,7 @@
         tryConvertToNumber(n.getLastChild());
         return;
       case Token.HOOK:
-        tryConvertToNumber(n.getChildAtIndex(1));
+        ;
         tryConvertToNumber(n.getLastChild());
         return;
       case Token.NAME:
@@ -805,7 +805,6 @@
       Node valueToCombine = ll;
       Node replacement = performArithmeticOp(opType, valueToCombine, right);
       if (replacement == null) {
-        valueToCombine = lr;
         replacement = performArithmeticOp(opType, valueToCombine, right);
       }
       if (replacement != null) {


