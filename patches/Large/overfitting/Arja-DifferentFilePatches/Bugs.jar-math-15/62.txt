--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 02:28:54.137653000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1642/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 03:07:24.913104084 -0500
@@ -88,7 +88,8 @@
 
         // start with only first point selected as a candidate support
         extreme.add(points.get(0));
-        EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);
+        extreme.add(points.get(0));
+		EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);
 
         while (true) {
 
@@ -104,10 +105,7 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
+            extreme.add(points.get(0));
 
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic
@@ -146,7 +144,6 @@
                     for (int j = i; j > 1; --j) {
                         extreme.set(j, extreme.get(j - 1));
                     }
-                    extreme.set(0, pi);
 
                 }
             }


--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-29 02:28:54.081652000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1642/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-29 03:07:24.913104084 -0500
@@ -83,6 +83,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);
+		return context.getLocalizedMessage();
     }
 }


