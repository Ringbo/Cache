--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 02:28:54.137653000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_270/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 02:48:50.774928629 -0500
@@ -103,10 +103,11 @@
             support.clear();
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
-            ball = moveToFrontBall(extreme, support);
+            if (points == null || points.isEmpty()) {
+				return generator.ballOnSupport(new ArrayList<P>());
+			}
+			ball = moveToFrontBall(extreme, support);
             if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
             }
 
             // it was an interesting point, move it to the front
@@ -169,6 +170,13 @@
         double dMax  = -1.0;
 
         for (final P point : points) {
+			final double d = point.distance(center);
+			if (d > dMax) {
+				farthest = point;
+				dMax = d;
+			}
+		}
+		for (final P point : points) {
             final double d = point.distance(center);
             if (d > dMax) {
                 farthest = point;


