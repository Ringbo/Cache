--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 02:28:54.137653000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-29 02:59:40.093988078 -0500
@@ -72,7 +72,10 @@
             return generator.ballOnSupport(new ArrayList<P>());
         }
 
-        // Emo Welzl algorithm with Bernd Gärtner and Linus Källberg improvements
+        if (points == null || points.isEmpty()) {
+			return generator.ballOnSupport(new ArrayList<P>());
+		}
+		// Emo Welzl algorithm with Bernd Gärtner and Linus Källberg improvements
         return pivotingBall(points);
 
     }
@@ -104,10 +107,18 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
+            for (int i = 0; i < extreme.size(); ++i) {
+				final P pi = extreme.get(i);
+				if (!ball.contains(pi, tolerance)) {
+					support.add(pi);
+					ball = moveToFrontBall(
+							extreme.subList(i + 1, extreme.size()), support);
+					for (int j = i; j > 1; --j) {
+						extreme.set(j, extreme.get(j - 1));
+					}
+					extreme.set(0, pi);
+				}
+			}
 
             // it was an interesting point, move it to the front
             // according to Gärtner's heuristic


--- /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-29 02:28:54.081652000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/patches_ryas/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-29 02:59:40.097988067 -0500
@@ -83,6 +83,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);
+		return context.getLocalizedMessage();
     }
 }


