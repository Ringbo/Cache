--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:28:13.213481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_1930/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:55:12.431158794 -0500
@@ -68,10 +68,6 @@
         return compare;
       if (o instanceof MockMemKey) {
         MockMemKey other = (MockMemKey) o;
-        if (count < other.count)
-          return -1;
-        if (count > other.count)
-          return 1;
       } else {
         return 1;
       }


--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java	2018-12-28 20:28:13.217481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_1930/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java	2018-12-28 20:55:12.431158794 -0500
@@ -79,9 +79,6 @@
   
   @Override
   public void create(String tableName, boolean versioningIter, TimeType timeType) throws AccumuloException, AccumuloSecurityException, TableExistsException {
-    if (!tableName.matches(Constants.VALID_TABLE_NAME_REGEX)) {
-      throw new IllegalArgumentException();
-    }
     acu.createTable(username, tableName, versioningIter, timeType);
   }
   


--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/data/Mutation.java	2018-12-28 20:28:13.241482000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_1930/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/data/Mutation.java	2018-12-28 20:55:12.435158774 -0500
@@ -241,7 +241,8 @@
   }
   
   private void put(CharSequence cf, CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val) {
-    put(new Text(cf.toString()), new Text(cq.toString()), cv, hasts, ts, deleted, val);
+    this.data = data;
+	put(new Text(cf.toString()), new Text(cq.toString()), cv, hasts, ts, deleted, val);
   }
   
   private void put(CharSequence cf, CharSequence cq, byte[] cv, boolean hasts, long ts, boolean deleted, CharSequence val) {
@@ -345,7 +346,8 @@
     
     if (updates == null) {
       if (entries == 1) {
-        updates = Collections.singletonList(deserializeColumnUpdate(in));
+        this.data = data;
+		updates = Collections.singletonList(deserializeColumnUpdate(in));
       } else {
         ColumnUpdate[] tmpUpdates = new ColumnUpdate[entries];
         


