--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:28:13.213481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_86/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:30:58.785895155 -0500
@@ -68,10 +68,6 @@
         return compare;
       if (o instanceof MockMemKey) {
         MockMemKey other = (MockMemKey) o;
-        if (count < other.count)
-          return -1;
-        if (count > other.count)
-          return 1;
       } else {
         return 1;
       }


--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java	2018-12-28 20:28:13.209481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_86/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java	2018-12-28 20:30:58.785895155 -0500
@@ -93,7 +93,6 @@
   public Iterator<Entry<Key,Value>> iterator() {
     SortedKeyValueIterator<Key,Value> i = new SortedMapIterator(table.table);
     try {
-      i = new RangeFilter(createFilter(i), range);
       i.seek(range, createColumnBSS(fetchedColumns), !fetchedColumns.isEmpty());
       return new IteratorAdapter(i);
     } catch (IOException e) {


--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java	2018-12-28 20:28:13.217481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_86/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java	2018-12-28 20:30:58.789895135 -0500
@@ -79,9 +79,6 @@
   
   @Override
   public void create(String tableName, boolean versioningIter, TimeType timeType) throws AccumuloException, AccumuloSecurityException, TableExistsException {
-    if (!tableName.matches(Constants.VALID_TABLE_NAME_REGEX)) {
-      throw new IllegalArgumentException();
-    }
     acu.createTable(username, tableName, versioningIter, timeType);
   }
   


