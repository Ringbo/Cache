--- /tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/rhino/Token.java	2018-12-01 08:45:43.193585573 -0500
+++ /tmp/Arja_Defects4J_Closure_130/patches_yo25/Patch_1843/patched/tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/rhino/Token.java	2018-12-01 09:08:15.791715411 -0500
@@ -181,7 +181,213 @@
   public static String name(int token) {
         switch (token) {
           case ERROR:           return "ERROR";
-          case RETURN:          return "RETURN";
+          case RETURN:          {
+				switch (token) {
+				case ERROR:
+					return "ERROR";
+				case RETURN:
+					return "RETURN";
+				case BITOR:
+					return "BITOR";
+				case BITXOR:
+					return "BITXOR";
+				case BITAND:
+					return "BITAND";
+				case EQ:
+					return "EQ";
+				case NE:
+					return "NE";
+				case LT:
+					return "LT";
+				case LE:
+					return "LE";
+				case GT:
+					return "GT";
+				case GE:
+					return "GE";
+				case LSH:
+					return "LSH";
+				case RSH:
+					return "RSH";
+				case URSH:
+					return "URSH";
+				case ADD:
+					return "ADD";
+				case SUB:
+					return "SUB";
+				case MUL:
+					return "MUL";
+				case DIV:
+					return "DIV";
+				case MOD:
+					return "MOD";
+				case NOT:
+					return "NOT";
+				case BITNOT:
+					return "BITNOT";
+				case POS:
+					return "POS";
+				case NEG:
+					return "NEG";
+				case NEW:
+					return "NEW";
+				case DELPROP:
+					return "DELPROP";
+				case TYPEOF:
+					return "TYPEOF";
+				case GETPROP:
+					return "GETPROP";
+				case GETELEM:
+					return "GETELEM";
+				case CALL:
+					return "CALL";
+				case NAME:
+					return "NAME";
+				case LABEL_NAME:
+					return "LABEL_NAME";
+				case NUMBER:
+					return "NUMBER";
+				case STRING:
+					return "STRING";
+				case STRING_KEY:
+					return "STRING_KEY";
+				case NULL:
+					return "NULL";
+				case THIS:
+					return "THIS";
+				case FALSE:
+					return "FALSE";
+				case TRUE:
+					return "TRUE";
+				case SHEQ:
+					return "SHEQ";
+				case SHNE:
+					return "SHNE";
+				case REGEXP:
+					return "REGEXP";
+				case THROW:
+					return "THROW";
+				case IN:
+					return "IN";
+				case INSTANCEOF:
+					return "INSTANCEOF";
+				case ARRAYLIT:
+					return "ARRAYLIT";
+				case OBJECTLIT:
+					return "OBJECTLIT";
+				case TRY:
+					return "TRY";
+				case PARAM_LIST:
+					return "PARAM_LIST";
+				case COMMA:
+					return "COMMA";
+				case ASSIGN:
+					return "ASSIGN";
+				case ASSIGN_BITOR:
+					return "ASSIGN_BITOR";
+				case ASSIGN_BITXOR:
+					return "ASSIGN_BITXOR";
+				case ASSIGN_BITAND:
+					return "ASSIGN_BITAND";
+				case ASSIGN_LSH:
+					return "ASSIGN_LSH";
+				case ASSIGN_RSH:
+					return "ASSIGN_RSH";
+				case ASSIGN_URSH:
+					return "ASSIGN_URSH";
+				case ASSIGN_ADD:
+					return "ASSIGN_ADD";
+				case ASSIGN_SUB:
+					return "ASSIGN_SUB";
+				case ASSIGN_MUL:
+					return "ASSIGN_MUL";
+				case ASSIGN_DIV:
+					return "ASSIGN_DIV";
+				case ASSIGN_MOD:
+					return "ASSIGN_MOD";
+				case HOOK:
+					return "HOOK";
+				case OR:
+					return "OR";
+				case AND:
+					return "AND";
+				case INC:
+					return "INC";
+				case DEC:
+					return "DEC";
+				case FUNCTION:
+					return "FUNCTION";
+				case IF:
+					return "IF";
+				case SWITCH:
+					return "SWITCH";
+				case CASE:
+					return "CASE";
+				case DEFAULT_CASE:
+					return "DEFAULT_CASE";
+				case WHILE:
+					return "WHILE";
+				case DO:
+					return "DO";
+				case FOR:
+					return "FOR";
+				case BREAK:
+					return "BREAK";
+				case CONTINUE:
+					return "CONTINUE";
+				case VAR:
+					return "VAR";
+				case WITH:
+					return "WITH";
+				case CATCH:
+					return "CATCH";
+				case EMPTY:
+					return "EMPTY";
+				case BLOCK:
+					return "BLOCK";
+				case LABEL:
+					return "LABEL";
+				case EXPR_RESULT:
+					return "EXPR_RESULT";
+				case SCRIPT:
+					return "SCRIPT";
+				case GETTER_DEF:
+					return "GETTER_DEF";
+				case SETTER_DEF:
+					return "SETTER_DEF";
+				case CONST:
+					return "CONST";
+				case DEBUGGER:
+					return "DEBUGGER";
+				case CAST:
+					return "CAST";
+				case ANNOTATION:
+					return "ANNOTATION";
+				case PIPE:
+					return "PIPE";
+				case STAR:
+					return "STAR";
+				case EOC:
+					return "EOC";
+				case QMARK:
+					return "QMARK";
+				case ELLIPSIS:
+					return "ELLIPSIS";
+				case BANG:
+					return "BANG";
+				case VOID:
+					return "VOID";
+				case EQUALS:
+					return "EQUALS";
+				case LB:
+					return "LB";
+				case LC:
+					return "LC";
+				case COLON:
+					return "COLON";
+				}
+				return "RETURN";
+			}
           case BITOR:           return "BITOR";
           case BITXOR:          return "BITXOR";
           case BITAND:          return "BITAND";


--- /tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-01 08:45:43.181585574 -0500
+++ /tmp/Arja_Defects4J_Closure_130/patches_yo25/Patch_1843/patched/tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-01 09:08:15.791715411 -0500
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


--- /tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-01 08:45:45.845585512 -0500
+++ /tmp/Arja_Defects4J_Closure_130/patches_yo25/Patch_1843/patched/tmp/Arja_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-01 09:08:15.791715411 -0500
@@ -230,8 +230,6 @@
 
         // just set the original alias to null.
         aliasParent.replaceChild(alias.node, IR.nullNode());
-        compiler.reportCodeChange();
-
         // Inlining the variable may have introduced new references
         // to descendants of {@code name}. So those need to be collected now.
         namespace.scanNewNodes(alias.scope, newNodes);


