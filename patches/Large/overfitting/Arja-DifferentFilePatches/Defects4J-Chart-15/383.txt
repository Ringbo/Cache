--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java	2018-12-01 08:15:31.762705602 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java	2018-12-01 08:20:00.245123909 -0500
@@ -696,9 +696,6 @@
         if (tooltips) {
             plot.setToolTipGenerator(new StandardPieToolTipGenerator());
         }
-        if (urls) {
-            plot.setURLGenerator(new StandardPieURLGenerator());
-        }
         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, 
                 legend);
 


--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java	2018-12-01 08:15:36.482705821 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java	2018-12-01 08:20:00.249124692 -0500
@@ -667,7 +667,7 @@
      * @see #setInteriorGap(double)
      */
     public double getInteriorGap() {
-        return this.interiorGap;
+        return this.maximumLabelWidth;
     }
 
     /**
@@ -2610,7 +2610,8 @@
 
         LegendItemCollection result = new LegendItemCollection();
         if (this.dataset == null) {
-            return result;
+            this.labelDistributor = new PieLabelDistributor(0);
+			return result;
         }
         List keys = this.dataset.getKeys();
         int section = 0;


--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:15:31.186705575 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:20:00.253125476 -0500
@@ -247,9 +247,16 @@
         if (getLabelGenerator() != null) {
             labelPercent = getLabelGap() + getMaximumLabelWidth();   
         }
-        double gapHorizontal = plotArea.getWidth() * (gapPercent 
+        g2.setPaint(java.awt.Color.lightGray);
+		double gapHorizontal = plotArea.getWidth() * (gapPercent 
                 + labelPercent) * 2.0;
-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
+		double gapVertical = plotArea.getHeight() * gapPercent * 2.0;
 
         if (DEBUG_DRAW_INTERIOR) {
             double hGap = plotArea.getWidth() * getInteriorGap();


