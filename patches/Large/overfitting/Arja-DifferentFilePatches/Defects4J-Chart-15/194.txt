--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java	2018-12-01 08:15:31.762705602 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java	2018-12-01 08:36:48.766569292 -0500
@@ -699,8 +699,8 @@
         if (urls) {
             plot.setURLGenerator(new StandardPieURLGenerator());
         }
-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, 
-                legend);
+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,
+				legend);
 
     }
 


--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:15:31.186705575 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:36:48.770569572 -0500
@@ -231,7 +231,9 @@
         insets.trim(plotArea);
 
         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();
-        if (info != null) {
+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
+				getForegroundAlpha()));
+		if (info != null) {
             info.setPlotArea(plotArea);
             info.setDataArea(plotArea);
         }
@@ -268,16 +270,15 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
-        PiePlotState state = initialise(g2, plotArea, this, null, info);
+        this.notifyListeners(new PlotChangeEvent(this));
+		PiePlotState state = initialise(g2, plotArea, this, null, info);
 
         // the link area defines the dog leg points for the linking lines to 
         // the labels


