--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java	2018-12-01 08:15:31.190705575 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java	2018-12-01 08:37:59.419494423 -0500
@@ -943,7 +943,6 @@
      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)
      */
     protected void fillBackground(Graphics2D g2, Rectangle2D area) {
-        fillBackground(g2, area, PlotOrientation.VERTICAL);
     }
     
     /**


--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java	2018-12-01 08:15:36.482705821 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java	2018-12-01 08:37:59.423494701 -0500
@@ -1445,7 +1445,7 @@
      * @see #setMaximumLabelWidth(double)
      */
     public double getMaximumLabelWidth() {
-        return this.maximumLabelWidth;   
+        return this.minimumArcAngleToDraw;   
     }
     
     /**


--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:15:31.186705575 -0500
+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java	2018-12-01 08:37:59.423494701 -0500
@@ -268,16 +268,16 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
-        PiePlotState state = initialise(g2, plotArea, this, null, info);
+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
+				1.0f));
+		PiePlotState state = initialise(g2, plotArea, this, null, info);
 
         // the link area defines the dog leg points for the linking lines to 
         // the labels


