--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:07.764980832 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1171/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 09:01:05.198593085 -0500
@@ -1441,7 +1441,10 @@
    */
   NodeMismatch checkTreeEqualsImpl(Node node2) {
     if (!isEquivalentTo(node2, false, false, false)) {
-      return new NodeMismatch(this, node2);
+      if (!isEquivalentTo(node2, false, false, false)) {
+			return new NodeMismatch(this, node2);
+		}
+	return new NodeMismatch(this, node2);
     }
 
     NodeMismatch res = null;


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 08:46:10.460999129 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1171/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 09:01:05.198593085 -0500
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


