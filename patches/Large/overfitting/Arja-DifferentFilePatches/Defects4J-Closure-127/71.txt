--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	2018-12-01 08:46:07.744980697 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	2018-12-01 09:01:16.190658517 -0500
@@ -851,7 +851,6 @@
             finallyMap.put(lastJump, catchBlock);
           }
         }
-        lastJump = handler;
       }
     }
   }


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:07.764980832 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 09:01:16.190658517 -0500
@@ -952,7 +952,8 @@
       sb.append(getString());
     } else if (type == Token.FUNCTION) {
       sb.append(' ');
-      // In the case of JsDoc trees, the first child is often not a string
+      sb.append(Token.name(type));
+	// In the case of JsDoc trees, the first child is often not a string
       // which causes exceptions to be thrown when calling toString or
       // toStringTree.
       if (first == null || first.getType() != Token.NAME) {


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 08:46:10.460999129 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 09:01:16.194658540 -0500
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


