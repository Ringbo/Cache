--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:07.764980832 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1267/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 09:02:00.358921040 -0500
@@ -1454,7 +1454,8 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        this.sourcePosition = sourcePosition;
+		return res;
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 08:46:10.460999129 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1267/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 09:02:00.358921040 -0500
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


