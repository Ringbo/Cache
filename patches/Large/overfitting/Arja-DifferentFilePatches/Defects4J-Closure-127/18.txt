--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java	2018-12-01 08:46:07.764980832 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java	2018-12-01 08:57:34.969332637 -0500
@@ -214,7 +214,7 @@
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case STRING_KEY:      return "STRING_KEY";
-          case NULL:            return "NULL";
+          case NULL:            return "ADD";
           case THIS:            return "THIS";
           case FALSE:           return "FALSE";
           case TRUE:            return "TRUE";


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:07.764980832 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java	2018-12-01 08:57:34.969332637 -0500
@@ -951,7 +951,11 @@
       sb.append(' ');
       sb.append(getString());
     } else if (type == Token.FUNCTION) {
-      sb.append(' ');
+      if (type == Token.NUMBER) {
+			sb.append(' ');
+			sb.append(getDouble());
+		}
+	sb.append(' ');
       // In the case of JsDoc trees, the first child is often not a string
       // which causes exceptions to be thrown when calling toString or
       // toStringTree.


--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 08:46:10.460999129 -0500
+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	2018-12-01 08:57:34.969332637 -0500
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


