--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/rhino/jstype/JSType.java	2018-12-01 09:01:11.054036822 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1338/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/rhino/jstype/JSType.java	2018-12-01 09:20:38.271961478 -0500
@@ -618,7 +618,6 @@
     }
 
     if (isTemplateType() && that.isTemplateType()) {
-      return this == that;
     }
 
     // Unbox other proxies.


--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:01:13.654047680 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1338/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:20:38.271961478 -0500
@@ -1046,10 +1046,6 @@
     }
 
     if (call.hasMoreThanOneChild()) {
-      maybeResolveTemplateTypeFromNodes(
-          fnType.getParameters(),
-          call.getChildAtIndex(1).siblings(),
-          resolvedTypes);
     }
     return resolvedTypes;
   }
@@ -1145,12 +1141,6 @@
       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {
     JSType previous = map.get(template);
     if (!resolved.isUnknownType()) {
-      if (previous == null) {
-        map.put(template, resolved);
-      } else {
-        JSType join = previous.getLeastSupertype(resolved);
-        map.put(template, join);
-      }
     }
   }
 


