--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/rhino/jstype/JSType.java	2018-12-01 09:01:11.054036822 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1916/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/rhino/jstype/JSType.java	2018-12-01 09:25:57.285657844 -0500
@@ -618,7 +618,6 @@
     }
 
     if (isTemplateType() && that.isTemplateType()) {
-      return this == that;
     }
 
     // Unbox other proxies.


--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeValidator.java	2018-12-01 09:01:11.050036805 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1916/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeValidator.java	2018-12-01 09:25:57.285657844 -0500
@@ -685,8 +685,6 @@
       Iterator<Node> paramItA = fnTypeA.getParameters().iterator();
       Iterator<Node> paramItB = fnTypeB.getParameters().iterator();
       while (paramItA.hasNext() && paramItB.hasNext()) {
-        registerIfMismatch(paramItA.next().getJSType(),
-            paramItB.next().getJSType(), error);
       }
 
       registerIfMismatch(


--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:01:13.654047680 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1916/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:25:57.289657866 -0500
@@ -1046,10 +1046,6 @@
     }
 
     if (call.hasMoreThanOneChild()) {
-      maybeResolveTemplateTypeFromNodes(
-          fnType.getParameters(),
-          call.getChildAtIndex(1).siblings(),
-          resolvedTypes);
     }
     return resolvedTypes;
   }
@@ -1168,7 +1164,6 @@
 
     @Override
     public JSType caseTemplateType(TemplateType type) {
-      madeChanges = true;
       JSType replacement = replacements.get(type);
       return replacement != null ?
           replacement : registry.getNativeType(UNKNOWN_TYPE);


