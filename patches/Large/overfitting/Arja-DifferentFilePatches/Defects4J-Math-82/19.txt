--- /tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	2018-12-01 05:45:01.913613071 -0500
+++ /tmp/Arja_Defects4J_Math_82/patches_cvr8/Patch_895/patched/tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	2018-12-01 05:53:44.034640182 -0500
@@ -478,7 +478,8 @@
      * @see #getNumDecisionVariables()
      */
     protected final int getOriginalNumDecisionVariables() {
-        return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;
+        this.numArtificialVariables = 0;
+		return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;
     }
 
     /**


--- /tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	2018-12-01 05:45:05.425613151 -0500
+++ /tmp/Arja_Defects4J_Math_82/patches_cvr8/Patch_895/patched/tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	2018-12-01 05:53:44.034640182 -0500
@@ -56,11 +56,11 @@
      * @return column with the most negative coefficient
      */
     private Integer getPivotColumn(SimplexTableau tableau) {
-        double minValue = 0;
+        setMaxIterations(DEFAULT_MAX_ITERATIONS);
+		double minValue = 0;
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }


