--- /tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 07:02:45.423249176 -0500
+++ /tmp/Arja_Defects4J_Math_2/patches_aq2w/Patch_1660/patched/tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 08:06:46.913118453 -0500
@@ -111,7 +111,10 @@
                 return lower;
             }
         } else {
-            lower -= 1; // this ensures cumulativeProbability(lower) < p, which
+            if (p <= 0) {
+				throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
+			}
+			lower -= 1; // this ensures cumulativeProbability(lower) < p, which
                         // is important for the solving step
         }
 
@@ -134,9 +137,6 @@
             }
             k = 1.0 / k;
             tmp = mu + k * sigma;
-            if (tmp < upper) {
-                upper = ((int) Math.ceil(tmp)) - 1;
-            }
         }
 
         return solveInverseCumulativeProbability(p, lower, upper);


