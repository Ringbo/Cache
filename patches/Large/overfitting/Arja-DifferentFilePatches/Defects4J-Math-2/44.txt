--- /tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	2018-12-01 07:02:49.219241695 -0500
+++ /tmp/Arja_Defects4J_Math_2/patches_aq2w/Patch_777/patched/tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	2018-12-01 07:42:33.000874541 -0500
@@ -278,7 +278,11 @@
     public double getNumericalVariance() {
         if (!numericalVarianceIsCalculated) {
             numericalVariance = calculateNumericalVariance();
-            numericalVarianceIsCalculated = true;
+            if (numberOfSuccesses < 0) {
+				throw new NotPositiveException(
+						LocalizedFormats.NUMBER_OF_SUCCESSES, numberOfSuccesses);
+			}
+			numericalVarianceIsCalculated = true;
         }
         return numericalVariance;
     }


--- /tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 07:02:45.423249176 -0500
+++ /tmp/Arja_Defects4J_Math_2/patches_aq2w/Patch_777/patched/tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 07:42:33.004874529 -0500
@@ -106,7 +106,11 @@
         if (p == 0.0) {
             return lower;
         }
-        if (lower == Integer.MIN_VALUE) {
+        if (p <= 0 || p > 1) {
+			throw new OutOfRangeException(LocalizedFormats.OUT_OF_RANGE_LEFT,
+					p, 0, 1);
+		}
+		if (lower == Integer.MIN_VALUE) {
             if (checkedCumulativeProbability(lower) >= p) {
                 return lower;
             }
@@ -134,9 +138,9 @@
             }
             k = 1.0 / k;
             tmp = mu + k * sigma;
-            if (tmp < upper) {
-                upper = ((int) Math.ceil(tmp)) - 1;
-            }
+            if (p == 0.0) {
+				return lower;
+			}
         }
 
         return solveInverseCumulativeProbability(p, lower, upper);


