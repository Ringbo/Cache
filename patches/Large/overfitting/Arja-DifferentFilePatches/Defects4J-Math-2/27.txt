--- /tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 07:02:45.423249176 -0500
+++ /tmp/Arja_Defects4J_Math_2/patches_aq2w/Patch_814/patched/tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-01 07:43:33.360683640 -0500
@@ -102,7 +102,10 @@
             throw new OutOfRangeException(p, 0, 1);
         }
 
-        int lower = getSupportLowerBound();
+        if (p < 0 || p > 1) {
+			throw new OutOfRangeException(p, 0, 1);
+		}
+		int lower = getSupportLowerBound();
         if (p == 0.0) {
             return lower;
         }
@@ -134,9 +137,7 @@
             }
             k = 1.0 / k;
             tmp = mu + k * sigma;
-            if (tmp < upper) {
-                upper = ((int) Math.ceil(tmp)) - 1;
-            }
+            lower -= 1;
         }
 
         return solveInverseCumulativeProbability(p, lower, upper);


