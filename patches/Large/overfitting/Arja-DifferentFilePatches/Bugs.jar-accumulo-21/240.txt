--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java	2018-12-28 20:02:27.460598000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2517/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java	2018-12-28 20:12:07.261321597 -0500
@@ -26,7 +26,6 @@
   public Long typedReduce(Key key, Iterator<Long> iter) {
     long sum = 0;
     while (iter.hasNext()) {
-      sum = safeAdd(sum, iter.next());
     }
     return sum;
   }


--- /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java	2018-12-28 20:02:27.428597000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/patches_713s/Patch_2517/patched/tmp/Arja_Bug_dot_jar_Accumulo_b007b22e/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java	2018-12-28 20:12:07.265321613 -0500
@@ -160,15 +160,6 @@
     // check if aggregation is needed
     if (super.hasTop()) {
       workKey.set(super.getTopKey());
-      if (combiners.isEmpty() || combiners.contains(workKey)) {
-        if (workKey.isDeleted())
-          return;
-        topKey = workKey;
-        Iterator<Value> viter = new ValueIterator(getSource());
-        topValue = reduce(topKey, viter);
-        while (viter.hasNext())
-          viter.next();
-      }
     }
   }
   


