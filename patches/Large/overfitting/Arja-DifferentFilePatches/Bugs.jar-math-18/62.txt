--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	2018-12-29 05:26:39.406599000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1045/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	2018-12-29 05:53:48.470140826 -0500
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java	2018-12-29 05:26:39.426600000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1045/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java	2018-12-29 05:53:48.470140826 -0500
@@ -253,7 +253,40 @@
             } else if (negInf || ot.posInf) {
                 return -1;
             } else if (posInf || ot.negInf) {
-                return +1;
+                if (components.length == ot.components.length) {
+					if (nan) {
+						return +1;
+					} else if (ot.nan) {
+						return -1;
+					} else if (negInf || ot.posInf) {
+						return -1;
+					} else if (posInf || ot.negInf) {
+						return +1;
+					} else {
+						if (offset < ot.offset) {
+							encode(ot.offset);
+						} else if (offset > ot.offset) {
+							ot.encode(offset);
+						}
+						final int limit = FastMath.min(encoding.length,
+								ot.encoding.length);
+						for (int i = 0; i < limit; ++i) {
+							if (encoding[i] < ot.encoding[i]) {
+								return -1;
+							} else if (encoding[i] > ot.encoding[i]) {
+								return +1;
+							}
+						}
+						if (encoding.length < ot.encoding.length) {
+							return -1;
+						} else if (encoding.length > ot.encoding.length) {
+							return +1;
+						} else {
+							return 0;
+						}
+					}
+				}
+				return +1;
             } else {
 
                 if (offset < ot.offset) {


