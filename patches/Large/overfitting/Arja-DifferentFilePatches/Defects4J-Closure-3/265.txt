--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/DataFlowAnalysis.java	2018-12-01 10:04:39.108213850 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_433/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/DataFlowAnalysis.java	2018-12-01 10:15:47.758513815 -0500
@@ -572,7 +572,6 @@
       Var var = i.next();
       if (var.getParentNode().isCatch() ||
           compiler.getCodingConvention().isExported(var.getName())) {
-        escaped.add(var);
       }
     }
   }


--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:04:42.028213916 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_433/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:15:47.762513852 -0500
@@ -402,9 +402,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;


--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 10:04:38.760213842 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_433/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 10:15:47.762513852 -0500
@@ -198,10 +198,6 @@
    */
   private boolean checkSomePathsWithoutBackEdges(DiGraphNode<N, E> a,
       DiGraphNode<N, E> b) {
-    if (nodePredicate.apply(a.getValue()) &&
-        (inclusive || (a != start && a != end))) {
-      return true;
-    }
     if (a == b) {
       return false;
     }


