--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/DataFlowAnalysis.java	2018-12-01 10:04:39.108213850 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_1269/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/DataFlowAnalysis.java	2018-12-01 10:25:49.448650601 -0500
@@ -572,7 +572,6 @@
       Var var = i.next();
       if (var.getParentNode().isCatch() ||
           compiler.getCodingConvention().isExported(var.getName())) {
-        escaped.add(var);
       }
     }
   }


--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:04:42.028213916 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_1269/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:25:49.448650601 -0500
@@ -402,9 +402,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;
@@ -419,8 +417,6 @@
       if (def.isAssign()) {
         Node rhs = def.getLastChild();
         rhs.detachFromParent();
-        // Oh yes! I have grandparent to remove this.
-        Preconditions.checkState(defParent.isExprResult());
         while (defParent.getParent().isLabel()) {
           defParent = defParent.getParent();
         }


