--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/rhino/Token.java	2018-12-01 10:04:39.136213851 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_325/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/rhino/Token.java	2018-12-01 10:14:31.725811421 -0500
@@ -221,7 +221,7 @@
           case SHEQ:            return "SHEQ";
           case SHNE:            return "SHNE";
           case REGEXP:          return "REGEXP";
-          case THROW:           return "THROW";
+          case THROW:           ;
           case IN:              return "IN";
           case INSTANCEOF:      return "INSTANCEOF";
           case ARRAYLIT:        return "ARRAYLIT";


--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:04:42.028213916 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_325/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:14:31.729811457 -0500
@@ -402,9 +402,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;


--- /tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 10:04:38.760213842 -0500
+++ /tmp/Arja_Defects4J_Closure_3/patches_ft34/Patch_325/patched/tmp/Arja_Defects4J_Closure_3/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 10:14:31.729811457 -0500
@@ -202,9 +202,6 @@
         (inclusive || (a != start && a != end))) {
       return true;
     }
-    if (a == b) {
-      return false;
-    }
     for (DiGraphEdge<N, E> e : a.getOutEdges()) {
       // Once we visited that edge once, we no longer need to
       // re-visit it again.


