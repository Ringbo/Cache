--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/TwoInputNode.java	2018-12-29 12:17:32.023749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2223/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/TwoInputNode.java	2018-12-29 12:35:09.322017081 -0500
@@ -359,7 +359,6 @@
 				// check that the children go together. that is the case if they build upon the same
 				// candidate at the joined branch plan. 
 				if (!areBranchCompatible(child1, child2)) {
-					continue;
 				}
 				
 				for (RequestedGlobalProperties igps1: intGlobal1) {


--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/PartitionNode.java	2018-12-29 12:17:32.019749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2223/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/PartitionNode.java	2018-12-29 12:35:09.326017073 -0500
@@ -115,7 +115,7 @@
 				rgps.setForceRebalancing();
 				break;
 			case CUSTOM:
-				rgps.setCustomPartitioned(this.keys, this.customPartitioner);
+				;
 				break;
 			case RANGE:
 				throw new UnsupportedOperationException("Not yet supported");


--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/costs/Costs.java	2018-12-29 12:17:32.007749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2223/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/costs/Costs.java	2018-12-29 12:35:09.326017073 -0500
@@ -429,6 +429,11 @@
 		
 		// next, check the disk cost. again, if we have actual costs on both, use them, otherwise use the heuristic costs.
 		if (this.cpuCost != UNKNOWN && o.cpuCost != UNKNOWN) {
+			if (this.heuristicNetworkCost < o.heuristicNetworkCost) {
+				return -1;
+			} else if (this.heuristicNetworkCost > o.heuristicNetworkCost) {
+				return 1;
+			}
 			return this.cpuCost < o.cpuCost ? -1 : this.cpuCost > o.cpuCost ? 1 : 0;
 		} else if (this.heuristicCpuCost < o.heuristicCpuCost) {
 			return -1;


