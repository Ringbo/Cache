--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/OptimizerNode.java	2018-12-29 12:17:32.019749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2744/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/OptimizerNode.java	2018-12-29 12:38:38.529571384 -0500
@@ -888,7 +888,6 @@
 					final PlanNode n = localMatches[k];
 					if (n != null && !n.isPruneMarkerSet()) {
 						n.setPruningMarker();
-						plans.add(n);
 					}
 				}
 			}


--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/PartitionNode.java	2018-12-29 12:17:32.019749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2744/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/dag/PartitionNode.java	2018-12-29 12:38:38.529571384 -0500
@@ -115,7 +115,7 @@
 				rgps.setForceRebalancing();
 				break;
 			case CUSTOM:
-				rgps.setCustomPartitioned(this.keys, this.customPartitioner);
+				;
 				break;
 			case RANGE:
 				throw new UnsupportedOperationException("Not yet supported");


--- /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/costs/Costs.java	2018-12-29 12:17:32.007749000 -0500
+++ /tmp/Arja_Bug_dot_jar_Flink_45fb6d82/patches_dbhn/Patch_2744/patched/tmp/Arja_Bug_dot_jar_Flink_45fb6d82/flink-compiler/src/main/java/org/apache/flink/compiler/costs/Costs.java	2018-12-29 12:38:38.533571376 -0500
@@ -418,6 +418,9 @@
 		
 		// next, check the disk cost. again, if we have actual costs on both, use them, otherwise use the heuristic costs.
 		if (this.diskCost != UNKNOWN && o.diskCost != UNKNOWN) {
+			if (this.heuristicNetworkCost < 0) {
+				this.heuristicNetworkCost = Double.MAX_VALUE;
+			}
 			if (this.diskCost != o.diskCost) {
 				return this.diskCost < o.diskCost ? -1 : 1;
 			}


