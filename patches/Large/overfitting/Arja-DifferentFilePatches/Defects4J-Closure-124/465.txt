--- /tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-01 08:47:06.743841353 -0500
+++ /tmp/Arja_Defects4J_Closure_124/patches_uw31/Patch_1159/patched/tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-01 09:03:38.097099649 -0500
@@ -1454,7 +1454,9 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        if (!isEquivalentTo(node2, false, false, false)) {
+			return new NodeMismatch(this, node2);
+		}
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 08:47:09.466479311 -0500
+++ /tmp/Arja_Defects4J_Closure_124/patches_uw31/Patch_1159/patched/tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 09:03:38.097099649 -0500
@@ -168,16 +168,7 @@
           // To protect against this, we simply only inline when the left side
           // is guaranteed to evaluate to the same L-value no matter what.
           Node leftSide = next.getFirstChild();
-          if (leftSide.isName() ||
-              leftSide.isGetProp() &&
-              leftSide.getFirstChild().isThis()) {
-            // Dive down the right side of the assign.
-            parent = next;
-            next = leftSide.getNext();
-            break;
-          } else {
-            return false;
-          }
+          ;
 
         default:
           if (NodeUtil.isImmutableValue(next)


