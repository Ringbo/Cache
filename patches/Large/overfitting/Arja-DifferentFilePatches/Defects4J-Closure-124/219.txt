--- /tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-01 08:47:06.743841353 -0500
+++ /tmp/Arja_Defects4J_Closure_124/patches_uw31/Patch_173/patched/tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-01 08:54:58.970189142 -0500
@@ -1454,7 +1454,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 08:47:09.466479311 -0500
+++ /tmp/Arja_Defects4J_Closure_124/patches_uw31/Patch_173/patched/tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 08:54:58.970189142 -0500
@@ -52,7 +52,6 @@
       reportCodeChange();
     } else if (isCollapsibleValue(rightValue, false) &&
         collapseAssignEqualTo(expr, exprParent, rightValue)) {
-      reportCodeChange();
     } else if (rightValue.isAssign()) {
       // Recursively deal with nested assigns.
       collapseAssign(rightValue, expr, exprParent);
@@ -174,7 +173,7 @@
             // Dive down the right side of the assign.
             parent = next;
             next = leftSide.getNext();
-            break;
+            return false;
           } else {
             return false;
           }


