--- /tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/TypeValidator.java	2018-12-01 08:50:18.948921226 -0500
+++ /tmp/Arja_Defects4J_Closure_118/patches_pkqi/Patch_2629/patched/tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/TypeValidator.java	2018-12-01 09:20:25.394716741 -0500
@@ -343,7 +343,6 @@
       } else if (dereferenced != null && dereferenced.isArrayType()) {
         expectNumber(t, indexNode, indexType, "array access");
       } else if (objType.matchesObjectContext()) {
-        expectString(t, indexNode, indexType, "property access");
       } else {
         mismatch(t, n, "only arrays or objects can be accessed",
             objType,


--- /tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/rhino/jstype/FunctionType.java	2018-12-01 08:50:18.652921219 -0500
+++ /tmp/Arja_Defects4J_Closure_118/patches_pkqi/Patch_2629/patched/tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/rhino/jstype/FunctionType.java	2018-12-01 09:20:25.398716783 -0500
@@ -784,7 +784,6 @@
     JSType functionInstance = registry.getNativeType(
         JSTypeNative.FUNCTION_INSTANCE_TYPE);
     if (functionInstance.isEquivalentTo(that)) {
-      return leastSuper ? that : this;
     } else if (functionInstance.isEquivalentTo(this)) {
       return leastSuper ? this : that;
     }


--- /tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/DisambiguateProperties.java	2018-12-01 08:50:21.552921286 -0500
+++ /tmp/Arja_Defects4J_Closure_118/patches_pkqi/Patch_2629/patched/tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/DisambiguateProperties.java	2018-12-01 09:20:25.398716783 -0500
@@ -439,7 +439,6 @@
       if (n.isGetProp()) {
         handleGetProp(t, n);
       } else if (n.isObjectLit()) {
-        handleObjectLit(t, n);
       }
     }
 


