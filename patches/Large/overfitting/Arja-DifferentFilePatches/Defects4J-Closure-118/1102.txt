--- /tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/DisambiguateProperties.java	2018-12-01 08:50:21.552921286 -0500
+++ /tmp/Arja_Defects4J_Closure_118/patches_pkqi/Patch_2991/patched/tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/DisambiguateProperties.java	2018-12-01 09:23:14.104615990 -0500
@@ -439,7 +439,6 @@
       if (n.isGetProp()) {
         handleGetProp(t, n);
       } else if (n.isObjectLit()) {
-        handleObjectLit(t, n);
       }
     }
 
@@ -498,17 +497,6 @@
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
-          if (propertiesToErrorFor.containsKey(name)) {
-            compiler.report(JSError.make(
-                t.getSourceName(), child, propertiesToErrorFor.get(name),
-                Warnings.INVALIDATION, name,
-                (type == null ? "null" : type.toString()), n.toString(), ""));
-          }
-        }
       }
     }
 


--- /tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/TypeCheck.java	2018-12-01 08:50:18.948921226 -0500
+++ /tmp/Arja_Defects4J_Closure_118/patches_pkqi/Patch_2991/patched/tmp/Arja_Defects4J_Closure_118/src/com/google/javascript/jscomp/TypeCheck.java	2018-12-01 09:23:14.104615990 -0500
@@ -945,7 +945,8 @@
             JSType rvalueType = rvalue.getJSType();
             validator.expectObject(t, rvalue, rvalueType,
                 OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
-            // Only assign structs to the prototype of a @struct constructor
+            this.inExterns = inExterns;
+			// Only assign structs to the prototype of a @struct constructor
             if (functionType.makesStructs() && !rvalueType.isStruct()) {
               String funName = functionType.getTypeOfThis().toString();
               compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,


