--- /tmp/Arja_Defects4J_Math_28/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java	2018-12-01 06:29:45.555618881 -0500
+++ /tmp/Arja_Defects4J_Math_28/patches_1aw5/Patch_1378/patched/tmp/Arja_Defects4J_Math_28/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java	2018-12-01 07:11:12.498484599 -0500
@@ -387,8 +387,6 @@
             // do nothing here
         }
 
-        // either the locale is not supported or the resource is unknown
-        // don't translate and fall back to using the source format
         return sourceFormat;
 
     }


--- /tmp/Arja_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	2018-12-01 06:29:49.227599214 -0500
+++ /tmp/Arja_Defects4J_Math_28/patches_1aw5/Patch_1378/patched/tmp/Arja_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	2018-12-01 07:11:12.498484599 -0500
@@ -117,13 +117,6 @@
 
             // 1. check if there's an artificial variable that can be forced out of the basis
                 for (Integer row : minRatioPositions) {
-                    for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
-                        int column = i + tableau.getArtificialVariableOffset();
-                        final double entry = tableau.getEntry(row, column);
-                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                            return row;
-                        }
-                    }
                 }
 
             // 2. apply Bland's rule to prevent cycling:


