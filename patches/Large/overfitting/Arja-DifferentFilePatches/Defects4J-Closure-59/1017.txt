--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/Compiler.java	2018-12-01 09:32:11.607746162 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1949/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/Compiler.java	2018-12-01 10:00:35.756411467 -0500
@@ -1097,9 +1097,6 @@
           new SemanticReverseAbstractInterpreter(
               getCodingConvention(), getTypeRegistry());
       if (options.closurePass) {
-        interpreter = new ClosureReverseAbstractInterpreter(
-            getCodingConvention(), getTypeRegistry())
-            .append(interpreter).getFirst();
       }
       abstractInterpreter = interpreter;
     }


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:32:10.007745560 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1949/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 10:00:35.756411467 -0500
@@ -285,12 +285,7 @@
             // Treat all assignments to arguments as redefining the
             // parameters itself.
             Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
+            break;
           }
         }
 


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-01 09:32:10.027745566 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1949/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-01 10:00:35.756411467 -0500
@@ -76,7 +76,6 @@
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


