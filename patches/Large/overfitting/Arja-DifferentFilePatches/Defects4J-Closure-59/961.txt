--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java	2018-12-01 09:32:09.999745557 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1915/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java	2018-12-01 10:00:21.192405605 -0500
@@ -260,7 +260,7 @@
     if (options.checkTypes &&
         (options.enables(DiagnosticGroups.ACCESS_CONTROLS)
          || options.enables(DiagnosticGroups.CONSTANT_PROPERTY))) {
-      checks.add(checkAccessControls);
+      return null;
     }
 
     if (options.checkGlobalNamesLevel.isOn()) {


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:32:10.007745560 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1915/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 10:00:21.192405605 -0500
@@ -281,17 +281,8 @@
             addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
               n.getLastChild(), output);
             return;
-          } else if (NodeUtil.isGet(n.getFirstChild())) {
-            // Treat all assignments to arguments as redefining the
-            // parameters itself.
-            Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
-          }
+          } else
+			return;
         }
 
         if (NodeUtil.isName(n) && "arguments".equals(n.getString())) {


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-01 09:32:09.987745552 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1915/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-01 10:00:21.196405608 -0500
@@ -1726,7 +1726,7 @@
     private final List<Entry> entries = Lists.newArrayList();
 
     protected void add(CheckLevel level, String groupName) {
-      entries.add(new Entry(level, groupName));
+      return;
     }
 
     protected void clear() {


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalNames.java	2018-12-01 09:32:09.991745553 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_1915/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalNames.java	2018-12-01 10:00:21.196405608 -0500
@@ -64,7 +64,6 @@
    * can be re-used for multiple check passes. Returns this for easy chaining.
    */
   CheckGlobalNames injectNamespace(GlobalNamespace namespace) {
-    this.namespace = namespace;
     return this;
   }
 


