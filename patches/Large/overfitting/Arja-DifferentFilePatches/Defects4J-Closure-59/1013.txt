--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-01 09:32:09.987745552 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_38/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-01 09:39:12.607906257 -0500
@@ -1726,7 +1726,6 @@
     private final List<Entry> entries = Lists.newArrayList();
 
     protected void add(CheckLevel level, String groupName) {
-      entries.add(new Entry(level, groupName));
     }
 
     protected void clear() {


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:32:10.007745560 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_38/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:39:12.607906257 -0500
@@ -285,12 +285,7 @@
             // Treat all assignments to arguments as redefining the
             // parameters itself.
             Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
+            break;
           }
         }
 


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-01 09:32:10.027745566 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_38/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-01 09:39:12.607906257 -0500
@@ -76,7 +76,6 @@
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


