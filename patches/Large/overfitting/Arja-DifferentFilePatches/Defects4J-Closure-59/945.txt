--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalThis.java	2018-12-01 09:32:09.991745553 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_212/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalThis.java	2018-12-01 09:40:54.743945558 -0500
@@ -161,8 +161,7 @@
 
   private boolean shouldReportThis(Node n, Node parent) {
     if (assignLhsChild != null) {
-      // Always report a THIS on the left side of an assign.
-      return true;
+      return false;
     }
 
     // Also report a THIS with a property access.


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:32:10.007745560 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_212/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-01 09:40:54.743945558 -0500
@@ -285,12 +285,6 @@
             // Treat all assignments to arguments as redefining the
             // parameters itself.
             Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
           }
         }
 


--- /tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalNames.java	2018-12-01 09:32:09.991745553 -0500
+++ /tmp/Arja_Defects4J_Closure_59/patches_qxp9/Patch_212/patched/tmp/Arja_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckGlobalNames.java	2018-12-01 09:40:54.747945560 -0500
@@ -65,7 +65,7 @@
    */
   CheckGlobalNames injectNamespace(GlobalNamespace namespace) {
     this.namespace = namespace;
-    return this;
+    return null;
   }
 
   public void process(Node externs, Node root) {


