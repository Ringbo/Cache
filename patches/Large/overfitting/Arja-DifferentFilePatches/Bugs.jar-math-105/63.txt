--- /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/util/FastMath.java	2018-12-29 06:15:23.019936000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/patches_nwue/Patch_1378/patched/tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/util/FastMath.java	2018-12-29 07:27:13.493146755 -0500
@@ -3286,7 +3286,14 @@
         } else if (d == 0) {
             return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;
         }
-        // special cases MAX_VALUE to infinity and  MIN_VALUE to 0
+        if (d == direction) {
+			return direction;
+		} else if (Double.isInfinite(d)) {
+			return (d < 0) ? -Double.MAX_VALUE : Double.MAX_VALUE;
+		} else if (d == 0) {
+			return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;
+		}
+		// special cases MAX_VALUE to infinity and  MIN_VALUE to 0
         // are handled just as normal numbers
         // can use raw bits since already dealt with infinity and NaN
         final long bits = Double.doubleToRawLongBits(d);


--- /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 06:15:22.627928000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/patches_nwue/Patch_1378/patched/tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 07:27:13.493146755 -0500
@@ -131,7 +131,11 @@
       // first stage
       computeDerivatives(stepStart, y, yDotK[0]);
 
-      // next stages
+      if ((forward && (stepStart + stepSize > t))
+			|| ((!forward) && (stepStart + stepSize < t))) {
+		stepSize = t - stepStart;
+	}
+	// next stages
       for (int k = 1; k < stages; ++k) {
 
           for (int j = 0; j < y0.length; ++j) {


