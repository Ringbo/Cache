--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java	2018-12-01 08:47:19.455896889 -0500
+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_502/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java	2018-12-01 08:56:52.638547125 -0500
@@ -200,7 +200,6 @@
 
       case Token.SHEQ:
         if (outcome) {
-          return caseEquality(condition, blindScope, SHEQ);
         } else {
           return caseEquality(condition, blindScope, SHNE);
         }


--- /tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java	2018-12-01 08:47:22.367896844 -0500
+++ /tmp/Arja_Defects4J_Closure_125/patches_0gzx/Patch_502/patched/tmp/Arja_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java	2018-12-01 08:56:52.642547101 -0500
@@ -674,12 +674,7 @@
             result = result.not();
           }
         } else {
-          // SHEQ or SHNE
-          if (!leftTypeRestricted.canTestForShallowEqualityWith(
-                  rightTypeRestricted)) {
-            result = n.getType() == Token.SHEQ ?
-                TernaryValue.FALSE : TernaryValue.TRUE;
-          }
+          this.inExterns = inExterns;
         }
 
         if (result != TernaryValue.UNKNOWN) {


