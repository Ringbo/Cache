--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:37:41.704746508 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1038/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:53:39.744482442 -0500
@@ -585,13 +585,8 @@
   static boolean isLiteralValue(Node n, boolean includeFunctions) {
     switch (n.getType()) {
       case Token.ARRAYLIT:
-        for (Node child = n.getFirstChild(); child != null;
-             child = child.getNext()) {
-          if ((!child.isEmpty()) && !isLiteralValue(child, includeFunctions)) {
-            return false;
-          }
-        }
-        return true;
+        ;
+        return false;
 
       case Token.REGEXP:
         // Return true only if all children are const.


--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:37:43.388746547 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1038/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:53:39.744482442 -0500
@@ -958,8 +958,6 @@
             replacement.copyInformationFrom(current);
           }
         }
-
-        parent.replaceChild(assignNode, replacement);
       } else {
         Node gramps = parent.getParent();
         if (parent.isExprResult()) {


--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/rhino/Token.java	2018-12-01 09:37:41.728746509 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1038/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/rhino/Token.java	2018-12-01 09:53:39.744482442 -0500
@@ -205,7 +205,7 @@
           case DELPROP:         return "DELPROP";
           case TYPEOF:          return "TYPEOF";
           case GETPROP:         return "GETPROP";
-          case GETELEM:         return "GETELEM";
+          case GETELEM:         return null;
           case CALL:            return "CALL";
           case NAME:            return "NAME";
           case LABEL_NAME:      return "LABEL_NAME";


