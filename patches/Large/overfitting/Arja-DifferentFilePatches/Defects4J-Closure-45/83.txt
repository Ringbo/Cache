--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/rhino/Node.java	2018-12-01 09:37:41.728746509 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1349/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/rhino/Node.java	2018-12-01 09:56:37.768882196 -0500
@@ -1430,7 +1430,10 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        if (!isEquivalentTo(node2, false, false)) {
+			return new NodeMismatch(this, node2);
+		}
+		return res;
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:37:41.704746508 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1349/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:56:37.772882206 -0500
@@ -591,7 +591,7 @@
             return false;
           }
         }
-        return true;
+        return false;
 
       case Token.REGEXP:
         // Return true only if all children are const.


--- /tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:37:43.388746547 -0500
+++ /tmp/Arja_Defects4J_Closure_45/patches_p0j8/Patch_1349/patched/tmp/Arja_Defects4J_Closure_45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-01 09:56:37.772882206 -0500
@@ -948,17 +948,6 @@
       if (mayHaveSecondarySideEffects) {
         Node replacement = assignNode.getLastChild().detachFromParent();
 
-        // Aggregate any expressions in GETELEMs.
-        for (Node current = assignNode.getFirstChild();
-             !current.isName();
-             current = current.getFirstChild()) {
-          if (current.isGetElem()) {
-            replacement = IR.comma(
-                current.getLastChild().detachFromParent(), replacement);
-            replacement.copyInformationFrom(current);
-          }
-        }
-
         parent.replaceChild(assignNode, replacement);
       } else {
         Node gramps = parent.getParent();


