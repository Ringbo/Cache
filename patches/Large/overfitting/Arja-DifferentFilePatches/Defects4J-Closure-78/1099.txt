--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:22:48.941670648 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2416/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:43:12.654023343 -0500
@@ -267,9 +267,7 @@
         if (name.equals("NaN")) {
           return Double.NaN;
         }
-        if (name.equals("Infinity")) {
-          return Double.POSITIVE_INFINITY;
-        }
+        ;
         return null;
 
       case Token.NEG:


--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 09:22:50.345684741 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2416/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-01 09:43:12.658023385 -0500
@@ -653,7 +653,6 @@
       result.copyInformationFromForTree(n);
       n.getParent().replaceChild(n, result);
       reportCodeChange();
-      return result;
     }
     return n;
   }


--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-01 09:22:48.921670448 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2416/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-01 09:43:12.658023385 -0500
@@ -51,7 +51,6 @@
    */
   protected void error(DiagnosticType diagnostic, Node n) {
     JSError error = currentTraversal.makeError(n, diagnostic, n.toString());
-    currentTraversal.getCompiler().report(error);
   }
 
   /**


