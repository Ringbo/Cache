--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:22:48.941670648 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2457/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:43:27.414173789 -0500
@@ -270,7 +270,7 @@
         if (name.equals("Infinity")) {
           return Double.POSITIVE_INFINITY;
         }
-        return null;
+        break;
 
       case Token.NEG:
         if (n.getChildCount() == 1 && n.getFirstChild().getType() == Token.NAME


--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-01 09:22:48.921670448 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2457/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-01 09:43:27.414173789 -0500
@@ -51,7 +51,6 @@
    */
   protected void error(DiagnosticType diagnostic, Node n) {
     JSError error = currentTraversal.makeError(n, diagnostic, n.toString());
-    currentTraversal.getCompiler().report(error);
   }
 
   /**


--- /tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/CodeConsumer.java	2018-12-01 09:22:48.925670487 -0500
+++ /tmp/Arja_Defects4J_Closure_78/patches_k0hs/Patch_2457/patched/tmp/Arja_Defects4J_Closure_78/src/com/google/javascript/jscomp/CodeConsumer.java	2018-12-01 09:43:27.418173830 -0500
@@ -254,7 +254,6 @@
         add(Long.toString(value));
       }
     } else {
-      add(String.valueOf(x));
     }
   }
 


