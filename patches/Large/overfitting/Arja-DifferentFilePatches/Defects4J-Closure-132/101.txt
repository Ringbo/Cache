--- /tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/rhino/Node.java	2018-12-01 08:47:12.836609632 -0500
+++ /tmp/Arja_Defects4J_Closure_132/patches_y19z/Patch_1551/patched/tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/rhino/Node.java	2018-12-01 09:10:39.045839240 -0500
@@ -1443,7 +1443,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


--- /tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/rhino/IR.java	2018-12-01 08:47:12.600609744 -0500
+++ /tmp/Arja_Defects4J_Closure_132/patches_y19z/Patch_1551/patched/tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/rhino/IR.java	2018-12-01 09:10:39.045839240 -0500
@@ -338,7 +338,6 @@
   }
 
   public static Node hook(Node cond, Node trueval, Node falseval) {
-    Preconditions.checkState(mayBeExpression(cond));
     Preconditions.checkState(mayBeExpression(trueval));
     Preconditions.checkState(mayBeExpression(falseval));
     return new Node(Token.HOOK, cond, trueval, falseval);


--- /tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	2018-12-01 08:47:15.468608427 -0500
+++ /tmp/Arja_Defects4J_Closure_132/patches_y19z/Patch_1551/patched/tmp/Arja_Defects4J_Closure_132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	2018-12-01 09:10:39.049839245 -0500
@@ -794,7 +794,7 @@
             parent.replaceChild(n, expr);
             reportCodeChange();
 
-            return expr;
+            return null;
           }
         }
       }


