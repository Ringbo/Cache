--- /tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java	2018-12-01 08:41:42.641290161 -0500
+++ /tmp/Arja_Defects4J_Mockito_10/patches_jed8/Patch_1375/patched/tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java	2018-12-01 08:53:27.191264008 -0500
@@ -212,7 +212,11 @@
         // logger.log("Method '" + method.toGenericString() + "' has return type : " + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + " : " + genericReturnType);
 
         if (genericReturnType instanceof Class) {
-            return new NotGenericReturnTypeSupport(genericReturnType);
+			return new NotGenericReturnTypeSupport(genericReturnType);
+		}
+		if (genericReturnType instanceof Class) {
+            return new TypeVariableReturnType(this, method.getTypeParameters(),
+					(TypeVariable) genericReturnType);
         }
         if (genericReturnType instanceof ParameterizedType) {
             return new ParameterizedReturnType(this, method.getTypeParameters(), (ParameterizedType) method.getGenericReturnType());
@@ -279,7 +283,12 @@
                 Type rawType = ((ParameterizedType) genericSuperclass).getRawType();
                 return (Class) rawType;
             }
-            return (Class) genericSuperclass;
+            if (genericSuperclass instanceof ParameterizedType) {
+				Type rawType = ((ParameterizedType) genericSuperclass)
+						.getRawType();
+				return (Class) rawType;
+			}
+			return (Class) genericSuperclass;
         }
 
         private void readActualTypeParametersOnDeclaringClass(Class<?> clazz) {


--- /tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/MockCreationValidator.java	2018-12-01 08:41:42.641290161 -0500
+++ /tmp/Arja_Defects4J_Mockito_10/patches_jed8/Patch_1375/patched/tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/MockCreationValidator.java	2018-12-01 08:53:27.191264008 -0500
@@ -60,7 +60,6 @@
                 && !(Serializable.class.isAssignableFrom(classToMock))
                 && Constructors.noArgConstructorOf(classToMock) == null
                 ) {
-            new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(classToMock);
         }
     }
 }
\ No newline at end of file


