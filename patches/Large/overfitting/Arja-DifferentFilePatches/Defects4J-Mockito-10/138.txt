--- /tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java	2018-12-01 08:41:42.641290161 -0500
+++ /tmp/Arja_Defects4J_Mockito_10/patches_jed8/Patch_2439/patched/tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java	2018-12-01 08:59:24.258243729 -0500
@@ -274,7 +274,10 @@
         }
 
         private Class superClassOf(Class currentExploredClass) {
-            Type genericSuperclass = currentExploredClass.getGenericSuperclass();
+            for (Type genericInterface : clazz.getGenericInterfaces()) {
+				registerTypeVariablesOn(genericInterface);
+			}
+			Type genericSuperclass = currentExploredClass.getGenericSuperclass();
             if (genericSuperclass instanceof ParameterizedType) {
                 Type rawType = ((ParameterizedType) genericSuperclass).getRawType();
                 return (Class) rawType;


--- /tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/MockCreationValidator.java	2018-12-01 08:41:42.641290161 -0500
+++ /tmp/Arja_Defects4J_Mockito_10/patches_jed8/Patch_2439/patched/tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/util/MockCreationValidator.java	2018-12-01 08:59:24.258243729 -0500
@@ -60,7 +60,6 @@
                 && !(Serializable.class.isAssignableFrom(classToMock))
                 && Constructors.noArgConstructorOf(classToMock) == null
                 ) {
-            new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(classToMock);
         }
     }
 }
\ No newline at end of file


--- /tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java	2018-12-01 08:41:46.327132261 -0500
+++ /tmp/Arja_Defects4J_Mockito_10/patches_jed8/Patch_2439/patched/tmp/Arja_Defects4J_Mockito_10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java	2018-12-01 08:59:24.258243729 -0500
@@ -59,13 +59,6 @@
         InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());
         InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();
 
-        // matches invocation for verification
-        for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {
-            if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {
-                return stubbedInvocationMatcher.answer(invocation);
-            }
-        }
-
         // record deep stub answer
         return recordDeepStubAnswer(
                 newDeepStubMock(returnTypeGenericMetadata),


