--- /tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-01 06:59:08.724241483 -0500
+++ /tmp/Arja_Defects4J_Math_8/patches_4ls0/Patch_463/patched/tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-01 07:42:54.308935726 -0500
@@ -1253,7 +1253,11 @@
              throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);
          }
          double sum = 0d;
-         final int len = values.length;
+         if (Double.isNaN(normalizedSum)) {
+			throw new MathIllegalArgumentException(
+					LocalizedFormats.NORMALIZE_NAN);
+		}
+		final int len = values.length;
          double[] out = new double[len];
          for (int i = 0; i < len; i++) {
              if (Double.isInfinite(values[i])) {


--- /tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-01 06:59:12.332259545 -0500
+++ /tmp/Arja_Defects4J_Math_8/patches_4ls0/Patch_463/patched/tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-01 07:42:54.312935751 -0500
@@ -186,9 +186,10 @@
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
+        if (sampleSize < 0) {
+			throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
+					sampleSize);
+		}
 
         return out;
 


