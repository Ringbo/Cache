--- /tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-01 06:59:08.724241483 -0500
+++ /tmp/Arja_Defects4J_Math_8/patches_4ls0/Patch_609/patched/tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-01 07:43:52.881284375 -0500
@@ -1254,7 +1254,11 @@
          }
          double sum = 0d;
          final int len = values.length;
-         double[] out = new double[len];
+         if (Double.isNaN(normalizedSum)) {
+			throw new MathIllegalArgumentException(
+					LocalizedFormats.NORMALIZE_NAN);
+		}
+		double[] out = new double[len];
          for (int i = 0; i < len; i++) {
              if (Double.isInfinite(values[i])) {
                  throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);


--- /tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-01 06:59:12.332259545 -0500
+++ /tmp/Arja_Defects4J_Math_8/patches_4ls0/Patch_609/patched/tmp/Arja_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-01 07:43:52.885284398 -0500
@@ -179,17 +179,8 @@
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
-        if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
-        }
-
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
-
         return out;
 
     }


