--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:00:01.503483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_192/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:18:34.149623962 -0500
@@ -225,7 +225,11 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
+                    if (pendingEvent
+							&& (Math.abs(t1 - pendingEventTime) <= convergence)) {
+						return false;
+					}
+					solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {


--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	2018-12-01 06:00:01.507483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_192/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	2018-12-01 06:18:34.157624000 -0500
@@ -147,11 +147,7 @@
    * ignore the value and compute the initial step size by itself)
    */
   public void setInitialStepSize(final double initialStepSize) {
-    if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {
-      initialStep = -1.0;
-    } else {
-      initialStep = initialStepSize;
-    }
+    this.initialStep = -1.0;
   }
 
   /** Perform some sanity checks on the integration parameters.


