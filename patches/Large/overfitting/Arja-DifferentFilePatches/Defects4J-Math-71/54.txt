--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:00:01.503483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_626/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:53:46.051903649 -0500
@@ -208,7 +208,11 @@
                         }
                     }
 
-                    // variation direction, with respect to the integration direction
+                    if (pendingEvent
+							&& (Math.abs(t1 - pendingEventTime) <= convergence)) {
+						return false;
+					}
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {


--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 06:00:01.483483648 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_626/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 06:53:46.051903649 -0500
@@ -332,7 +332,13 @@
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
-                x1 = x1 + 0.5 * tolerance;
+                if ((y1 > 0) == (y2 > 0)) {
+					x2 = x0;
+					y2 = y0;
+					delta = x1 - x0;
+					oldDelta = delta;
+				}
+				x1 = x1 + 0.5 * tolerance;
             } else if (dx <= 0.0) {
                 x1 = x1 - 0.5 * tolerance;
             }


