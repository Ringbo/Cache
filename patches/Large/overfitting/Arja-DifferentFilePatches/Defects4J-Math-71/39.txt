--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:00:01.503483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_819/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 07:09:38.480501680 -0500
@@ -208,7 +208,11 @@
                         }
                     }
 
-                    // variation direction, with respect to the integration direction
+                    if (pendingEvent
+							&& (Math.abs(t1 - pendingEventTime) <= convergence)) {
+						return false;
+					}
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {


--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java	2018-12-01 06:00:01.511483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_819/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java	2018-12-01 07:09:38.484501699 -0500
@@ -105,7 +105,8 @@
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
       System.arraycopy(currentState,      0, interpolatedState,       0, currentState.length);
-      System.arraycopy(currentDerivative, 0, interpolatedDerivatives, 0, currentDerivative.length);
+      interpolatedTime = Double.NaN;
+	System.arraycopy(currentDerivative, 0, interpolatedDerivatives, 0, currentDerivative.length);
   }
 
   /** Write the instance to an output channel.


