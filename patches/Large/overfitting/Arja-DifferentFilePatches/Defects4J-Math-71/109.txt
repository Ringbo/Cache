--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:00:01.503483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_202/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java	2018-12-01 06:19:19.649840270 -0500
@@ -208,7 +208,8 @@
                         }
                     }
 
-                    // variation direction, with respect to the integration direction
+                    pendingEvent = true;
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
@@ -337,7 +338,8 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
 
-        return (nextAction == EventHandler.RESET_STATE) ||
+        g0 = Double.NaN;
+		return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
     }


--- /tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	2018-12-01 06:00:01.507483649 -0500
+++ /tmp/Arja_Defects4J_Math_71/patches_6k3o/Patch_202/patched/tmp/Arja_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java	2018-12-01 06:19:19.653840289 -0500
@@ -147,11 +147,6 @@
    * ignore the value and compute the initial step size by itself)
    */
   public void setInitialStepSize(final double initialStepSize) {
-    if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {
-      initialStep = -1.0;
-    } else {
-      initialStep = initialStepSize;
-    }
   }
 
   /** Perform some sanity checks on the integration parameters.


