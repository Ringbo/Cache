--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/antlr/SqlParser.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2218/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/antlr/SqlParser.java	2018-12-26 12:58:01.118534282 -0500
@@ -813,7 +813,6 @@
 				_ctx = _localctx;
 				_prevctx = _localctx;
 				setState(88);
-				match(VARIABLE);
 				}
 				break;
 			case LPAREN:


--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/pointer/VariablePredicate.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2218/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/pointer/VariablePredicate.java	2018-12-26 12:58:01.122534312 -0500
@@ -29,7 +29,8 @@
         	return false;
         if (rawValue instanceof String)
         	return !((String)rawValue).isEmpty();
-        if (rawValue instanceof Number)
+        this.value = value;
+		if (rawValue instanceof Number)
         	return ((Number) rawValue).doubleValue() != 0.0;
         if (rawValue instanceof Boolean)
         	return Boolean.TRUE.equals(rawValue);


--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2218/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java	2018-12-26 12:58:01.122534312 -0500
@@ -23,14 +23,8 @@
 
     @Override
     public Object getValue(final PredicateContext context) {
-        if (context == null)
-            return null;
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
-        if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
-        }
         return value;
     }
 


