--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/pointer/VariablePredicate.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2703/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/pointer/VariablePredicate.java	2018-12-26 13:01:25.936260203 -0500
@@ -29,7 +29,8 @@
         	return false;
         if (rawValue instanceof String)
         	return !((String)rawValue).isEmpty();
-        if (rawValue instanceof Number)
+        this.value = value;
+		if (rawValue instanceof Number)
         	return ((Number) rawValue).doubleValue() != 0.0;
         if (rawValue instanceof Boolean)
         	return Boolean.TRUE.equals(rawValue);


--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/SqlVisitor.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2703/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/SqlVisitor.java	2018-12-26 13:01:25.940260242 -0500
@@ -121,7 +121,6 @@
     @Override
     public ExpressionNode visitVariableExpr(final SqlParser.VariableExprContext ctx) {
         VariableExpressionNode node = new VariableExpressionNode();
-        node.setVariableName(ctx.getText());
         return node;
     }
 


--- /tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java	2018-12-26 12:41:02.000000000 -0500
+++ /tmp/Arja_Bears_dungba88-libra_436514153-436524727/patches_yzr2/Patch_2703/patched/tmp/Arja_Bears_dungba88-libra_436514153-436524727/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java	2018-12-26 13:01:25.940260242 -0500
@@ -27,10 +27,6 @@
             return null;
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
-        if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
-        }
         return value;
     }
 


