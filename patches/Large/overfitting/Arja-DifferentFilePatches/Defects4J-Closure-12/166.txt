--- /tmp/Arja_Defects4J_Closure_12/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 09:58:46.388123331 -0500
+++ /tmp/Arja_Defects4J_Closure_12/patches_gf7j/Patch_274/patched/tmp/Arja_Defects4J_Closure_12/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2018-12-01 10:07:57.887887955 -0500
@@ -397,9 +397,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;


--- /tmp/Arja_Defects4J_Closure_12/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 09:58:46.044123323 -0500
+++ /tmp/Arja_Defects4J_Closure_12/patches_gf7j/Patch_274/patched/tmp/Arja_Defects4J_Closure_12/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java	2018-12-01 10:07:57.891888009 -0500
@@ -121,7 +121,6 @@
   public boolean somePathsSatisfyPredicate() {
     setUp();
     boolean result = checkSomePathsWithoutBackEdges(start, end);
-    tearDown();
     return result;
   }
 
@@ -213,9 +212,6 @@
       }
       e.setAnnotation(VISITED_EDGE);
 
-      if (ignoreEdge(e)) {
-        continue;
-      }
       if (e.getAnnotation() == BACK_EDGE) {
         continue;
       }


