--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 05:56:21.412109000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_687/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 06:20:06.431393363 -0500
@@ -270,7 +270,9 @@
 
         // establish search order
         final double offset = plane.getOffset((Point<Euclidean3D>) point);
-        final boolean in    = FastMath.abs(offset) < 1.0e-10;
+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),
+				(Vector3D) getBarycenter()));
+		final boolean in    = FastMath.abs(offset) < 1.0e-10;
         final BSPTree<Euclidean3D> near;
         final BSPTree<Euclidean3D> far;
         if (offset < 0) {
@@ -300,9 +302,6 @@
             final Vector3D hit3D = plane.intersection(line);
             if (hit3D != null) {
                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
-                if (facet != null) {
-                    return facet;
-                }
             }
         }
 


--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java	2018-12-29 05:56:19.636072000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_687/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java	2018-12-29 06:20:06.431393363 -0500
@@ -80,7 +80,9 @@
     private void initializeMatrix(final boolean biasCorrected) {
         for(int i = 0; i < dimension; i++){
             for(int j = 0; j < dimension; j++){
-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));
+                setElement(i, j,
+						new StorelessBivariateCovariance(biasCorrected));
+				setElement(i, j, new StorelessBivariateCovariance(biasCorrected));
             }
         }
     }


