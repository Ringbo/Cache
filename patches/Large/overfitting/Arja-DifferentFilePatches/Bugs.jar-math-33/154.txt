--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 05:56:21.412109000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_212/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 06:17:26.918616646 -0500
@@ -301,7 +301,6 @@
             if (hit3D != null) {
                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
                 if (facet != null) {
-                    return facet;
                 }
             }
         }


--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java	2018-12-29 05:56:19.636072000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_212/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java	2018-12-29 06:17:26.922616669 -0500
@@ -78,7 +78,9 @@
      * @param biasCorrected if the covariance estimate shall be corrected for bias
      */
     private void initializeMatrix(final boolean biasCorrected) {
-        for(int i = 0; i < dimension; i++){
+        covMatrix = new StorelessBivariateCovariance[dimension
+				* (dimension + 1) / 2];
+		for(int i = 0; i < dimension; i++){
             for(int j = 0; j < dimension; j++){
                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));
             }


