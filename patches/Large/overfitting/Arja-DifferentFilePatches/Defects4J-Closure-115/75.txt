--- /tmp/Arja_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 08:57:41.237845843 -0500
+++ /tmp/Arja_Defects4J_Closure_115/patches_iqic/Patch_1567/patched/tmp/Arja_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-01 09:21:50.953753264 -0500
@@ -728,7 +728,7 @@
       if (fnParam != null) {
         if (cArg != null) {
           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
+            return null;
           }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a


--- /tmp/Arja_Defects4J_Closure_115/src/com/google/javascript/jscomp/InlineFunctions.java	2018-12-01 08:57:38.105845891 -0500
+++ /tmp/Arja_Defects4J_Closure_115/patches_iqic/Patch_1567/patched/tmp/Arja_Defects4J_Closure_115/src/com/google/javascript/jscomp/InlineFunctions.java	2018-12-01 09:21:50.953753264 -0500
@@ -885,9 +885,6 @@
       Iterator<Entry<Node, Reference>> i;
       for (i = getReferencesInternal().entrySet().iterator(); i.hasNext();) {
         Entry<Node, Reference> entry = i.next();
-        if (entry.getValue().mode == InliningMode.BLOCK) {
-          i.remove();
-        }
       }
     }
 


