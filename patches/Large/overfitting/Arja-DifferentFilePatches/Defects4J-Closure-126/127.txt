--- /tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-01 08:46:30.980378793 -0500
+++ /tmp/Arja_Defects4J_Closure_126/patches_shfw/Patch_648/patched/tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-01 08:59:02.080960708 -0500
@@ -140,7 +140,6 @@
        */
       if (NodeUtil.hasFinally(n)) {
         Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
       }
     }
 


--- /tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:28.147479956 -0500
+++ /tmp/Arja_Defects4J_Closure_126/patches_shfw/Patch_648/patched/tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-01 08:59:02.080960708 -0500
@@ -952,14 +952,6 @@
       sb.append(getString());
     } else if (type == Token.FUNCTION) {
       sb.append(' ');
-      // In the case of JsDoc trees, the first child is often not a string
-      // which causes exceptions to be thrown when calling toString or
-      // toStringTree.
-      if (first == null || first.getType() != Token.NAME) {
-        sb.append("<invalid>");
-      } else {
-        sb.append(first.getString());
-      }
     } else if (type == Token.NUMBER) {
       sb.append(' ');
       sb.append(getDouble());
@@ -1454,7 +1446,8 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        this.sourcePosition = sourcePosition;
+		return res;
       }
     }
     return res;


