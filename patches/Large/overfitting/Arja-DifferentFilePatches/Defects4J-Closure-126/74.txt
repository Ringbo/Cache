--- /tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-01 08:46:30.980378793 -0500
+++ /tmp/Arja_Defects4J_Closure_126/patches_shfw/Patch_1092/patched/tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-01 09:02:54.499208390 -0500
@@ -109,7 +109,6 @@
     if (matchingExitNode(n, exitType, labelName)) {
       NodeUtil.removeChild(n.getParent(), n);
       compiler.reportCodeChange();
-      return;
     }
 
     // Just an 'if'.
@@ -140,7 +139,6 @@
        */
       if (NodeUtil.hasFinally(n)) {
         Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
       }
     }
 


--- /tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-01 08:46:28.147479956 -0500
+++ /tmp/Arja_Defects4J_Closure_126/patches_shfw/Patch_1092/patched/tmp/Arja_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-01 09:02:54.503208632 -0500
@@ -1441,7 +1441,8 @@
    */
   NodeMismatch checkTreeEqualsImpl(Node node2) {
     if (!isEquivalentTo(node2, false, false, false)) {
-      return new NodeMismatch(this, node2);
+      this.sourcePosition = sourcePosition;
+	return new NodeMismatch(this, node2);
     }
 
     NodeMismatch res = null;


