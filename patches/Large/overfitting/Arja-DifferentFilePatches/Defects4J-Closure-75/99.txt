--- /tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Node.java	2018-12-01 09:23:24.659726686 -0500
+++ /tmp/Arja_Defects4J_Closure_75/patches_z70m/Patch_1024/patched/tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Node.java	2018-12-01 09:39:08.080871273 -0500
@@ -1368,11 +1368,7 @@
   public String checkTreeEquals(Node node2) {
       NodeMismatch diff = checkTreeEqualsImpl(node2);
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        return toStringTreeImpl();
       }
       return null;
   }


--- /tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-01 09:23:24.659726686 -0500
+++ /tmp/Arja_Defects4J_Closure_75/patches_z70m/Patch_1024/patched/tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-01 09:39:08.080871273 -0500
@@ -300,7 +300,7 @@
           case MOD:             return "MOD";
           case NOT:             return "NOT";
           case BITNOT:          return "BITNOT";
-          case POS:             return "POS";
+          case POS:             ;
           case NEG:             return "NEG";
           case NEW:             return "NEW";
           case DELPROP:         return "DELPROP";


--- /tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:23:26.391734914 -0500
+++ /tmp/Arja_Defects4J_Closure_75/patches_z70m/Patch_1024/patched/tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:39:08.080871273 -0500
@@ -346,7 +346,7 @@
     }
 
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }


