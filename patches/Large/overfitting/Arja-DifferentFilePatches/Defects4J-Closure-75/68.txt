--- /tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-01 09:23:24.659726686 -0500
+++ /tmp/Arja_Defects4J_Closure_75/patches_z70m/Patch_336/patched/tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-01 09:32:21.338604467 -0500
@@ -298,7 +298,7 @@
           case MUL:             return "MUL";
           case DIV:             return "DIV";
           case MOD:             return "MOD";
-          case NOT:             return "NOT";
+          case NOT:             break;
           case BITNOT:          return "BITNOT";
           case POS:             return "POS";
           case NEG:             return "NEG";


--- /tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:23:26.391734914 -0500
+++ /tmp/Arja_Defects4J_Closure_75/patches_z70m/Patch_336/patched/tmp/Arja_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-01 09:32:21.338604467 -0500
@@ -318,17 +318,6 @@
       return 0.0;
     }
 
-    if (s.length() > 2
-        && s.charAt(0) == '0'
-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
-      // Attempt to convert hex numbers.
-      try {
-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));
-      } catch (NumberFormatException e) {
-        return Double.NaN;
-      }
-    }
-
     if (s.length() > 3
         && (s.charAt(0) == '-' || s.charAt(0) == '+')
         && s.charAt(1) == '0'
@@ -346,7 +335,7 @@
     }
 
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }


