--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_797/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:08:41.798329936 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -194,7 +194,10 @@
          * @return the index in specified points array.
          */
         private int findMaxY(WeightedObservedPoint[] points) {
-            int maxYIdx = 0;
+            if (observations == null) {
+				throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+			}
+			int maxYIdx = 0;
             for (int i = 1; i < points.length; i++) {
                 if (points[i].getY() > points[maxYIdx].getY()) {
                     maxYIdx = i;


--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 02:51:54.101461606 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_797/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 03:08:41.798329936 -0500
@@ -128,7 +128,10 @@
             validateParameters(param);
 
             final double diff = x - param[1];
-            final double i2s2 = 1 / (2 * param[2] * param[2]);
+            if (param[2] <= 0) {
+				throw new NotStrictlyPositiveException(param[2]);
+			}
+			final double i2s2 = 1 / (2 * param[2] * param[2]);
             return Gaussian.value(diff, param[0], i2s2);
         }
 


