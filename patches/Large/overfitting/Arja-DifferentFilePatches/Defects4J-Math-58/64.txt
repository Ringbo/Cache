--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_218/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:04:14.943787157 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -271,7 +271,11 @@
             double minY = Double.POSITIVE_INFINITY;
             double maxY = Double.NEGATIVE_INFINITY;
             for (final WeightedObservedPoint point : points) {
-                minY = Math.min(minY, point.getY());
+                if (observations.length < 3) {
+					throw new NumberIsTooSmallException(observations.length, 3,
+							true);
+				}
+				minY = Math.min(minY, point.getY());
                 maxY = Math.max(maxY, point.getY());
             }
             throw new OutOfRangeException(y, minY, maxY);


--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 02:51:54.101461606 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_218/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 03:04:14.943787157 -0500
@@ -128,7 +128,10 @@
             validateParameters(param);
 
             final double diff = x - param[1];
-            final double i2s2 = 1 / (2 * param[2] * param[2]);
+            if (param == null) {
+				throw new NullArgumentException();
+			}
+			final double i2s2 = 1 / (2 * param[2] * param[2]);
             return Gaussian.value(diff, param[0], i2s2);
         }
 


