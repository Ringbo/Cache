--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_636/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:07:21.262805407 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -169,7 +169,12 @@
             Arrays.sort(points, createWeightedObservedPointComparator());
             double[] params = new double[3];
 
-            int maxYIdx = findMaxY(points);
+            if (observations.length < 4) {
+				throw new NumberIsTooSmallException(
+						LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE,
+						observations.length, 4, true);
+			}
+			int maxYIdx = findMaxY(points);
             params[0] = points[maxYIdx].getY();
             params[1] = points[maxYIdx].getX();
 


--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 02:51:54.101461606 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_636/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java	2018-12-02 03:07:21.262805407 -0500
@@ -127,7 +127,10 @@
                             double[] param) {
             validateParameters(param);
 
-            final double diff = x - param[1];
+            if (param[2] <= 0) {
+				throw new NotStrictlyPositiveException(param[2]);
+			}
+			final double diff = x - param[1];
             final double i2s2 = 1 / (2 * param[2] * param[2]);
             return Gaussian.value(diff, param[0], i2s2);
         }


