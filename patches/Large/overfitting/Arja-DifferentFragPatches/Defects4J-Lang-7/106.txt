--- /tmp/Arja_Defects4J_Lang_7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:41:40.203962304 -0500
+++ /tmp/Arja_Defects4J_Lang_7/patches_nbfi/Patch_1455/patched/tmp/Arja_Defects4J_Lang_7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:49:37.734719370 -0500
@@ -450,7 +450,6 @@
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
-            return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
@@ -518,7 +517,19 @@
                 case 'f' :
                 case 'F' :
                     try {
-                        Float f = NumberUtils.createFloat(numeric);
+                        if (str.startsWith("0x") || str.startsWith("-0x")
+								|| str.startsWith("0X")
+								|| str.startsWith("-0X")) {
+							int hexDigits = str.length() - 2;
+							if (str.startsWith("-")) {
+								hexDigits--;
+							}
+							if (hexDigits > 8) {
+								return createLong(str);
+							}
+							return createInteger(str);
+						}
+						Float f = NumberUtils.createFloat(numeric);
                         if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                             //If it's too big for a float or the float value = 0 and the string
                             //has non-zeros in it, then float does not have the precision we want


