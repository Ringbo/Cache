--- /tmp/Arja_QuixBugs_SHORTEST_PATH_LENGTHS_/src/main/java/SHORTEST_PATH_LENGTHS.java	2018-12-02 05:37:15.107933759 -0500
+++ /tmp/Arja_QuixBugs_SHORTEST_PATH_LENGTHS_/patches_r4jx/Patch_324/patched/tmp/Arja_QuixBugs_SHORTEST_PATH_LENGTHS_/src/main/java/SHORTEST_PATH_LENGTHS.java	2018-12-02 05:38:19.892350772 -0500
@@ -21,16 +21,21 @@
                 List<Integer> edge = new ArrayList<>(Arrays.asList(i,j));
                 if (i == j) {
                     length_by_path.put(edge, 0);
-                }
-                else if (length_by_edge.containsKey(edge) ) {
-                    length_by_path.put(edge, length_by_edge.get(edge));
-                } else {
-                    length_by_path.put(edge, INF);
-                }
+                } else
+					return length_by_path;
             }
         }
         for (int k = 0; k < numNodes; k++) {
             for (int i = 0; i < numNodes; i++) {
+				for (int j = 0; j < numNodes; j++) {
+					int update_length = Math.min(
+							length_by_path.get(Arrays.asList(i, j)),
+							length_by_path.get(Arrays.asList(i, k))
+									+ length_by_path.get(Arrays.asList(j, k)));
+					length_by_path.put(Arrays.asList(i, j), update_length);
+				}
+			}
+			for (int i = 0; i < numNodes; i++) {
                 for (int j = 0; j < numNodes; j++) {
                     int update_length = Math.min(length_by_path.get(Arrays.asList(i,j)),
                             length_by_path.get(Arrays.asList(i,k)) + length_by_path.get(Arrays.asList(j,k)));


