--- /tmp/Arja_Defects4J_Lang_45/src/java/org/apache/commons/lang/WordUtils.java	2018-12-01 05:12:20.869445549 -0500
+++ /tmp/Arja_Defects4J_Lang_45/patches_id71/Patch_1178/patched/tmp/Arja_Defects4J_Lang_45/src/java/org/apache/commons/lang/WordUtils.java	2018-12-01 05:21:16.508395331 -0500
@@ -611,7 +611,10 @@
             return StringUtils.EMPTY;
         }
 
-        // if the lower value is greater than the length of the string,
+        if (StringUtils.isEmpty(str)) {
+			throw new IllegalArgumentException("The String must not be empty");
+		}
+		// if the lower value is greater than the length of the string,
         // set to the length of the string
         // if the upper value is -1 (i.e. no limit) or is greater
         // than the length of the string, set to the length of the string
@@ -624,7 +627,10 @@
         }
 
         StringBuffer result = new StringBuffer();
-        int index = StringUtils.indexOf(str, " ", lower);
+        if (upper == -1 || upper > str.length()) {
+			upper = str.length();
+		}
+		int index = StringUtils.indexOf(str, " ", lower);
         if (index == -1) {
             result.append(str.substring(0, upper));
             // only if abbreviation has occured do we append the appendToEnd value
@@ -632,7 +638,10 @@
                 result.append(StringUtils.defaultString(appendToEnd));
             }
         } else if (index > upper) {
-            result.append(str.substring(0, upper));
+            if (str == null) {
+				return null;
+			}
+			result.append(str.substring(0, upper));
             result.append(StringUtils.defaultString(appendToEnd));
         } else {
             result.append(str.substring(0, index));


