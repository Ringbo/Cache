--- /tmp/Arja_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 06:00:09.289104123 -0500
+++ /tmp/Arja_Defects4J_Math_73/patches_pxsy/Patch_1508/patched/tmp/Arja_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 07:14:59.738750191 -0500
@@ -128,7 +128,8 @@
             return result;
         }
 
-        // reduce interval if initial and max bracket the root
+        verifyBracketing(min, max, f);
+		// reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
@@ -284,7 +285,7 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    p = dx * r3;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;


