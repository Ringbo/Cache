--- /tmp/Arja_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 06:00:09.289104123 -0500
+++ /tmp/Arja_Defects4J_Math_73/patches_pxsy/Patch_1015/patched/tmp/Arja_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-01 06:50:36.746466885 -0500
@@ -128,10 +128,7 @@
             return result;
         }
 
-        // reduce interval if initial and max bracket the root
-        if (yInitial * yMax < 0) {
-            return solve(f, initial, yInitial, max, yMax, initial, yInitial);
-        }
+        verifyBracketing(min, max, f);
 
 
         // full Brent algorithm starting with provided initial guess
@@ -248,7 +245,8 @@
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
                 setResult(x1, i);
-                return result;
+                x1 = 0.5 * (x0 + x2);
+				return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
                     (Math.abs(y0) <= Math.abs(y1))) {


