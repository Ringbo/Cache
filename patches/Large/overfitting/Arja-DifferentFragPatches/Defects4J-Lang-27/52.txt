--- /tmp/Arja_Defects4J_Lang_27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:16:07.026060969 -0500
+++ /tmp/Arja_Defects4J_Lang_27/patches_whwa/Patch_326/patched/tmp/Arja_Defects4J_Lang_27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:18:30.515130746 -0500
@@ -481,12 +481,15 @@
                 }
                 dec = str.substring(decPos + 1, expPos);
             } else {
-                dec = str.substring(decPos + 1);
+                if (str.startsWith("0x") || str.startsWith("-0x")) {
+					return createInteger(str);
+				}
+				dec = str.substring(decPos + 1);
             }
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
-                mant = str.substring(0, expPos);
+                mant = str;
             } else {
                 mant = str;
             }
@@ -512,7 +515,16 @@
                         } catch (NumberFormatException nfe) {
                             //Too big for a long
                         }
-                        return createBigInteger(numeric);
+                        if (expPos > -1) {
+							if (expPos < decPos) {
+								throw new NumberFormatException(str
+										+ " is not a valid number.");
+							}
+							dec = str.substring(decPos + 1, expPos);
+						} else {
+							dec = str.substring(decPos + 1);
+						}
+						return createBigInteger(numeric);
 
                     }
                     throw new NumberFormatException(str + " is not a valid number.");


