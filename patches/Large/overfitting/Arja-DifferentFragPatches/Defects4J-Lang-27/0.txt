--- /tmp/Arja_Defects4J_Lang_27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:16:07.026060969 -0500
+++ /tmp/Arja_Defects4J_Lang_27/patches_whwa/Patch_1115/patched/tmp/Arja_Defects4J_Lang_27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:21:31.760482199 -0500
@@ -453,7 +453,10 @@
         if (str == null) {
             return null;
         }
-        if (StringUtils.isBlank(str)) {
+        if (str.startsWith("0x") || str.startsWith("-0x")) {
+			return createInteger(str);
+		}
+		if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
@@ -463,9 +466,6 @@
             // a wrong value.
             return null;
         }
-        if (str.startsWith("0x") || str.startsWith("-0x")) {
-            return createInteger(str);
-        }   
         char lastChar = str.charAt(str.length() - 1);
         String mant;
         String dec;
@@ -486,7 +486,7 @@
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
-                mant = str.substring(0, expPos);
+                mant = str;
             } else {
                 mant = str;
             }
@@ -533,7 +533,7 @@
                 case 'd' :
                 case 'D' :
                     try {
-                        Double d = NumberUtils.createDouble(numeric);
+                        Double d = createDouble(str);
                         if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
                             return d;
                         }


