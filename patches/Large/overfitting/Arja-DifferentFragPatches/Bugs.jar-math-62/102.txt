--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-29 03:53:43.256758000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_678/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-29 04:43:00.644406557 -0500
@@ -128,8 +128,10 @@
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
 
-        // full Brent algorithm starting with provided initial guess
-        return solve(f, min, yMin, max, yMax, initial, yInitial);
+        throw MathRuntimeException.createIllegalArgumentException(
+				"function values at endpoints do not have different signs.  "
+						+ "Endpoints: [{0}, {1}], Values: [{2}, {3}]", min,
+				max, yMin, yMax);
 
     }
 
@@ -243,7 +245,15 @@
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
-                setResult(x1, i);
+                if (Math.abs(y2) < Math.abs(y1)) {
+					x0 = x1;
+					x1 = x2;
+					x2 = x0;
+					y0 = y1;
+					y1 = y2;
+					y2 = y0;
+				}
+				setResult(x1, i);
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||


