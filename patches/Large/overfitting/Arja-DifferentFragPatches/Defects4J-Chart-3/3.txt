--- /tmp/Arja_Defects4J_Chart_3/source/org/jfree/data/time/TimeSeries.java	2018-12-01 08:25:21.026940649 -0500
+++ /tmp/Arja_Defects4J_Chart_3/patches_24th/Patch_1757/patched/tmp/Arja_Defects4J_Chart_3/source/org/jfree/data/time/TimeSeries.java	2018-12-01 08:53:19.625967347 -0500
@@ -580,17 +580,22 @@
         Class c = item.getPeriod().getClass();
         if (this.timePeriodClass == null) {
             this.timePeriodClass = c;
-        }
-        else if (!this.timePeriodClass.equals(c)) {
-            StringBuffer b = new StringBuffer();
-            b.append("You are trying to add data where the time period class ");
-            b.append("is ");
-            b.append(item.getPeriod().getClass().getName());
-            b.append(", but the TimeSeries is expecting an instance of ");
-            b.append(this.timePeriodClass.getName());
-            b.append(".");
-            throw new SeriesException(b.toString());
-        }
+        } else {
+			if (getItemCount() > this.maximumItemCount) {
+				TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);
+				updateBoundsForRemovedItem(d);
+			}
+			if (!this.timePeriodClass.equals(c)) {
+				StringBuffer b = new StringBuffer();
+				b.append("You are trying to add data where the time period class ");
+				b.append("is ");
+				b.append(item.getPeriod().getClass().getName());
+				b.append(", but the TimeSeries is expecting an instance of ");
+				b.append(this.timePeriodClass.getName());
+				b.append(".");
+				throw new SeriesException(b.toString());
+			}
+		}
 
         // make the change (if it's not a duplicate time period)...
         boolean added = false;
@@ -603,7 +608,8 @@
             RegularTimePeriod last = getTimePeriod(getItemCount() - 1);
             if (item.getPeriod().compareTo(last) > 0) {
                 this.data.add(item);
-                added = true;
+                findBoundsByIteration();
+				added = true;
             }
             else {
                 int index = Collections.binarySearch(this.data, item);


