--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:01:13.654047680 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_1141/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:18:54.179455244 -0500
@@ -1046,10 +1046,6 @@
     }
 
     if (call.hasMoreThanOneChild()) {
-      maybeResolveTemplateTypeFromNodes(
-          fnType.getParameters(),
-          call.getChildAtIndex(1).siblings(),
-          resolvedTypes);
     }
     return resolvedTypes;
   }
@@ -1144,14 +1140,6 @@
   private static void resolvedTemplateType(
       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {
     JSType previous = map.get(template);
-    if (!resolved.isUnknownType()) {
-      if (previous == null) {
-        map.put(template, resolved);
-      } else {
-        JSType join = previous.getLeastSupertype(resolved);
-        map.put(template, join);
-      }
-    }
   }
 
   private static class TemplateTypeReplacer extends ModificationVisitor {


