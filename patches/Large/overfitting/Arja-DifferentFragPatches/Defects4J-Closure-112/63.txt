--- /tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:01:13.654047680 -0500
+++ /tmp/Arja_Defects4J_Closure_112/patches_famj/Patch_2688/patched/tmp/Arja_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-01 09:33:09.432035518 -0500
@@ -964,7 +964,6 @@
   private void backwardsInferenceFromCallSite(Node n, FunctionType fnType) {
     boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);
     if (updatedFnType) {
-      fnType = n.getFirstChild().getJSType().toMaybeFunctionType();
     }
     updateTypeOfParameters(n, fnType);
     updateBind(n);
@@ -1046,10 +1045,6 @@
     }
 
     if (call.hasMoreThanOneChild()) {
-      maybeResolveTemplateTypeFromNodes(
-          fnType.getParameters(),
-          call.getChildAtIndex(1).siblings(),
-          resolvedTypes);
     }
     return resolvedTypes;
   }
@@ -1059,9 +1054,6 @@
       JSType argType,
       Map<TemplateType, JSType> resolvedTypes) {
     if (paramType.isTemplateType()) {
-      // @param {T}
-      resolvedTemplateType(
-          resolvedTypes, paramType.toMaybeTemplateType(), argType);
     } else if (paramType.isUnionType()) {
       // @param {Array.<T>|NodeList|Arguments|{length:number}}
       UnionType unionType = paramType.toMaybeUnionType();


