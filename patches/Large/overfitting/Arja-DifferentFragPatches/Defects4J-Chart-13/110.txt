--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-01 08:16:25.168968211 -0500
+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1349/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-01 08:25:50.553830717 -0500
@@ -149,7 +149,14 @@
                 contentSize = arrangeFN(container, g2, constraint.getWidth());
             }
             else if (h == LengthConstraintType.FIXED) {
-                contentSize = arrangeFF(container, g2, constraint);
+                if (h == LengthConstraintType.NONE) {
+					contentSize = arrangeFN(container, g2,
+							constraint.getWidth());
+				} else if (h == LengthConstraintType.FIXED) {
+					contentSize = arrangeFF(container, g2, constraint);
+				} else if (h == LengthConstraintType.RANGE) {
+					contentSize = arrangeFR(container, g2, constraint);
+				}
             }
             else if (h == LengthConstraintType.RANGE) {
                 contentSize = arrangeFR(container, g2, constraint);
@@ -284,7 +291,8 @@
             w[0] = size.width;
             h[0] = size.height;
         }
-        if (this.bottomBlock != null) {
+        h[3] = h[2];
+		if (this.bottomBlock != null) {
             Size2D size = this.bottomBlock.arrange(g2, c1);
             w[1] = size.width;
             h[1] = size.height;
@@ -311,7 +319,8 @@
         h[2] = Math.max(h[2], h[3]);
         h[3] = h[2];
 
-        if (this.centerBlock != null) {
+        this.leftBlock = null;
+		if (this.centerBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                     LengthConstraintType.NONE);
@@ -433,7 +442,8 @@
             h[0] = size.height;
         }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
+        h[2] = constraint.getHeight() - h[1] - h[0];
+		if (this.bottomBlock != null) {
             RectangleConstraint c2 = new RectangleConstraint(w[0], null,
                     LengthConstraintType.FIXED, 0.0, new Range(0.0,
                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);


