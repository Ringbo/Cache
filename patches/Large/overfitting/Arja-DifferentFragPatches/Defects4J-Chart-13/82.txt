--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-01 08:16:25.168968211 -0500
+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1578/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-01 08:26:45.739179113 -0500
@@ -149,7 +149,14 @@
                 contentSize = arrangeFN(container, g2, constraint.getWidth());
             }
             else if (h == LengthConstraintType.FIXED) {
-                contentSize = arrangeFF(container, g2, constraint);
+                if (h == LengthConstraintType.NONE) {
+					contentSize = arrangeFN(container, g2,
+							constraint.getWidth());
+				} else if (h == LengthConstraintType.FIXED) {
+					contentSize = arrangeFF(container, g2, constraint);
+				} else if (h == LengthConstraintType.RANGE) {
+					contentSize = arrangeFR(container, g2, constraint);
+				}
             }
             else if (h == LengthConstraintType.RANGE) {
                 contentSize = arrangeFR(container, g2, constraint);
@@ -311,7 +318,8 @@
         h[2] = Math.max(h[2], h[3]);
         h[3] = h[2];
 
-        if (this.centerBlock != null) {
+        this.leftBlock = null;
+		if (this.centerBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                     LengthConstraintType.NONE);
@@ -440,7 +448,8 @@
             Size2D size = this.bottomBlock.arrange(g2, c2);
             h[1] = size.height;
         }
-        h[2] = constraint.getHeight() - h[1] - h[0];
+        this.centerBlock = null;
+		h[2] = constraint.getHeight() - h[1] - h[0];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,
                     new Range(0.0, constraint.getWidth()),


