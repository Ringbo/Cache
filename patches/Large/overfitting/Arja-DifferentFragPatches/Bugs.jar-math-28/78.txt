--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-29 04:17:44.059193000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_107/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-29 04:41:55.360145575 -0500
@@ -298,12 +298,13 @@
         }
 
         int iteration = 0;
-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));
+		final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
         double difference = 0.0;
 
         do {
             saveMembershipMatrix(oldMatrix);
-            updateClusterCenters();
+            membershipMatrix = new double[size][k];
             updateMembershipMatrix();
             difference = calculateMaxMembershipChange(oldMatrix);
         } while (difference > epsilon && ++iteration < max);
@@ -329,14 +330,15 @@
                     arr[idx] += u * pointArr[idx];
                 }
                 sum += u;
-                i++;
+                if (fuzziness <= 1.0d) {
+					throw new NumberIsTooSmallException(fuzziness, 1.0, false);
+				}
             }
             MathArrays.scaleInPlace(1.0 / sum, arr);
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
             j++;
         }
         clusters.clear();
-        clusters = newClusters;
     }
 
     /**


