--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-01 09:57:47.389900461 -0500
+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_156/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-01 10:05:04.047006099 -0500
@@ -114,14 +114,6 @@
       if (isResultUsed) {
         return;
       }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
         return;
@@ -131,7 +123,6 @@
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
-        msg = "Is there a missing '+' on the previous line?";
       } else if (isSimpleOp) {
         msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
             "' operator is not being used.";


