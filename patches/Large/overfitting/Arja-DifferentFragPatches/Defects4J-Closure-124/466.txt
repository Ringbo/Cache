--- /tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 08:47:09.466479311 -0500
+++ /tmp/Arja_Defects4J_Closure_124/patches_uw31/Patch_603/patched/tmp/Arja_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-01 08:58:56.495541197 -0500
@@ -54,8 +54,6 @@
         collapseAssignEqualTo(expr, exprParent, rightValue)) {
       reportCodeChange();
     } else if (rightValue.isAssign()) {
-      // Recursively deal with nested assigns.
-      collapseAssign(rightValue, expr, exprParent);
     }
   }
 
@@ -135,22 +133,6 @@
         case Token.NAME:
           if (next.isQualifiedName()) {
             String nextName = next.getQualifiedName();
-            if (value.isQualifiedName() &&
-                nextName.equals(value.getQualifiedName())) {
-              // If the previous expression evaluates to value of a
-              // qualified name, and that qualified name is used again
-              // shortly, then we can exploit the assign here.
-
-              // Verify the assignment doesn't change its own value.
-              if (!isSafeReplacement(next, assign)) {
-                return false;
-              }
-
-              exprParent.removeChild(expr);
-              expr.removeChild(assign);
-              parent.replaceChild(next, assign);
-              return true;
-            }
           }
           return false;
 
@@ -168,16 +150,7 @@
           // To protect against this, we simply only inline when the left side
           // is guaranteed to evaluate to the same L-value no matter what.
           Node leftSide = next.getFirstChild();
-          if (leftSide.isName() ||
-              leftSide.isGetProp() &&
-              leftSide.getFirstChild().isThis()) {
-            // Dive down the right side of the assign.
-            parent = next;
-            next = leftSide.getNext();
-            break;
-          } else {
-            return false;
-          }
+          ;
 
         default:
           if (NodeUtil.isImmutableValue(next)
@@ -216,7 +189,7 @@
       return false;
     }
 
-    return true;
+    return false;
   }
 
   /**


