--- /tmp/Arja_Defects4J_Lang_16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:13:40.712736534 -0500
+++ /tmp/Arja_Defects4J_Lang_16/patches_of36/Patch_1123/patched/tmp/Arja_Defects4J_Lang_16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:20:07.107671696 -0500
@@ -514,7 +514,16 @@
                 case 'f' :
                 case 'F' :
                     try {
-                        Float f = NumberUtils.createFloat(numeric);
+                        if (expPos > -1) {
+							if (expPos > str.length()) {
+								throw new NumberFormatException(str
+										+ " is not a valid number.");
+							}
+							mant = str.substring(0, expPos);
+						} else {
+							mant = str;
+						}
+						Float f = NumberUtils.createFloat(numeric);
                         if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                             //If it's too big for a float or the float value = 0 and the string
                             //has non-zeros in it, then float does not have the precision we want
@@ -542,7 +551,7 @@
                     }
                     //$FALL-THROUGH$
                 default :
-                    throw new NumberFormatException(str + " is not a valid number.");
+				return Integer.decode(str);
 
             }
         } else {


