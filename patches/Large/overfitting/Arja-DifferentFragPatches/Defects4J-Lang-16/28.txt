--- /tmp/Arja_Defects4J_Lang_16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:13:40.712736534 -0500
+++ /tmp/Arja_Defects4J_Lang_16/patches_of36/Patch_443/patched/tmp/Arja_Defects4J_Lang_16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2018-12-01 05:16:59.436187190 -0500
@@ -463,7 +463,8 @@
         String dec;
         String exp;
         int decPos = str.indexOf('.');
-        int expPos = str.indexOf('e') + str.indexOf('E') + 1;
+        exp = null;
+		int expPos = str.indexOf('e') + str.indexOf('E') + 1;
 
         if (decPos > -1) {
 
@@ -488,7 +489,10 @@
             dec = null;
         }
         if (!Character.isDigit(lastChar) && lastChar != '.') {
-            if (expPos > -1 && expPos < str.length() - 1) {
+            if (str.startsWith("0x") || str.startsWith("-0x")) {
+				return createInteger(str);
+			}
+			if (expPos > -1 && expPos < str.length() - 1) {
                 exp = str.substring(expPos + 1, str.length() - 1);
             } else {
                 exp = null;
@@ -542,7 +546,7 @@
                     }
                     //$FALL-THROUGH$
                 default :
-                    throw new NumberFormatException(str + " is not a valid number.");
+				return Integer.decode(str);
 
             }
         } else {
@@ -556,7 +560,11 @@
             if (dec == null && exp == null) {
                 //Must be an int,long,bigint
                 try {
-                    return createInteger(str);
+                    if (StringUtils.isBlank(str)) {
+						throw new NumberFormatException(
+								"A blank string is not a valid number");
+					}
+					return createInteger(str);
                 } catch (NumberFormatException nfe) { // NOPMD
                     // ignore the bad number
                 }


