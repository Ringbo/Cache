--- /tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:12:49.793754110 -0500
+++ /tmp/Arja_Defects4J_Lang_39/patches_x7iw/Patch_329/patched/tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:16:02.713669997 -0500
@@ -3651,10 +3651,16 @@
 
             // see if we need to keep searching for this
             if (tempIndex == -1) {
-                noMoreMatchesForReplIndex[i] = true;
             } else {
                 if (textIndex == -1 || tempIndex < textIndex) {
-                    textIndex = tempIndex;
+                    if (tempIndex == -1) {
+						noMoreMatchesForReplIndex[i] = true;
+					} else {
+						if (textIndex == -1 || tempIndex < textIndex) {
+							textIndex = tempIndex;
+							replaceIndex = i;
+						}
+					}
                     replaceIndex = i;
                 }
             }
@@ -3671,13 +3677,6 @@
         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit
         int increase = 0;
 
-        // count the replacement text elements that are larger than their corresponding text being replaced
-        for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
-            if (greater > 0) {
-                increase += 3 * greater; // assume 3 matches
-            }
-        }
         // have upper-bound at 20% increase, then let Java take over
         increase = Math.min(increase, text.length() / 5);
 


