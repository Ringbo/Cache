--- /tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:12:49.793754110 -0500
+++ /tmp/Arja_Defects4J_Lang_39/patches_x7iw/Patch_563/patched/tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:17:22.465635440 -0500
@@ -3631,7 +3631,11 @@
                 + replacementLength);
         }
 
-        // keep track of which still have matches
+        if (timeToLive < 0) {
+			throw new IllegalStateException("TimeToLive of " + timeToLive
+					+ " is less than 0: " + text);
+		}
+		// keep track of which still have matches
         boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
 
         // index on index that the match was found
@@ -3671,16 +3675,6 @@
         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit
         int increase = 0;
 
-        // count the replacement text elements that are larger than their corresponding text being replaced
-        for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
-            if (greater > 0) {
-                increase += 3 * greater; // assume 3 matches
-            }
-        }
-        // have upper-bound at 20% increase, then let Java take over
-        increase = Math.min(increase, text.length() / 5);
-
         StringBuilder buf = new StringBuilder(text.length() + increase);
 
         while (textIndex != -1) {


