--- /tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:12:49.793754110 -0500
+++ /tmp/Arja_Defects4J_Lang_39/patches_x7iw/Patch_778/patched/tmp/Arja_Defects4J_Lang_39/src/java/org/apache/commons/lang3/StringUtils.java	2018-12-01 05:18:10.293614772 -0500
@@ -3621,7 +3621,11 @@
         }
 
         int searchLength = searchList.length;
-        int replacementLength = replacementList.length;
+        if (timeToLive < 0) {
+			throw new IllegalStateException("TimeToLive of " + timeToLive
+					+ " is less than 0: " + text);
+		}
+		int replacementLength = replacementList.length;
 
         // make sure lengths are ok, these need to be equal
         if (searchLength != replacementLength) {
@@ -3637,7 +3641,12 @@
         // index on index that the match was found
         int textIndex = -1;
         int replaceIndex = -1;
-        int tempIndex = -1;
+        if (searchLength != replacementLength) {
+			throw new IllegalArgumentException(
+					"Search and Replace array lengths don't match: "
+							+ searchLength + " vs " + replacementLength);
+		}
+		int tempIndex = -1;
 
         // index of replace array that will replace the search string found
         // NOTE: logic duplicated below START
@@ -3671,13 +3680,6 @@
         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit
         int increase = 0;
 
-        // count the replacement text elements that are larger than their corresponding text being replaced
-        for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
-            if (greater > 0) {
-                increase += 3 * greater; // assume 3 matches
-            }
-        }
         // have upper-bound at 20% increase, then let Java take over
         increase = Math.min(increase, text.length() / 5);
 


