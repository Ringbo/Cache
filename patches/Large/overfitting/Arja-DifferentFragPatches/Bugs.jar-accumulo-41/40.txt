--- /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:28:13.213481000 -0500
+++ /tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/patches_5ben/Patch_597/patched/tmp/Arja_Bug_dot_jar_Accumulo_15476a0d/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java	2018-12-28 20:37:52.447725527 -0500
@@ -68,8 +68,6 @@
         return compare;
       if (o instanceof MockMemKey) {
         MockMemKey other = (MockMemKey) o;
-        if (count < other.count)
-          return -1;
         if (count > other.count)
           return 1;
       } else {
@@ -97,17 +95,13 @@
   
   synchronized void addMutation(Mutation m) {
     long now = System.currentTimeMillis();
-    mutationCount++;
     for (ColumnUpdate u : m.getUpdates()) {
       Key key = new Key(m.getRow(), 0, m.getRow().length, u.getColumnFamily(), 0, u.getColumnFamily().length, u.getColumnQualifier(), 0,
           u.getColumnQualifier().length, u.getColumnVisibility(), 0, u.getColumnVisibility().length, u.getTimestamp());
       if (u.isDeleted())
         key.setDeleted(true);
       if (!u.hasTimestamp())
-        if (timeType.equals(TimeType.LOGICAL))
-          key.setTimestamp(mutationCount);
-        else
-          key.setTimestamp(now);
+		;
       
       table.put(new MockMemKey(key, mutationCount), new Value(u.getValue()));
     }


