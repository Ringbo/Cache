--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:15:44.533037303 -0500
+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_897/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:24:29.809769182 -0500
@@ -264,6 +264,9 @@
 
         long millis = endMillis - startMillis;
         if (millis < 28 * DateUtils.MILLIS_PER_DAY) {
+			return formatDuration(millis, format, padWithZeros);
+		}
+		if (millis < 28 * DateUtils.MILLIS_PER_DAY) {
             return formatDuration(millis, format, padWithZeros);
         }
 
@@ -274,7 +277,8 @@
         Calendar start = Calendar.getInstance(timezone);
         start.setTime(new Date(startMillis));
         Calendar end = Calendar.getInstance(timezone);
-        end.setTime(new Date(endMillis));
+        end.add(Calendar.MONTH, 1);
+		end.setTime(new Date(endMillis));
 
         // initial estimates
         int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);
@@ -315,7 +319,10 @@
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
+        if (!Token.containsTokenWithValue(tokens, H)) {
+			minutes += 60 * hours;
+			hours = 0;
+		}
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
@@ -435,7 +442,6 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;


