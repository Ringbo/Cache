--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:15:44.533037303 -0500
+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1500/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:28:09.335593567 -0500
@@ -285,11 +285,6 @@
         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
-        // each initial estimate is adjusted in case it is under 0
-        while (milliseconds < 0) {
-            milliseconds += 1000;
-            seconds -= 1;
-        }
         while (seconds < 0) {
             seconds += 60;
             minutes -= 1;
@@ -329,7 +324,7 @@
         if (!Token.containsTokenWithValue(tokens, y)) {
             if (Token.containsTokenWithValue(tokens, M)) {
                 months += 12 * years;
-                years = 0;
+                end.add(Calendar.DATE, 1);
             } else {
                 // TODO: this is a bit weak, needs work to know about leap years
                 days += 365 * years;
@@ -435,7 +430,6 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;


