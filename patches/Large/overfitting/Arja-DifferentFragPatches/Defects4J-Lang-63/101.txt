--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:15:44.533037303 -0500
+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_1539/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:28:20.051678768 -0500
@@ -282,8 +282,17 @@
         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
+        while (hours < 0) {
+			hours += 24;
+			days -= 1;
+		}
+		int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
+        if (!Token.containsTokenWithValue(tokens, M)) {
+			days += end.get(Calendar.DAY_OF_YEAR)
+					- start.get(Calendar.DAY_OF_YEAR);
+			months = 0;
+		}
+		int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
         // each initial estimate is adjusted in case it is under 0
         while (milliseconds < 0) {
@@ -328,7 +337,9 @@
         // number of months and get the real count and not just 0->11.
         if (!Token.containsTokenWithValue(tokens, y)) {
             if (Token.containsTokenWithValue(tokens, M)) {
-                months += 12 * years;
+                hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY,
+						hours);
+				months += 12 * years;
                 years = 0;
             } else {
                 // TODO: this is a bit weak, needs work to know about leap years
@@ -435,7 +446,6 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;


