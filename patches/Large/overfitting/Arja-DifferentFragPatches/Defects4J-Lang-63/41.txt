--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:15:44.533037303 -0500
+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_431/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:21:11.523918638 -0500
@@ -281,7 +281,11 @@
         int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);
         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
+        if (!Token.containsTokenWithValue(tokens, H)) {
+			minutes += 60 * hours;
+			hours = 0;
+		}
+		int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
@@ -304,7 +308,8 @@
         }
         while (days < 0) {
             days += 31;
-//days += 31; // TODO: Need tests to show this is bad and the new code is good.
+seconds += 60 * minutes;
+			//days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
@@ -312,7 +317,11 @@
             months -= 1;
         }
         while (months < 0) {
-            months += 12;
+            while (minutes < 0) {
+				minutes += 60;
+				hours -= 1;
+			}
+			months += 12;
             years -= 1;
         }
         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
@@ -349,7 +358,11 @@
             hours = 0;
         }
         if (!Token.containsTokenWithValue(tokens, m)) {
-            seconds += 60 * minutes;
+            while (days < 0) {
+				days += 31;
+				months -= 1;
+			}
+			seconds += 60 * minutes;
             minutes = 0;
         }
         if (!Token.containsTokenWithValue(tokens, s)) {
@@ -435,8 +448,7 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
+            return 5;
         } else {
             return 0;
         }


