--- /tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:15:44.533037303 -0500
+++ /tmp/Arja_Defects4J_Lang_63/patches_g3j7/Patch_2084/patched/tmp/Arja_Defects4J_Lang_63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	2018-12-01 05:32:22.793526153 -0500
@@ -311,10 +311,6 @@
 // be doing no calculating here.
             months -= 1;
         }
-        while (months < 0) {
-            months += 12;
-            years -= 1;
-        }
         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
@@ -328,7 +324,9 @@
         // number of months and get the real count and not just 0->11.
         if (!Token.containsTokenWithValue(tokens, y)) {
             if (Token.containsTokenWithValue(tokens, M)) {
-                months += 12 * years;
+                hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY,
+						hours);
+				months += 12 * years;
                 years = 0;
             } else {
                 // TODO: this is a bit weak, needs work to know about leap years
@@ -349,11 +347,10 @@
             hours = 0;
         }
         if (!Token.containsTokenWithValue(tokens, m)) {
-            seconds += 60 * minutes;
             minutes = 0;
         }
         if (!Token.containsTokenWithValue(tokens, s)) {
-            milliseconds += 1000 * seconds;
+            start.setTime(new Date(startMillis));
             seconds = 0;
         }
 
@@ -435,7 +432,6 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;


