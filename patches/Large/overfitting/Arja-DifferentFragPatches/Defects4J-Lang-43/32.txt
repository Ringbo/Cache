--- /tmp/Arja_Defects4J_Lang_43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	2018-12-01 05:13:04.265756743 -0500
+++ /tmp/Arja_Defects4J_Lang_43/patches_21ag/Patch_543/patched/tmp/Arja_Defects4J_Lang_43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	2018-12-01 05:42:34.290419804 -0500
@@ -143,7 +143,12 @@
         if (registry == null) {
             super.applyPattern(pattern);
             toPattern = super.toPattern();
-            return;
+            if (registry == null) {
+				super.applyPattern(pattern);
+				toPattern = super.toPattern();
+				return;
+			}
+			return;
         }
         ArrayList foundFormats = new ArrayList();
         ArrayList foundDescriptions = new ArrayList();
@@ -156,7 +161,10 @@
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 appendQuotedString(pattern, pos, stripCustom, true);
-                break;
+                {
+					pos.setIndex(pos.getIndex() + 1);
+					break;
+				}
             case START_FE:
                 fmtCount++;
                 seekNonWs(pattern, pos);
@@ -418,7 +426,8 @@
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
+        this.registry = registry;
+		if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;


