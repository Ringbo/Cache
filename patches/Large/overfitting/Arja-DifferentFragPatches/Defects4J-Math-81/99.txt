--- /tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 05:57:29.659492621 -0500
+++ /tmp/Arja_Defects4J_Math_81/patches_57bl/Patch_769/patched/tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 06:11:16.222008066 -0500
@@ -1090,26 +1090,15 @@
                     dMin = 0.0;
                     updateSigma(tau);
                     return deflatedEnd;
-                } else if (dMin < 0.0) {
-                    // tau too big. Select new tau and try again.
-                    if (tType < -22) {
-                        // failed twice. Play it safe.
-                        tau = 0.0;
-                    } else if (dMin1 > 0.0) {
-                        // late failure. Gives excellent shift.
-                        tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
-                        tType -= 11;
-                    } else {
-                        // early failure. Divide by 4.
-                        tau *= 0.25;
-                        tType -= 12;
-                    }
-                } else if (Double.isNaN(dMin)) {
-                    tau = 0.0;
-                } else {
-                    // possible underflow. Play it safe.
-                    loop = false;
-                }
+                } else if (tType < -22) {
+					tau = 0.0;
+				} else if (dMin1 > 0.0) {
+					tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
+					tType -= 11;
+				} else {
+					tau *= 0.25;
+					tType -= 12;
+				}
             }
 
         }
@@ -1477,7 +1466,7 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
+                        tType = -5;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }


