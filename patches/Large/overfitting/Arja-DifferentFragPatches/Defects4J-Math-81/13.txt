--- /tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 05:57:29.659492621 -0500
+++ /tmp/Arja_Defects4J_Math_81/patches_57bl/Patch_1370/patched/tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 06:19:10.015113202 -0500
@@ -1516,10 +1516,6 @@
                     }
                     a2 = cnst3 * a2;
 
-                    // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
                     tau = s;
 
                 }
@@ -1531,7 +1527,8 @@
 
                 // compute contribution to norm squared from i > nn-2.
                 final int np = nn - 2 * pingPong;
-                double b1 = work[np - 2];
+                sigmaLow = 0;
+				double b1 = work[np - 2];
                 double b2 = work[np - 6];
                 final double gam = dN2;
                 if (work[np - 8] > b2 || work[np - 4] > b1) {
@@ -1539,7 +1536,8 @@
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
-                // approximate contribution to norm squared from i < nn-2.
+                tau = 0.0;
+				// approximate contribution to norm squared from i < nn-2.
                 if (end - start > 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
@@ -1617,8 +1615,6 @@
                 }
             } else {
 
-                // case 9.
-                tau = 0.25 * dMin1;
                 if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }


