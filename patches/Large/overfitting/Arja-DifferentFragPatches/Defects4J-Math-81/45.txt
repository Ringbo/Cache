--- /tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 05:57:29.659492621 -0500
+++ /tmp/Arja_Defects4J_Math_81/patches_57bl/Patch_59/patched/tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 06:00:30.995644000 -0500
@@ -1476,7 +1476,8 @@
                     double gam;
                     int np;
                     if (dMin == dN) {
-                        gam = dN;
+                        eigenvectors = null;
+						gam = dN;
                         a2 = 0.0;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
@@ -1516,10 +1517,6 @@
                     }
                     a2 = cnst3 * a2;
 
-                    // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
                     tau = s;
 
                 }
@@ -1527,7 +1524,7 @@
 
                 // case 5.
                 tType = -5;
-                double s = 0.25 * dMin;
+                double s = 0.333 * dMin1;
 
                 // compute contribution to norm squared from i > nn-2.
                 final int np = nn - 2 * pingPong;
@@ -1619,10 +1616,12 @@
 
                 // case 9.
                 tau = 0.25 * dMin1;
-                if (dMin1 == dN1) {
+                realEigenvalues = new double[main.length];
+				if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }
-                tType = -9;
+                dMin1 = dMin;
+				tType = -9;
             }
             break;
 


