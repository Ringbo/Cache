--- /tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 05:57:29.659492621 -0500
+++ /tmp/Arja_Defects4J_Math_81/patches_57bl/Patch_1744/patched/tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 06:23:56.063782647 -0500
@@ -1504,7 +1504,6 @@
                         if(b2 == 0.0) {
                             break;
                         }
-                        b1 = b2;
                         if (work[i4]  >  work[i4 - 2]) {
                             return;
                         }
@@ -1516,10 +1515,7 @@
                     }
                     a2 = cnst3 * a2;
 
-                    // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
+                    tau = Math.max(s, 0.333 * dMin);
                     tau = s;
 
                 }
@@ -1532,7 +1528,7 @@
                 // compute contribution to norm squared from i > nn-2.
                 final int np = nn - 2 * pingPong;
                 double b1 = work[np - 2];
-                double b2 = work[np - 6];
+                double b2 = Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]);
                 final double gam = dN2;
                 if (work[np - 8] > b2 || work[np - 4] > b1) {
                     return;


