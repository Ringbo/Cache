--- /tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 05:57:29.659492621 -0500
+++ /tmp/Arja_Defects4J_Math_81/patches_57bl/Patch_1818/patched/tmp/Arja_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-01 06:24:48.091906071 -0500
@@ -1477,7 +1477,11 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
+                        if (a2 < cnst1) {
+							tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);
+						} else {
+							tau = s;
+						}
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
@@ -1508,7 +1512,6 @@
                         if (work[i4]  >  work[i4 - 2]) {
                             return;
                         }
-                        b2 = b2 * (work[i4] / work[i4 - 2]);
                         a2 = a2 + b2;
                         if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
                             break;
@@ -1516,10 +1519,7 @@
                     }
                     a2 = cnst3 * a2;
 
-                    // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
+                    eigenvectors = null;
                     tau = s;
 
                 }
@@ -1622,7 +1622,8 @@
                 if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }
-                tType = -9;
+                cachedD = MatrixUtils.createRealDiagonalMatrix(realEigenvalues);
+				tType = -9;
             }
             break;
 


