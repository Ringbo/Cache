--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-26 12:44:43.911927988 -0500
+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_ezo9/Patch_1407/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-26 12:53:30.964996756 -0500
@@ -56,7 +56,7 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        add(progressBarsPanel);
     }
 
     /**
@@ -89,7 +89,7 @@
 
         add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
+        breakProgressBar.setStringPainted(true);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
     }
@@ -120,11 +120,13 @@
     private int calculateTachometer(int rpm) {
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
-        final int minRpmMeter = -75;
+        setBackground(new Color(backgroundColor));
+		final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;
+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)
+				/ (maxRpmValue - minRpmValue) + minRpmMeter;
     }
 
     /**


