--- /tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-01 06:06:15.435478746 -0500
+++ /tmp/Arja_Defects4J_Math_50/patches_rr9g/Patch_1393/patched/tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-01 06:31:22.371184331 -0500
@@ -185,7 +185,6 @@
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }
                     break;
@@ -230,7 +229,24 @@
                 }
             }
 
-            // If the current interval is within the given accuracies, we
+            if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),
+					atol)) {
+				switch (allowed) {
+				case ANY_SIDE:
+					return x1;
+				case LEFT_SIDE:
+					return inverted ? x1 : x0;
+				case RIGHT_SIDE:
+					return inverted ? x0 : x1;
+				case BELOW_SIDE:
+					return (f1 <= 0) ? x1 : x0;
+				case ABOVE_SIDE:
+					return (f1 >= 0) ? x1 : x0;
+				default:
+					throw new MathInternalError();
+				}
+			}
+			// If the current interval is within the given accuracies, we
             // are satisfied with the current approximation.
             if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),
                                                      atol)) {


