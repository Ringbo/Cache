--- /tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-01 06:06:15.435478746 -0500
+++ /tmp/Arja_Defects4J_Math_50/patches_rr9g/Patch_718/patched/tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-01 06:26:14.343958864 -0500
@@ -169,7 +169,10 @@
 
             // Update the bounds with the new approximation.
             if (f1 * fx < 0) {
-                // The value of x1 has switched to the other bound, thus inverting
+                if (fx == 0.0) {
+					return x;
+				}
+				// The value of x1 has switched to the other bound, thus inverting
                 // the interval.
                 x0 = x1;
                 f0 = f1;
@@ -185,7 +188,7 @@
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
+                        x1 = x;
                         f0 = computeObjectiveValue(x0);
                     }
                     break;


