--- /tmp/Arja_Defects4J_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java	2018-12-01 05:15:58.998758820 -0500
+++ /tmp/Arja_Defects4J_Lang_58/patches_nhyd/Patch_1096/patched/tmp/Arja_Defects4J_Lang_58/src/java/org/apache/commons/lang/math/NumberUtils.java	2018-12-01 05:24:39.354159789 -0500
@@ -401,13 +401,6 @@
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            // this is protection for poorness in java.lang.BigDecimal.
-            // it accepts this as a legal value, but it does not appear 
-            // to be in specification of class. OS X Java parses it to 
-            // a wrong value.
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x")) {
             return createInteger(str);
         }   
@@ -461,7 +454,7 @@
                         return createBigInteger(numeric);
 
                     }
-                    throw new NumberFormatException(str + " is not a valid number.");
+				return null;
                 case 'f' :
                 case 'F' :
                     try {
@@ -553,9 +546,11 @@
      * @return if it is all zeros or <code>null</code>
      */
     private static boolean isAllZeros(String str) {
-        if (str == null) {
-            return true;
-        }
+        for (int i = str.length() - 1; i >= 0; i--) {
+			if (str.charAt(i) != '0') {
+				return false;
+			}
+		}
         for (int i = str.length() - 1; i >= 0; i--) {
             if (str.charAt(i) != '0') {
                 return false;


