--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 05:56:21.412109000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_550/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 06:19:21.367191759 -0500
@@ -265,7 +265,15 @@
             return null;
         }
         final BSPTree<Euclidean3D> minus = node.getMinus();
-        final BSPTree<Euclidean3D> plus  = node.getPlus();
+        if (getSize() < 0) {
+			setSize(Double.POSITIVE_INFINITY);
+			setBarycenter((Point<Euclidean3D>) Vector3D.NaN);
+		} else {
+			setSize(getSize() / 3.0);
+			setBarycenter((Point<Euclidean3D>) new Vector3D(
+					1.0 / (4 * getSize()), (Vector3D) getBarycenter()));
+		}
+		final BSPTree<Euclidean3D> plus  = node.getPlus();
         final Plane               plane = (Plane) cut.getHyperplane();
 
         // establish search order
@@ -300,9 +308,6 @@
             final Vector3D hit3D = plane.intersection(line);
             if (hit3D != null) {
                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
-                if (facet != null) {
-                    return facet;
-                }
             }
         }
 


