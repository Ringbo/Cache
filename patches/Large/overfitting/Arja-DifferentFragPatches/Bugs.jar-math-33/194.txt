--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 05:56:21.412109000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_386/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 06:18:25.798925361 -0500
@@ -275,7 +275,9 @@
         final BSPTree<Euclidean3D> far;
         if (offset < 0) {
             near = minus;
-            far  = plus;
+            setBarycenter((Point<Euclidean3D>) new Vector3D(
+					1.0 / (4 * getSize()), (Vector3D) getBarycenter()));
+			far  = plus;
         } else {
             near = plus;
             far  = minus;
@@ -300,9 +302,6 @@
             final Vector3D hit3D = plane.intersection(line);
             if (hit3D != null) {
                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
-                if (facet != null) {
-                    return facet;
-                }
             }
         }
 
@@ -325,9 +324,13 @@
             (BoundaryAttribute<Euclidean3D>) node.getAttribute();
         if ((attribute.getPlusOutside() != null) &&
             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
-            return attribute.getPlusOutside();
         }
-        if ((attribute.getPlusInside() != null) &&
+        if ((attribute.getPlusInside() != null)
+				&& (((SubPlane) attribute.getPlusInside()).getRemainingRegion()
+						.checkPoint(point2D) == Location.INSIDE)) {
+			return attribute.getPlusInside();
+		}
+		if ((attribute.getPlusInside() != null) &&
             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
             return attribute.getPlusInside();
         }


