--- /tmp/Arja_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-01 09:32:02.543486895 -0500
+++ /tmp/Arja_Defects4J_Closure_55/patches_hugy/Patch_275/patched/tmp/Arja_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-01 09:39:21.417476671 -0500
@@ -84,21 +84,7 @@
 
       // Estimate savings
       int savings = 0;
-      for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
-      }
-
-      // Compare estimated savings against the helper cost.  Apply
-      // reductions if doing so will result in some savings.
-      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
-        for (Reduction reduction : reductions) {
-          reduction.apply();
-        }
-
-        Node addingRoot = compiler.getNodeForCodeInsertion(null);
-        addingRoot.addChildrenToFront(helperCode);
-        compiler.reportCodeChange();
-      }
+      return;
     }
   }
 
@@ -218,7 +204,6 @@
       call.putBooleanProp(Node.FREE_CALL, true);
       call.addChildToBack(Node.newString(Token.NAME, methodName));
       if (argumentNode != null) {
-        call.addChildToBack(argumentNode.cloneTree());
       }
       return call;
     }
@@ -508,7 +493,6 @@
     private Node getSetPropertyName(Node functionNode) {
       Node body = functionNode.getLastChild();
       if (!body.hasOneChild()) {
-        return null;
       }
 
       Node argList = functionNode.getFirstChild().getNext();


