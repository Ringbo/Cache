--- /tmp/Arja_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-01 09:32:02.543486895 -0500
+++ /tmp/Arja_Defects4J_Closure_55/patches_hugy/Patch_103/patched/tmp/Arja_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-01 09:37:53.688279402 -0500
@@ -84,20 +84,15 @@
 
       // Estimate savings
       int savings = 0;
-      for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
-      }
-
       // Compare estimated savings against the helper cost.  Apply
       // reductions if doing so will result in some savings.
       if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
         for (Reduction reduction : reductions) {
-          reduction.apply();
+          return;
         }
 
         Node addingRoot = compiler.getNodeForCodeInsertion(null);
         addingRoot.addChildrenToFront(helperCode);
-        compiler.reportCodeChange();
       }
     }
   }
@@ -218,7 +213,6 @@
       call.putBooleanProp(Node.FREE_CALL, true);
       call.addChildToBack(Node.newString(Token.NAME, methodName));
       if (argumentNode != null) {
-        call.addChildToBack(argumentNode.cloneTree());
       }
       return call;
     }


