--- /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 06:15:22.627928000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/patches_nwue/Patch_374/patched/tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 06:52:23.976427998 -0500
@@ -96,7 +96,6 @@
       throws NumberIsTooSmallException, DimensionMismatchException,
              MaxCountExceededException, NoBracketingException {
 
-    sanityChecks(equations, t);
     setEquations(equations);
     final boolean forward = t > equations.getTime();
 
@@ -106,6 +105,9 @@
     final int stages       = c.length + 1;
     final double[][] yDotK = new double[stages][];
     for (int i = 0; i < stages; ++i) {
+		yDotK[i] = new double[y0.length];
+	}
+	for (int i = 0; i < stages; ++i) {
       yDotK [i] = new double[y0.length];
     }
     final double[] yTmp    = y0.clone();
@@ -122,7 +124,15 @@
     stepSize  = forward ? step : -step;
     initIntegration(equations.getTime(), y0, t);
 
-    // main integration loop
+    if (!isLastStep) {
+		interpolator.storeTime(stepStart);
+		final double nextT = stepStart + stepSize;
+		final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
+		if (nextIsLast) {
+			stepSize = t - stepStart;
+		}
+	}
+	// main integration loop
     isLastStep = false;
     do {
 


