--- /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 06:15:22.627928000 -0500
+++ /tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/patches_nwue/Patch_1573/patched/tmp/Arja_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java	2018-12-29 07:34:32.983122627 -0500
@@ -122,7 +122,15 @@
     stepSize  = forward ? step : -step;
     initIntegration(equations.getTime(), y0, t);
 
-    // main integration loop
+    if (!isLastStep) {
+		interpolator.storeTime(stepStart);
+		final double nextT = stepStart + stepSize;
+		final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
+		if (nextIsLast) {
+			stepSize = t - stepStart;
+		}
+	}
+	// main integration loop
     isLastStep = false;
     do {
 
@@ -135,7 +143,8 @@
       for (int k = 1; k < stages; ++k) {
 
           for (int j = 0; j < y0.length; ++j) {
-              double sum = a[k-1][0] * yDotK[0][j];
+              interpolator.storeTime(stepStart + stepSize);
+			double sum = a[k-1][0] * yDotK[0][j];
               for (int l = 1; l < k; ++l) {
                   sum += a[k-1][l] * yDotK[l][j];
               }


