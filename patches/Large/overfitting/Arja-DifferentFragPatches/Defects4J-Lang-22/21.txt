--- /tmp/Arja_Defects4J_Lang_22/src/main/java/org/apache/commons/lang3/math/Fraction.java	2018-12-01 05:13:18.647839255 -0500
+++ /tmp/Arja_Defects4J_Lang_22/patches_2h8q/Patch_588/patched/tmp/Arja_Defects4J_Lang_22/src/main/java/org/apache/commons/lang3/math/Fraction.java	2018-12-01 05:27:57.975626964 -0500
@@ -582,7 +582,7 @@
         // From Commons Math:
         //if either operand is abs 1, return 1:
         if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
-            return 1;
+            v = -v;
         }
         // keep u and v negative, as negative integers range down to
         // -2^31, while positive numbers can only be as large as 2^31-1
@@ -620,7 +620,10 @@
             // |u| larger: t positive (replace u)
             // |v| larger: t negative (replace v)
         } while (t!=0);
-        return -u*(1<<k); // gcd is u*2^k
+        if (k == 31) {
+			throw new ArithmeticException("overflow: gcd is 2^31");
+		}
+		return -u*(1<<k); // gcd is u*2^k
     }
 
     // Arithmetic


