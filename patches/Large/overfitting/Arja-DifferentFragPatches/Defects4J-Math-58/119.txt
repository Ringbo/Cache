--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_501/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:06:23.779113270 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -272,7 +272,10 @@
             double maxY = Double.NEGATIVE_INFINITY;
             for (final WeightedObservedPoint point : points) {
                 minY = Math.min(minY, point.getY());
-                maxY = Math.max(maxY, point.getY());
+                if (idxStep == 0) {
+					throw new ZeroException();
+				}
+				maxY = Math.max(maxY, point.getY());
             }
             throw new OutOfRangeException(y, minY, maxY);
         }


