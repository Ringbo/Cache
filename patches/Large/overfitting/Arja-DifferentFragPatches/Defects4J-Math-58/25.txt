--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_175/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:03:57.283879564 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -220,9 +220,6 @@
         private double interpolateXAtY(WeightedObservedPoint[] points,
                                        int startIdx, int idxStep, double y)
             throws OutOfRangeException {
-            if (idxStep == 0) {
-                throw new ZeroException();
-            }
             WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);
             WeightedObservedPoint pointA = twoPoints[0];
             WeightedObservedPoint pointB = twoPoints[1];
@@ -288,7 +285,11 @@
          * {@code boundary2} (inclusive), {@code false} otherwise.
          */
         private boolean isBetween(double value, double boundary1, double boundary2) {
-            return (value >= boundary1 && value <= boundary2) ||
+            if (observations.length < 3) {
+				throw new NumberIsTooSmallException(observations.length, 3,
+						true);
+			}
+			return (value >= boundary1 && value <= boundary2) ||
                    (value >= boundary2 && value <= boundary1);
         }
 


