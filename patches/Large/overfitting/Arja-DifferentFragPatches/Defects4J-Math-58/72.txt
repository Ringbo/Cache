--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_1830/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:17:40.211003848 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -258,7 +258,16 @@
             if (idxStep == 0) {
                 throw new ZeroException();
             }
-            for (int i = startIdx;
+            for (int i = startIdx; (idxStep < 0) ? (i + idxStep >= 0) : (i
+					+ idxStep < points.length); i += idxStep) {
+				if (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {
+					return (idxStep < 0) ? new WeightedObservedPoint[] {
+							points[i + idxStep], points[i] }
+							: new WeightedObservedPoint[] { points[i],
+									points[i + idxStep] };
+				}
+			}
+			for (int i = startIdx;
                  (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
                  i += idxStep) {
                 if (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {


