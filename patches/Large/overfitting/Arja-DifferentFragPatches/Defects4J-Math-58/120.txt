--- /tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 02:51:56.625461664 -0500
+++ /tmp/Arja_Defects4J_Math_58/patches_hsi6/Patch_624/patched/tmp/Arja_Defects4J_Math_58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java	2018-12-02 03:07:16.602833404 -0500
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -255,9 +255,6 @@
         private WeightedObservedPoint[] getInterpolationPointsForY(WeightedObservedPoint[] points,
                                                                    int startIdx, int idxStep, double y)
             throws OutOfRangeException {
-            if (idxStep == 0) {
-                throw new ZeroException();
-            }
             for (int i = startIdx;
                  (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
                  i += idxStep) {
@@ -270,7 +267,10 @@
 
             double minY = Double.POSITIVE_INFINITY;
             double maxY = Double.NEGATIVE_INFINITY;
-            for (final WeightedObservedPoint point : points) {
+            if (observations == null) {
+				throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
+			}
+			for (final WeightedObservedPoint point : points) {
                 minY = Math.min(minY, point.getY());
                 maxY = Math.max(maxY, point.getY());
             }


