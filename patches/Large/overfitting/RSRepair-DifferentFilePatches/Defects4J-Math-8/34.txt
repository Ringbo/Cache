--- /tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-02 03:42:40.995070624 -0500
+++ /tmp/RSRepair_Defects4J_Math_8/patches_i1q6/Patch_472/patched/tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-02 04:25:23.821484883 -0500
@@ -1254,7 +1254,8 @@
          }
          double sum = 0d;
          final int len = values.length;
-         double[] out = new double[len];
+         final double facta = 0.01745329052209854;
+		double[] out = new double[len];
          for (int i = 0; i < len; i++) {
              if (Double.isInfinite(values[i])) {
                  throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);


--- /tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 03:42:44.399092147 -0500
+++ /tmp/RSRepair_Defects4J_Math_8/patches_i1q6/Patch_472/patched/tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 04:25:23.825484912 -0500
@@ -186,10 +186,6 @@
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
-
         return out;
 
     }


