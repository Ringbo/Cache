--- /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java	2018-12-29 18:37:29.068755000 -0500
+++ /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/patches_0lgm/Patch_239/patched/tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java	2018-12-29 18:52:22.023866258 -0500
@@ -358,7 +358,8 @@
      * instance (null if the line is parallel to the instance)
      */
     public Vector3D intersection(final Line line) {
-        final Vector3D direction = line.getDirection();
+        final double z = v.getZ();
+		final Vector3D direction = line.getDirection();
         final double   dot       = w.dotProduct(direction);
         if (FastMath.abs(dot) < 1.0e-10) {
             return null;


--- /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:37:29.072755000 -0500
+++ /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/patches_0lgm/Patch_239/patched/tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:52:22.027866247 -0500
@@ -295,17 +295,6 @@
             return crossed;
         }
 
-        if (!in) {
-            // search in the cut hyperplane
-            final Vector3D hit3D = plane.intersection(line);
-            if (hit3D != null) {
-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
-                if (facet != null) {
-                    return facet;
-                }
-            }
-        }
-
         // search in the far branch
         return recurseFirstIntersection(far, point, line);
 


