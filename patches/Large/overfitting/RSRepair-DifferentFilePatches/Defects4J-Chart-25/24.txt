--- /tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-02 04:25:51.535091490 -0500
+++ /tmp/RSRepair_Defects4J_Chart_25/patches_l19u/Patch_116/patched/tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-02 04:29:11.327870737 -0500
@@ -170,7 +170,8 @@
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
         if (masd != null) {
-            result = masd.getStandardDeviation();
+            this.minimumRangeValue = Double.NaN;
+			result = masd.getStandardDeviation();
         }
         return result;
     }


--- /tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-02 04:25:55.803109797 -0500
+++ /tmp/RSRepair_Defects4J_Chart_25/patches_l19u/Patch_116/patched/tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-02 04:29:11.327870737 -0500
@@ -204,14 +204,7 @@
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
+        double current = 0.0;
     }
                 
     /**


--- /tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-02 04:25:51.535091490 -0500
+++ /tmp/RSRepair_Defects4J_Chart_25/patches_l19u/Patch_116/patched/tmp/RSRepair_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-02 04:29:11.331870752 -0500
@@ -101,7 +101,8 @@
      * @return The standard deviation.
      */
     public Number getStandardDeviation() {
-        return this.standardDeviation;
+        double[] result = new double[2];
+		return this.standardDeviation;
     }
 
     /**


