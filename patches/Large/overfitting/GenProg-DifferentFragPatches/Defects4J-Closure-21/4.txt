--- /tmp/GenProg_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 07:44:46.397015709 -0500
+++ /tmp/GenProg_Defects4J_Closure_21/patches_rhwv/Patch_448/patched/tmp/GenProg_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 07:55:23.222259184 -0500
@@ -115,12 +115,6 @@
         return;
       }
       if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
       }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
@@ -156,7 +150,8 @@
     if (!problemNodes.isEmpty()) {
       addExtern();
       for (Node n : problemNodes) {
-        Node name = IR.name(PROTECTOR_FN).srcref(n);
+        int type = n.getType();
+		Node name = IR.name(PROTECTOR_FN).srcref(n);
         name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
         Node replacement = IR.call(name).srcref(n);
         replacement.putBooleanProp(Node.FREE_CALL, true);
@@ -169,7 +164,6 @@
 
   private void addExtern() {
     Node name = IR.name(PROTECTOR_FN);
-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
     Node var = IR.var(name);
     // Add "@noalias" so we can strip the method when AliasExternals is enabled.
     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);


