--- /tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 11:55:35.505022862 -0500
+++ /tmp/GenProg_Defects4J_Math_50/patches_sses/Patch_1135/patched/tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 12:24:28.611346492 -0500
@@ -185,8 +185,8 @@
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
+                        f0 = f1;
+						f0 = computeObjectiveValue(x0);
                     }
                     break;
                 default:
@@ -236,7 +236,37 @@
                                                      atol)) {
                 switch (allowed) {
                 case ANY_SIDE:
-                    return x1;
+                    {
+						if (FastMath.abs(f1) <= ftol) {
+							switch (allowed) {
+							case ANY_SIDE:
+								return x1;
+							case LEFT_SIDE:
+								if (inverted) {
+									return x1;
+								}
+								break;
+							case RIGHT_SIDE:
+								if (!inverted) {
+									return x1;
+								}
+								break;
+							case BELOW_SIDE:
+								if (f1 <= 0) {
+									return x1;
+								}
+								break;
+							case ABOVE_SIDE:
+								if (f1 >= 0) {
+									return x1;
+								}
+								break;
+							default:
+								throw new MathInternalError();
+							}
+						}
+						return x1;
+					}
                 case LEFT_SIDE:
                     return inverted ? x1 : x0;
                 case RIGHT_SIDE:


