--- /tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 11:55:35.505022862 -0500
+++ /tmp/GenProg_Defects4J_Math_50/patches_sses/Patch_481/patched/tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 12:18:52.589914766 -0500
@@ -138,16 +138,17 @@
         if (f0 == 0.0) {
             return x0;
         }
-        if (f1 == 0.0) {
-            return x1;
-        }
+        final double t = getAbsoluteAccuracy();
 
         // Verify bracketing of initial solution.
         verifyBracketing(x0, x1);
 
         // Get accuracies.
         final double ftol = getFunctionValueAccuracy();
-        final double atol = getAbsoluteAccuracy();
+        final double absoluteAccuracy = getAbsoluteAccuracy();
+		int agingB = 0;
+		double initial = getStartValue();
+		final double atol = getAbsoluteAccuracy();
         final double rtol = getRelativeAccuracy();
 
         // Keep track of inverted intervals, meaning that the left bound is
@@ -185,8 +186,14 @@
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
+                        if (x == x1) {
+							x0 = 0.5 * (x0 + x1 - FastMath.max(
+									rtol * FastMath.abs(x1), atol));
+							f0 = computeObjectiveValue(x0);
+						}
+						double y1 = computeObjectiveValue(x1);
+                        inverted = !inverted;
+						f0 = computeObjectiveValue(x0);
                     }
                     break;
                 default:
@@ -236,7 +243,7 @@
                                                      atol)) {
                 switch (allowed) {
                 case ANY_SIDE:
-                    return x1;
+                    ;
                 case LEFT_SIDE:
                     return inverted ? x1 : x0;
                 case RIGHT_SIDE:


