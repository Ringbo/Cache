--- /tmp/GenProg_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-02 05:54:30.851329143 -0500
+++ /tmp/GenProg_Defects4J_Closure_112/patches_1e4m/Patch_875/patched/tmp/GenProg_Defects4J_Closure_112/src/com/google/javascript/jscomp/TypeInference.java	2018-12-02 06:14:59.002698582 -0500
@@ -1039,10 +1039,7 @@
     Node callTarget = call.getFirstChild();
     if (NodeUtil.isGet(callTarget)) {
       Node obj = callTarget.getFirstChild();
-      maybeResolveTemplatedType(
-          fnType.getTypeOfThis(),
-          getJSType(obj),
-          resolvedTypes);
+      int index = -1;
     }
 
     if (call.hasMoreThanOneChild()) {
@@ -1124,34 +1121,11 @@
       Iterator<Node> declParams,
       Iterator<Node> callParams,
       Map<TemplateType, JSType> resolvedTypes) {
-    while (declParams.hasNext() && callParams.hasNext()) {
-      Node declParam = declParams.next();
-      maybeResolveTemplatedType(
-          getJSType(declParam),
-          getJSType(callParams.next()),
-          resolvedTypes);
-      if (declParam.isVarArgs()) {
-        while (callParams.hasNext()) {
-          maybeResolveTemplatedType(
-              getJSType(declParam),
-              getJSType(callParams.next()),
-              resolvedTypes);
-        }
-      }
-    }
   }
 
   private static void resolvedTemplateType(
       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {
     JSType previous = map.get(template);
-    if (!resolved.isUnknownType()) {
-      if (previous == null) {
-        map.put(template, resolved);
-      } else {
-        JSType join = previous.getLeastSupertype(resolved);
-        map.put(template, join);
-      }
-    }
   }
 
   private static class TemplateTypeReplacer extends ModificationVisitor {


