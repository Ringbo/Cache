--- /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:26:42.320452816 -0500
+++ /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_jeau/Patch_75/patched/tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:27:30.284774203 -0500
@@ -56,7 +56,7 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
@@ -68,7 +68,8 @@
         setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		initializeProgressBars();
     }
 
     /**
@@ -83,7 +84,6 @@
                 progressBarsPanelHeight);
 
         gasLabel.setText("gas pedal");
-        breakLabel.setText("break pedal");
         gasProgressBar.setStringPainted(true);
         breakProgressBar.setStringPainted(true);
 
@@ -100,7 +100,7 @@
      * @param g {@link Graphics} object that can draw to the canvas
      */
     protected void paintComponent(Graphics g) {
-        super.paintComponent(g);
+        final int minSpeedMeter = -75;
         g.setColor(Color.BLACK);
         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);
         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);
@@ -138,7 +138,8 @@
         final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
-        final int maxSpeedMeter = 255;
+        progressBarsPanel.add(gasProgressBar);
+		final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;
 
         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)


