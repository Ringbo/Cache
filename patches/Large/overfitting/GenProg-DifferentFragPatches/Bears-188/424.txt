--- /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:26:42.320452816 -0500
+++ /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_jeau/Patch_973/patched/tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:31:45.110482433 -0500
@@ -56,7 +56,9 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,
+				progressBarsPanelWidth, progressBarsPanelHeight);
+		setLayout(null);
     }
 
     /**
@@ -65,7 +67,8 @@
     private void initializeDashboard() {
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+		setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
         initializeProgressBars();
@@ -75,7 +78,8 @@
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
+        gasProgressBar.setStringPainted(true);
+		progressBarsPanel.setBackground(new Color(backgroundColor));
         progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
@@ -89,9 +93,8 @@
 
         add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
+        gasLabel.setText("gas pedal");
         progressBarsPanel.add(breakLabel);
-        progressBarsPanel.add(breakProgressBar);
     }
 
     /**
@@ -118,7 +121,8 @@
      * @return      The mapped value between [-75, 255] interval.
      */
     private int calculateTachometer(int rpm) {
-        final int minRpmValue = 0;
+        progressBarsPanel.add(breakLabel);
+		final int minRpmValue = 0;
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
         final int maxRpmMeter = 255;


