--- /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:26:42.320452816 -0500
+++ /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_jeau/Patch_318/patched/tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:28:37.449224317 -0500
@@ -53,10 +53,12 @@
      */
     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
+        setLayout(null);
+		setLayout(null);
+		breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
@@ -68,14 +70,17 @@
         setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		progressBarsPanel.add(breakLabel);
+		progressBarsPanel.add(breakLabel);
+		initializeProgressBars();
     }
 
     /**
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
+        setLayout(null);
         progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
@@ -83,15 +88,13 @@
                 progressBarsPanelHeight);
 
         gasLabel.setText("gas pedal");
-        breakLabel.setText("break pedal");
-        gasProgressBar.setStringPainted(true);
+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,
+				progressBarsPanelWidth, progressBarsPanelHeight);
         breakProgressBar.setStringPainted(true);
 
         add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
-        progressBarsPanel.add(breakLabel);
-        progressBarsPanel.add(breakProgressBar);
     }
 
     /**
@@ -121,7 +124,9 @@
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
-        final int maxRpmMeter = 255;
+        progressBarsPanel.add(gasProgressBar);
+		progressBarsPanel.add(gasProgressBar);
+		final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;
@@ -136,7 +141,8 @@
      */
     private int calculateSpeedometer(int speed) {
         final int minSpeedValue = 0;
-        final int maxSpeedValue = 500;
+        gasProgressBar.setStringPainted(true);
+		final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;


