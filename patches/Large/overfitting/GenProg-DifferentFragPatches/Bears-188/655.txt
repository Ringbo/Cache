--- /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:26:42.320452816 -0500
+++ /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_jeau/Patch_1239/patched/tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:32:54.430946712 -0500
@@ -56,7 +56,7 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
@@ -68,7 +68,8 @@
         setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(gasLabel);
+		progressBarsPanel.setBackground(new Color(backgroundColor));
     }
 
     /**
@@ -87,7 +88,7 @@
         gasProgressBar.setStringPainted(true);
         breakProgressBar.setStringPainted(true);
 
-        add(progressBarsPanel);
+        progressBarsPanel.setBackground(new Color(backgroundColor));
         progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
@@ -122,7 +123,8 @@
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
-        int newrpm = maxRpmValue - rpm;
+        setBackground(new Color(backgroundColor));
+		int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;
     }
@@ -137,7 +139,8 @@
     private int calculateSpeedometer(int speed) {
         final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
-        final int minSpeedMeter = -75;
+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+		final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;
 


