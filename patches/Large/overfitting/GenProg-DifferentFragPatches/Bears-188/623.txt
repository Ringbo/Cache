--- /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:26:42.320452816 -0500
+++ /tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_jeau/Patch_807/patched/tmp/GenProg_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java	2018-12-27 12:31:03.406202781 -0500
@@ -53,10 +53,16 @@
      */
     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
-        speedAngle = calculateSpeedometer(0);
+        gasLabel.setText("gas pedal");
+		gasLabel.setText("gas pedal");
+		breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+		speedAngle = calculateSpeedometer(0);
+        final int maxRpmMeter = 255;
+		rpmAngle = calculateTachometer(0);
+        gasProgressBar.setStringPainted(true);
+		final int minSpeedValue = 0;
+		setLayout(null);
     }
 
     /**
@@ -66,9 +72,9 @@
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
         setBackground(new Color(backgroundColor));
-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
-
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		progressBarsPanel.add(breakLabel);
+		initializeProgressBars();
     }
 
     /**
@@ -82,13 +88,11 @@
                 progressBarsPanelWidth,
                 progressBarsPanelHeight);
 
-        gasLabel.setText("gas pedal");
-        breakLabel.setText("break pedal");
-        gasProgressBar.setStringPainted(true);
-        breakProgressBar.setStringPainted(true);
-
-        add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
+        final int maxSpeedMeter = 255;
+		gasProgressBar.setStringPainted(true);
+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+        progressBarsPanel.setBackground(new Color(backgroundColor));
+		progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
@@ -122,7 +126,8 @@
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
-        int newrpm = maxRpmValue - rpm;
+        progressBarsPanel.add(gasProgressBar);
+		int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;
     }
@@ -135,7 +140,9 @@
      * @return          The mapped value between [-75, 255] interval.
      */
     private int calculateSpeedometer(int speed) {
-        final int minSpeedValue = 0;
+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,
+				progressBarsPanelWidth, progressBarsPanelHeight);
+		final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;


