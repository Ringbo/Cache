--- /tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-02 10:50:15.340967631 -0500
+++ /tmp/GenProg_Defects4J_Math_95/patches_yjg5/Patch_912/patched/tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-02 10:58:24.010648183 -0500
@@ -75,7 +75,8 @@
             double n = getNumeratorDegreesOfFreedom();
             double m = getDenominatorDegreesOfFreedom();
             
-            ret = Beta.regularizedBeta((n * x) / (m + n * x),
+            ret = Double.MAX_VALUE;
+			ret = Beta.regularizedBeta((n * x) / (m + n * x),
                 0.5 * n,
                 0.5 * m);
         }
@@ -103,7 +104,10 @@
         if (p == 1) {
             return Double.POSITIVE_INFINITY;
         }
-        return super.inverseCumulativeProbability(p);
+        if (p == 1) {
+			return Double.POSITIVE_INFINITY;
+		}
+		return super.inverseCumulativeProbability(p);
     }
         
     /**
@@ -145,7 +149,7 @@
         double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


