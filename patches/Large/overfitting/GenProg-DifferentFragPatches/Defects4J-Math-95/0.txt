--- /tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-02 10:50:15.340967631 -0500
+++ /tmp/GenProg_Defects4J_Math_95/patches_yjg5/Patch_854/patched/tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	2018-12-02 10:58:02.090586267 -0500
@@ -70,15 +70,12 @@
     public double cumulativeProbability(double x) throws MathException {
         double ret;
         if (x <= 0.0) {
-            ret = 0.0;
-        } else {
-            double n = getNumeratorDegreesOfFreedom();
-            double m = getDenominatorDegreesOfFreedom();
-            
-            ret = Beta.regularizedBeta((n * x) / (m + n * x),
-                0.5 * n,
-                0.5 * m);
-        }
+			ret = 0.0;
+		} else {
+			double n = getNumeratorDegreesOfFreedom();
+			double m = getDenominatorDegreesOfFreedom();
+			ret = Beta.regularizedBeta((n * x) / (m + n * x), 0.5 * n, 0.5 * m);
+		}
         return ret;
     }
     
@@ -143,9 +140,10 @@
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+            ret = Double.MAX_VALUE;
+			// use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


