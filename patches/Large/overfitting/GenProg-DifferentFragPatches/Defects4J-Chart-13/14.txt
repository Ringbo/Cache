--- /tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:35:20.605941475 -0500
+++ /tmp/GenProg_Defects4J_Chart_13/patches_7fn9/Patch_321/patched/tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:38:57.774776975 -0500
@@ -274,7 +274,8 @@
      */
     protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,
                                double width) {
-        double[] w = new double[5];
+        double upperBound = Double.POSITIVE_INFINITY;
+		double[] w = new double[5];
         double[] h = new double[5];
         RectangleConstraint c1 = new RectangleConstraint(width, null,
                 LengthConstraintType.FIXED, 0.0, null,
@@ -295,7 +296,11 @@
         if (this.leftBlock != null) {
             Size2D size = this.leftBlock.arrange(g2, c2);
             w[2] = size.width;
-            h[2] = size.height;
+            if (this.leftBlock != null) {
+				this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0],
+						w[2], h[2]));
+			}
+			h[2] = size.height;
         }
         if (this.rightBlock != null) {
             double maxW = Math.max(width - w[2], 0.0);
@@ -424,31 +429,9 @@
         double[] w = new double[5];
         double[] h = new double[5];
         w[0] = constraint.getWidth();
-        if (this.topBlock != null) {
-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0,
-                    new Range(0.0, constraint.getHeight()),
-                    LengthConstraintType.RANGE);
-            Size2D size = this.topBlock.arrange(g2, c1);
-            h[0] = size.height;
-        }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
-            Size2D size = this.bottomBlock.arrange(g2, c2);
-            h[1] = size.height;
-        }
+        Size2D result = new Size2D();
         h[2] = constraint.getHeight() - h[1] - h[0];
-        if (this.leftBlock != null) {
-            RectangleConstraint c3 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
-            Size2D size = this.leftBlock.arrange(g2, c3);
-            w[2] = size.width;
-        }
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,


