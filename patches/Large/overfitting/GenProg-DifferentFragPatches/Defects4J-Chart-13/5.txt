--- /tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:35:20.605941475 -0500
+++ /tmp/GenProg_Defects4J_Chart_13/patches_7fn9/Patch_216/patched/tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:38:27.886662040 -0500
@@ -289,7 +289,8 @@
             w[1] = size.width;
             h[1] = size.height;
         }
-        RectangleConstraint c2 = new RectangleConstraint(0.0,
+        Size2D s1 = arrangeNN(container, g2);
+		RectangleConstraint c2 = new RectangleConstraint(0.0,
                 new Range(0.0, width), LengthConstraintType.RANGE,
                 0.0, null, LengthConstraintType.NONE);
         if (this.leftBlock != null) {
@@ -309,7 +310,7 @@
         }
 
         h[2] = Math.max(h[2], h[3]);
-        h[3] = h[2];
+        this.rightBlock = null;
 
         if (this.centerBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(width - w[2]
@@ -441,14 +442,7 @@
             h[1] = size.height;
         }
         h[2] = constraint.getHeight() - h[1] - h[0];
-        if (this.leftBlock != null) {
-            RectangleConstraint c3 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
-            Size2D size = this.leftBlock.arrange(g2, c3);
-            w[2] = size.width;
-        }
+        h[2] = constraint.getHeight() - h[1] - h[0];
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,


