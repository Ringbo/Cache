--- /tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:35:20.605941475 -0500
+++ /tmp/GenProg_Defects4J_Chart_13/patches_7fn9/Patch_81/patched/tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 02:37:50.210517134 -0500
@@ -303,8 +303,15 @@
                     new Range(Math.min(w[2], maxW), maxW),
                     LengthConstraintType.RANGE, 0.0, null,
                     LengthConstraintType.NONE);
-            Size2D size = this.rightBlock.arrange(g2, c3);
-            w[3] = size.width;
+            if (this.centerBlock != null) {
+				this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0],
+						w[4], h[4]));
+			}
+			Size2D size = this.rightBlock.arrange(g2, c3);
+            if (this.centerBlock != null) {
+				this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0],
+						w[4], h[4]));
+			}
             h[3] = size.height;
         }
 
@@ -317,7 +324,11 @@
                     LengthConstraintType.NONE);
             Size2D size = this.centerBlock.arrange(g2, c4);
             w[4] = size.width;
-            h[4] = size.height;
+            w[2] = size.width;
+			w[2] = size.width;
+			w[2] = size.width;
+			w[2] = size.width;
+			h[4] = size.height;
         }
         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
         return arrange(container, g2, new RectangleConstraint(width, height));
@@ -433,22 +444,7 @@
             h[0] = size.height;
         }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
-            Size2D size = this.bottomBlock.arrange(g2, c2);
-            h[1] = size.height;
-        }
         h[2] = constraint.getHeight() - h[1] - h[0];
-        if (this.leftBlock != null) {
-            RectangleConstraint c3 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
-            Size2D size = this.leftBlock.arrange(g2, c3);
-            w[2] = size.width;
-        }
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,


