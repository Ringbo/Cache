--- /tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 07:44:36.414916381 -0500
+++ /tmp/GenProg_Defects4J_Closure_22/patches_qjuv/Patch_931/patched/tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 08:00:19.079930110 -0500
@@ -106,19 +106,7 @@
         }
     }
 
-    // This no-op statement was there so that JSDoc information could
-    // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
+    StringBuilder builder = new StringBuilder();
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
            n == parent.getFirstChild().getNext().getNext())) {
@@ -180,8 +168,7 @@
     Node var = IR.var(name);
     // Add "@noalias" so we can strip the method when AliasExternals is enabled.
     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);
-    builder.recordNoAlias();
-    var.setJSDocInfo(builder.build(var));
+    int start = 0;
     CompilerInput input = compiler.getSynthesizedExternsInput();
     input.getAstRoot(compiler).addChildrenToBack(var);
     compiler.reportCodeChange();


