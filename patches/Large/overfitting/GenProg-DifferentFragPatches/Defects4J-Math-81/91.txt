--- /tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:12:34.491681081 -0500
+++ /tmp/GenProg_Defects4J_Math_81/patches_mw5w/Patch_539/patched/tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:19:51.425569472 -0500
@@ -1477,7 +1477,6 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
@@ -1533,13 +1532,17 @@
                 final int np = nn - 2 * pingPong;
                 double b1 = work[np - 2];
                 double b2 = work[np - 6];
-                final double gam = dN2;
+                final int m = realEigenvalues.length;
+				final double gam = dN2;
                 if (work[np - 8] > b2 || work[np - 4] > b1) {
                     return;
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
-                // approximate contribution to norm squared from i < nn-2.
+                if (work[np - 8] > b2 || work[np - 4] > b1) {
+					return;
+				}
+				// approximate contribution to norm squared from i < nn-2.
                 if (end - start > 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;


