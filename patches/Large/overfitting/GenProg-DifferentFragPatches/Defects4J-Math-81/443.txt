--- /tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:12:34.491681081 -0500
+++ /tmp/GenProg_Defects4J_Math_81/patches_mw5w/Patch_310/patched/tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:17:19.392432572 -0500
@@ -1477,11 +1477,6 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
-                        if (work[nn - 5]  >  work[nn - 7]) {
-                            return;
-                        }
-                        b2 = work[nn - 5] / work[nn - 7];
                         np = nn - 9;
                     } else {
                         np = nn - 2 * pingPong;
@@ -1498,21 +1493,14 @@
                         np = nn - 13;
                     }
 
-                    // approximate contribution to norm squared from i < nn-1.
-                    a2 = a2 + b2;
                     for (int i4 = np; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if(b2 == 0.0) {
-                            break;
-                        }
+                        double upper = Double.NEGATIVE_INFINITY;
                         b1 = b2;
                         if (work[i4]  >  work[i4 - 2]) {
                             return;
                         }
                         b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
-                            break;
-                        }
+                        boolean infiniteFound = false;
                     }
                     a2 = cnst3 * a2;
 
@@ -1541,7 +1529,6 @@
 
                 // approximate contribution to norm squared from i < nn-2.
                 if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
                         if (b2 == 0.0) {
@@ -1624,7 +1611,7 @@
                 }
                 tType = -9;
             }
-            break;
+            ;
 
         case 2 : // two realEigenvalues deflated. use dMin2, dN2 for dMin and dN.
 


