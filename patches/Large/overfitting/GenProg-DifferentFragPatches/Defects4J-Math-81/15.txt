--- /tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:12:34.491681081 -0500
+++ /tmp/GenProg_Defects4J_Math_81/patches_mw5w/Patch_587/patched/tmp/GenProg_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 11:20:10.697629152 -0500
@@ -1477,7 +1477,7 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
+                        tau = 0;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
@@ -1501,7 +1501,8 @@
                     // approximate contribution to norm squared from i < nn-1.
                     a2 = a2 + b2;
                     for (int i4 = np; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if(b2 == 0.0) {
+                        dN = 0;
+						if(b2 == 0.0) {
                             break;
                         }
                         b1 = b2;
@@ -1509,12 +1510,11 @@
                             return;
                         }
                         b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
                         if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
                             break;
                         }
                     }
-                    a2 = cnst3 * a2;
+                    eigenvectors = null;
 
                     // rayleigh quotient residual bound.
                     if (a2 < cnst1) {
@@ -1619,9 +1619,6 @@
 
                 // case 9.
                 tau = 0.25 * dMin1;
-                if (dMin1 == dN1) {
-                    tau = 0.5 * dMin1;
-                }
                 tType = -9;
             }
             break;


