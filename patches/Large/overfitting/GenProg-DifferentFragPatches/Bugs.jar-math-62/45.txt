--- /tmp/GenProg_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-30 15:11:22.132573000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_f6dd42b4/patches_aepn/Patch_401/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-30 15:40:49.434509808 -0500
@@ -94,8 +94,8 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
+		verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -106,19 +106,15 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
-
-        // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
-            return solve(f, min, yMin, initial, yInitial, min, yMin);
-        }
+			return solve(f, min, yMin, initial, yInitial, min, yMin);
+		}
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
-        if (Math.abs(yMax) <= functionValueAccuracy) {
+        this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
+		if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
         }
@@ -128,7 +124,8 @@
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
 
-        // full Brent algorithm starting with provided initial guess
+        verifyBracketing(min, max, f);
+		// full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);
 
     }


