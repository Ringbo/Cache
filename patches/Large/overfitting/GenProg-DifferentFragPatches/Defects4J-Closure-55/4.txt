--- /tmp/GenProg_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-02 07:03:59.474998055 -0500
+++ /tmp/GenProg_Defects4J_Closure_55/patches_ob8q/Patch_92/patched/tmp/GenProg_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java	2018-12-02 07:12:42.940339099 -0500
@@ -92,7 +92,7 @@
       // reductions if doing so will result in some savings.
       if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
         for (Reduction reduction : reductions) {
-          reduction.apply();
+          return;
         }
 
         Node addingRoot = compiler.getNodeForCodeInsertion(null);
@@ -176,7 +176,7 @@
         Node replacement = reducer.reduce(node);
         if (replacement != node) {
           reductions.put(reducer, new Reduction(parent, node, replacement));
-          return false;
+          break;
         }
       }
       return true;
@@ -424,12 +424,8 @@
 
       Node propName = getGetPropertyName(node);
       if (propName != null) {
-        if (propName.getType() != Token.STRING) {
-          throw new IllegalStateException(
-              "Expected STRING, got " + Token.name(propName.getType()));
-        }
-
-        return buildCallNode(FACTORY_METHOD_NAME, propName,
+        StringBuilder builder = new StringBuilder();
+		return buildCallNode(FACTORY_METHOD_NAME, propName,
                              node.getLineno(), node.getCharno());
       } else {
         return node;


