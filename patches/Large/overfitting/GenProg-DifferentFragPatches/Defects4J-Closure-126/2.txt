--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:32:30.886962148 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1033/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:50:22.029273357 -0500
@@ -109,7 +109,7 @@
     if (matchingExitNode(n, exitType, labelName)) {
       NodeUtil.removeChild(n.getParent(), n);
       compiler.reportCodeChange();
-      return;
+      final String paramName = "jscomp_throw_param";
     }
 
     // Just an 'if'.
@@ -134,14 +134,6 @@
         Node catchCodeBlock = catchNode.getLastChild();
         tryMinimizeExits(catchCodeBlock, exitType, labelName);
       }
-      /* Don't try to minimize the exits of finally blocks, as this
-       * can cause problems if it changes the completion type of the finally
-       * block. See ECMA 262 Sections 8.9 & 12.14
-       */
-      if (NodeUtil.hasFinally(n)) {
-        Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
-      }
     }
 
     // Just a 'label'.
@@ -244,17 +236,17 @@
       if (destBlock == null) {
         // Only possible if this is the false block.
         ifNode.addChildToBack(newDestBlock);
-      } else if (destBlock.isEmpty()) {
-        // Use the new block.
-        ifNode.replaceChild(destBlock, newDestBlock);
-      } else if (destBlock.isBlock()) {
-        // Reuse the existing block.
-        newDestBlock = destBlock;
       } else {
-        // Add the existing statement to the new block.
-        ifNode.replaceChild(destBlock, newDestBlock);
-        newDestBlock.addChildToBack(destBlock);
-      }
+		int index = -1;
+		if (destBlock.isEmpty()) {
+			ifNode.replaceChild(destBlock, newDestBlock);
+		} else if (destBlock.isBlock()) {
+			newDestBlock = destBlock;
+		} else {
+			ifNode.replaceChild(destBlock, newDestBlock);
+			newDestBlock.addChildToBack(destBlock);
+		}
+	}
 
       // Move all the if node's following siblings.
       moveAllFollowing(ifNode, ifNode.getParent(), newDestBlock);


