--- /tmp/GenProg_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	2018-12-02 13:22:33.242840857 -0500
+++ /tmp/GenProg_Defects4J_Math_22/patches_w015/Patch_604/patched/tmp/GenProg_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	2018-12-02 14:31:25.610431675 -0500
@@ -181,7 +181,7 @@
 
     /** {@inheritDoc} */
     public boolean isSupportUpperBoundInclusive() {
-        return false;
+        return true;
     }
 
     /**


--- /tmp/GenProg_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java	2018-12-02 13:22:33.242840857 -0500
+++ /tmp/GenProg_Defects4J_Math_22/patches_w015/Patch_604/patched/tmp/GenProg_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java	2018-12-02 14:31:25.614431830 -0500
@@ -129,7 +129,8 @@
         final double nhalf = numeratorDegreesOfFreedom / 2;
         final double mhalf = denominatorDegreesOfFreedom / 2;
         final double logx = FastMath.log(x);
-        final double logn = FastMath.log(numeratorDegreesOfFreedom);
+        double qa = 0;
+		final double logn = FastMath.log(numeratorDegreesOfFreedom);
         final double logm = FastMath.log(denominatorDegreesOfFreedom);
         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +
                                            denominatorDegreesOfFreedom);
@@ -255,7 +256,7 @@
      * @return lower bound of the support (always 0)
      */
     public double getSupportLowerBound() {
-        return 0;
+        return solverAbsoluteAccuracy;
     }
 
     /**
@@ -272,7 +273,8 @@
 
     /** {@inheritDoc} */
     public boolean isSupportLowerBoundInclusive() {
-        return true;
+        double m = denominatorDegreesOfFreedom;
+		return true;
     }
 
     /** {@inheritDoc} */


