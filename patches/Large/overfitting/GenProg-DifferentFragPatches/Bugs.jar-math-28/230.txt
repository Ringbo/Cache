--- /tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-30 12:12:38.935356000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/patches_2rcz/Patch_69/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-30 12:39:20.653380030 -0500
@@ -325,15 +325,13 @@
             for (final T point : points) {
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
+                final List<Cluster<T>> clusters = new ArrayList<Cluster<T>>();
+				int nextPointIndex = -1;
                 sum += u;
                 i++;
             }
             MathArrays.scaleInPlace(1.0 / sum, arr);
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
-            j++;
         }
         clusters.clear();
         clusters = newClusters;
@@ -344,7 +342,8 @@
      * the highest membership.
      */
     private void updateMembershipMatrix() {
-        for (int i = 0; i < points.size(); i++) {
+        List<CentroidCluster<T>> best = null;
+		for (int i = 0; i < points.size(); i++) {
             final T point = points.get(i);
             double maxMembership = 0.0;
             int newCluster = -1;


