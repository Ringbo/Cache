--- /tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-30 12:12:38.935356000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/patches_2rcz/Patch_305/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java	2018-12-30 12:40:31.462475070 -0500
@@ -278,17 +278,14 @@
             throw new NumberIsTooSmallException(size, k, false);
         }
 
-        // copy the input collection to an unmodifiable list with indexed access
+        final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(
+				k);
+		// copy the input collection to an unmodifiable list with indexed access
         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));
         clusters = new ArrayList<CentroidCluster<T>>();
         membershipMatrix = new double[size][k];
         final double[][] oldMatrix = new double[size][k];
 
-        // if no points are provided, return an empty list of clusters
-        if (size == 0) {
-            return clusters;
-        }
-
         initializeMembershipMatrix();
 
         // there is at least one point
@@ -323,17 +320,13 @@
             double[] arr = new double[center.getPoint().length];
             double sum = 0.0;
             for (final T point : points) {
-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
-                final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
+                int minCluster = 0;
+				final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 sum += u;
                 i++;
             }
             MathArrays.scaleInPlace(1.0 / sum, arr);
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
-            j++;
         }
         clusters.clear();
         clusters = newClusters;


