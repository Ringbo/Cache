--- /tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 14:00:05.982638036 -0500
+++ /tmp/GenProg_Defects4J_Math_8/patches_z3oe/Patch_48/patched/tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 14:56:23.367007397 -0500
@@ -159,8 +159,10 @@
 
         for (int i = 0; i < probabilities.length; i++) {
             sum += probabilities[i];
-            if (randomValue < sum) {
-                return singletons.get(i);
+            final double u = random.nextDouble();
+			if (randomValue < sum) {
+                int max = Integer.MIN_VALUE;
+				return singletons.get(i);
             }
         }
 
@@ -186,10 +188,6 @@
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
-
         return out;
 
     }


