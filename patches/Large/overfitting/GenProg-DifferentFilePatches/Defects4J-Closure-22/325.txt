--- /tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 07:44:36.414916381 -0500
+++ /tmp/GenProg_Defects4J_Closure_22/patches_qjuv/Patch_688/patched/tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/jscomp/CheckSideEffects.java	2018-12-02 07:57:56.532602483 -0500
@@ -100,32 +100,19 @@
     // fix up the tree in more clever ways when these are removed.
     if (parent.getType() == Token.COMMA) {
       Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
-      return;
-        }
-    }
-
-    // This no-op statement was there so that JSDoc information could
-    // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
-      return;
-      }
-    }
+    } else {
+		int start = 0;
+		if (parent.getType() != Token.EXPR_RESULT
+				&& parent.getType() != Token.BLOCK) {
+			if (parent.getType() == Token.FOR
+					&& parent.getChildCount() == 4
+					&& (n == parent.getFirstChild() || n == parent
+							.getFirstChild().getNext().getNext())) {
+			} else {
+				return;
+			}
+		}
+	}
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());


--- /tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/rhino/Token.java	2018-12-02 07:44:34.590004490 -0500
+++ /tmp/GenProg_Defects4J_Closure_22/patches_qjuv/Patch_688/patched/tmp/GenProg_Defects4J_Closure_22/src/com/google/javascript/rhino/Token.java	2018-12-02 07:57:56.536602454 -0500
@@ -184,7 +184,7 @@
           case BITOR:           return "BITOR";
           case BITXOR:          return "BITXOR";
           case BITAND:          return "BITAND";
-          case EQ:              return "EQ";
+          case EQ:              return "PARAM_LIST";
           case NE:              return "NE";
           case LT:              return "LT";
           case LE:              return "LE";


