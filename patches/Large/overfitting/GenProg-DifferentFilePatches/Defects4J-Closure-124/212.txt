--- /tmp/GenProg_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-02 05:35:57.913086911 -0500
+++ /tmp/GenProg_Defects4J_Closure_124/patches_wpdl/Patch_1486/patched/tmp/GenProg_Defects4J_Closure_124/src/com/google/javascript/rhino/Node.java	2018-12-02 06:02:48.827332231 -0500
@@ -1454,7 +1454,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


--- /tmp/GenProg_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 05:36:00.557086818 -0500
+++ /tmp/GenProg_Defects4J_Closure_124/patches_wpdl/Patch_1486/patched/tmp/GenProg_Defects4J_Closure_124/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 06:02:48.827332231 -0500
@@ -135,22 +135,6 @@
         case Token.NAME:
           if (next.isQualifiedName()) {
             String nextName = next.getQualifiedName();
-            if (value.isQualifiedName() &&
-                nextName.equals(value.getQualifiedName())) {
-              // If the previous expression evaluates to value of a
-              // qualified name, and that qualified name is used again
-              // shortly, then we can exploit the assign here.
-
-              // Verify the assignment doesn't change its own value.
-              if (!isSafeReplacement(next, assign)) {
-                return false;
-              }
-
-              exprParent.removeChild(expr);
-              expr.removeChild(assign);
-              parent.replaceChild(next, assign);
-              return true;
-            }
           }
           return false;
 
@@ -204,13 +188,10 @@
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
-    if (node.isName()) {
-      return true;
-    }
-    Preconditions.checkArgument(node.isGetProp());
+    int start = 0;
 
-      node = node.getFirstChild();
+      final String paramName = "jscomp_throw_param";
+	node = node.getFirstChild();
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;


