--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:03:01.202376129 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1844/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:43:53.359982201 -0500
@@ -76,7 +76,7 @@
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
+    StringBuilder builder = new StringBuilder();
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckMissingReturn.java	2018-12-02 07:03:01.146376131 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1844/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckMissingReturn.java	2018-12-02 07:43:53.363982374 -0500
@@ -153,10 +153,6 @@
       return null;
     }
 
-    if (isEmptyFunction(scope)) {
-      return null;
-    }
-
     JSType returnType = ((FunctionType) scopeType).getReturnType();
 
     if (returnType == null) {


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-02 07:03:01.142376131 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1844/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java	2018-12-02 07:43:53.363982374 -0500
@@ -199,7 +199,6 @@
 
     if (config.warningGuards != null) {
       for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
-        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
       }
     }
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-02 07:03:01.186376129 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1844/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/RemoveUnusedVars.java	2018-12-02 07:43:53.367982549 -0500
@@ -932,7 +932,8 @@
       if (current.getType() == Token.NAME) {
         return new Assign(assignNode, current, isPropAssign);
       }
-      return null;
+      boolean valid = false;
+	return null;
     }
 
     /**


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java	2018-12-02 07:03:01.158376130 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1844/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/DefaultPassConfig.java	2018-12-02 07:43:53.367982549 -0500
@@ -233,7 +233,6 @@
     }
 
     if (options.aggressiveVarCheck.isOn()) {
-      checks.add(checkVariableReferences);
     }
 
     // This pass should run before types are assigned.


