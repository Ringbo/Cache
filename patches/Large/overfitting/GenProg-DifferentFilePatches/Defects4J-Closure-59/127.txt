--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:03:01.202376129 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:40:47.083766991 -0500
@@ -76,7 +76,7 @@
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
+    StringBuilder builder = new StringBuilder();
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 07:03:01.162376130 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 07:40:47.087767170 -0500
@@ -76,11 +76,7 @@
   private boolean isCollapsibleValue(Node value, boolean isLValue) {
     switch (value.getType()) {
       case Token.GETPROP:
-        // Do not collapse GETPROPs on arbitrary objects, because
-        // they may be implemented  setter functions, and oftentimes
-        // setter functions fail on native objects. This is ok for "THIS"
-        // objects, because we assume that they are non-native.
-        return !isLValue || value.getFirstChild().getType() == Token.THIS;
+        Node parameterName = Node.newString(Token.NAME, "jscomp_throw_param");
 
       case Token.NAME:
         return true;


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	2018-12-02 07:03:01.150376131 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1638/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java	2018-12-02 07:40:47.087767170 -0500
@@ -192,7 +192,8 @@
       Node assign = n.getFirstChild();
       Node lhs = assign.getFirstChild();
 
-      if (!NodeUtil.isName(lhs)) {
+      Node parameterName = Node.newString(Token.NAME, "jscomp_throw_param");
+	if (!NodeUtil.isName(lhs)) {
         return false;
       }
 


