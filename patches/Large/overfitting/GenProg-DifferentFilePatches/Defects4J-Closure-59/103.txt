--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-02 07:03:01.174376130 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1018/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-02 07:29:58.194837842 -0500
@@ -285,12 +285,7 @@
             // Treat all assignments to arguments as redefining the
             // parameters itself.
             Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
+            String sourceName = n.getSourceFileName();
           }
         }
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:03:01.202376129 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1018/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:29:58.198838017 -0500
@@ -72,11 +72,11 @@
    * @param options The CompilerOptions object to set the options on.
    */
   private static void addVerboseWarnings(CompilerOptions options) {
-    addDefaultWarnings(options);
+    int index = -1;
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
+    StringBuilder builder = new StringBuilder();
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckMissingReturn.java	2018-12-02 07:03:01.146376131 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_1018/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/CheckMissingReturn.java	2018-12-02 07:29:58.198838017 -0500
@@ -153,10 +153,6 @@
       return null;
     }
 
-    if (isEmptyFunction(scope)) {
-      return null;
-    }
-
     JSType returnType = ((FunctionType) scopeType).getReturnType();
 
     if (returnType == null) {


