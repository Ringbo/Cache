--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-02 07:03:01.174376130 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_490/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2018-12-02 07:20:28.062015030 -0500
@@ -281,17 +281,8 @@
             addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
               n.getLastChild(), output);
             return;
-          } else if (NodeUtil.isGet(n.getFirstChild())) {
-            // Treat all assignments to arguments as redefining the
-            // parameters itself.
-            Node obj = n.getFirstChild().getFirstChild();
-            if (NodeUtil.isName(obj) && "arguments".equals(obj.getString())) {
-              // TODO(user): More accuracy can be introduced
-              // ie: We know exactly what arguments[x] is if x is a constant
-              // number.
-              escapeParameters(output);
-            }
-          }
+          } else
+			;
         }
 
         if (NodeUtil.isName(n) && "arguments".equals(n.getString())) {


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:03:01.202376129 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_490/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/WarningLevel.java	2018-12-02 07:20:28.066015201 -0500
@@ -76,7 +76,6 @@
 
     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.
     options.checkSuspiciousCode = true;
-    options.checkGlobalThisLevel = CheckLevel.WARNING;
     options.checkSymbols = true;
     options.checkMissingReturn = CheckLevel.WARNING;
 


--- /tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 07:03:01.162376130 -0500
+++ /tmp/GenProg_Defects4J_Closure_59/patches_2njk/Patch_490/patched/tmp/GenProg_Defects4J_Closure_59/src/com/google/javascript/jscomp/ExploitAssigns.java	2018-12-02 07:20:28.066015201 -0500
@@ -76,11 +76,7 @@
   private boolean isCollapsibleValue(Node value, boolean isLValue) {
     switch (value.getType()) {
       case Token.GETPROP:
-        // Do not collapse GETPROPs on arbitrary objects, because
-        // they may be implemented  setter functions, and oftentimes
-        // setter functions fail on native objects. This is ok for "THIS"
-        // objects, because we assume that they are non-native.
-        return !isLValue || value.getFirstChild().getType() == Token.THIS;
+        ;
 
       case Token.NAME:
         return true;


