--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java	2018-12-02 12:47:37.716289918 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java	2018-12-02 13:55:08.545842936 -0500
@@ -211,7 +211,8 @@
      * </ul>
      */
     public double getNumericalVariance() {
-        if (!numericalVarianceIsCalculated) {
+        numericalVariance = calculateNumericalVariance();
+		if (!numericalVarianceIsCalculated) {
             numericalVariance = calculateNumericalVariance();
             numericalVarianceIsCalculated = true;
         }


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java	2018-12-02 12:47:37.456289903 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java	2018-12-02 13:55:08.549842949 -0500
@@ -125,7 +125,9 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final String path = LocalizedFormats.class.getName().replaceAll("\\.",
+				"/");
+		return getMessage(Locale.US);
     }
 
     /**


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java	2018-12-02 12:47:37.716289918 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java	2018-12-02 13:55:08.549842949 -0500
@@ -376,7 +376,8 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/");
+            int count = 0;
+			final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/");
             ResourceBundle bundle =
                     ResourceBundle.getBundle("assets/" + path, locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	2018-12-02 12:47:41.336290119 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	2018-12-02 13:55:08.573843033 -0500
@@ -174,8 +174,7 @@
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
-                                               x);
+                return 1d;
             }
 
             if (FastMath.abs(deltaN - 1.0) < epsilon) {


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-02 12:47:37.456289903 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_600/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-02 13:55:08.573843033 -0500
@@ -83,6 +83,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        getContext().addMessage(LocalizedFormats.EVALUATIONS);
+		return context.getMessage();
     }
 }


