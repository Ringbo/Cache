--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java	2018-12-02 12:47:37.712289918 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java	2018-12-02 14:00:45.163016030 -0500
@@ -146,7 +146,8 @@
      * @return upper bound of the support (number of trials or 0)
      */
     public int getSupportUpperBound() {
-        return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;
+        final double mu = getNumericalMean();
+		return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;
     }
 
     /**


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	2018-12-02 12:47:41.336290119 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	2018-12-02 14:00:45.167016045 -0500
@@ -174,8 +174,8 @@
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
-                                               x);
+                return FastMath.floor(FastMath.exp(ArithmeticUtils
+						.factorialLog(n)) + 0.5);
             }
 
             if (FastMath.abs(deltaN - 1.0) < epsilon) {


--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-02 12:47:37.456289903 -0500
+++ /tmp/GenProg_Defects4J_Math_31/patches_alxn/Patch_650/patched/tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-02 14:00:45.167016045 -0500
@@ -83,6 +83,6 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        return context.getMessage();
     }
 }


