--- /tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 11:55:35.505022862 -0500
+++ /tmp/GenProg_Defects4J_Math_50/patches_sses/Patch_997/patched/tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 12:23:27.953689271 -0500
@@ -132,12 +132,6 @@
         double f0 = computeObjectiveValue(x0);
         double f1 = computeObjectiveValue(x1);
 
-        // If one of the bounds is the exact root, return it. Since these are
-        // not under-approximations or over-approximations, we can return them
-        // regardless of the allowed solutions.
-        if (f0 == 0.0) {
-            return x0;
-        }
         if (f1 == 0.0) {
             return x1;
         }
@@ -183,11 +177,7 @@
                     f0 *= f1 / (f1 + fx);
                     break;
                 case REGULA_FALSI:
-                    // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
+                    ;
                     break;
                 default:
                     // Should never happen.


--- /tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:55:31.845022991 -0500
+++ /tmp/GenProg_Defects4J_Math_50/patches_sses/Patch_997/patched/tmp/GenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 12:23:27.953689271 -0500
@@ -368,9 +368,6 @@
     public static void verifyBracketing(UnivariateRealFunction function,
                                         final double lower,
                                         final double upper) {
-        if (function == null) {
-            throw new NullArgumentException(LocalizedFormats.FUNCTION);
-        }
         verifyInterval(lower, upper);
         if (!isBracketing(function, lower, upper)) {
             throw new NoBracketingException(lower, upper,


