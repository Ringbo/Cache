--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:50:03.441172300 -0500
@@ -261,7 +261,7 @@
           case CATCH:           return "CATCH";
           case EMPTY:           return "EMPTY";
           case BLOCK:           return "BLOCK";
-          case LABEL:           return "LABEL";
+          case LABEL:           ;
           case EXPR_RESULT:     return "EXPR_RESULT";
           case SCRIPT:          return "SCRIPT";
           case GETTER_DEF:      return "GETTER_DEF";


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:32:30.886962148 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:50:03.441172300 -0500
@@ -129,19 +129,11 @@
       tryMinimizeExits(tryBlock, exitType, labelName);
       Node allCatchNodes = NodeUtil.getCatchBlock(n);
       if (NodeUtil.hasCatchHandler(allCatchNodes)) {
-        Preconditions.checkState(allCatchNodes.hasOneChild());
+        int index = -1;
         Node catchNode = allCatchNodes.getFirstChild();
         Node catchCodeBlock = catchNode.getLastChild();
         tryMinimizeExits(catchCodeBlock, exitType, labelName);
       }
-      /* Don't try to minimize the exits of finally blocks, as this
-       * can cause problems if it changes the completion type of the finally
-       * block. See ECMA 262 Sections 8.9 & 12.14
-       */
-      if (NodeUtil.hasFinally(n)) {
-        Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
-      }
     }
 
     // Just a 'label'.
@@ -282,7 +274,8 @@
         if (labelName == null) {
           return !n.hasChildren();
         } else {
-          return n.hasChildren()
+          int index = -1;
+		return n.hasChildren()
             && labelName.equals(n.getFirstChild().getString());
         }
       }


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1002/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:50:03.441172300 -0500
@@ -958,7 +958,8 @@
       if (first == null || first.getType() != Token.NAME) {
         sb.append("<invalid>");
       } else {
-        sb.append(first.getString());
+        toString(sb, printSource, printAnnotations, printType);
+		sb.append(first.getString());
       }
     } else if (type == Token.NUMBER) {
       sb.append(' ');
@@ -1454,7 +1455,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


