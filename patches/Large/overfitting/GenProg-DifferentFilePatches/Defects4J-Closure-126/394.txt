--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:53:40.934355985 -0500
@@ -226,7 +226,210 @@
           case INSTANCEOF:      return "INSTANCEOF";
           case ARRAYLIT:        return "ARRAYLIT";
           case OBJECTLIT:       return "OBJECTLIT";
-          case TRY:             return "TRY";
+          case TRY:             switch (token) {
+			case ERROR:
+				return "ERROR";
+			case RETURN:
+				return "RETURN";
+			case BITOR:
+				return "BITOR";
+			case BITXOR:
+				return "BITXOR";
+			case BITAND:
+				return "BITAND";
+			case EQ:
+				return "EQ";
+			case NE:
+				return "NE";
+			case LT:
+				return "LT";
+			case LE:
+				return "LE";
+			case GT:
+				return "GT";
+			case GE:
+				return "GE";
+			case LSH:
+				return "LSH";
+			case RSH:
+				return "RSH";
+			case URSH:
+				return "URSH";
+			case ADD:
+				return "ADD";
+			case SUB:
+				return "SUB";
+			case MUL:
+				return "MUL";
+			case DIV:
+				return "DIV";
+			case MOD:
+				return "MOD";
+			case NOT:
+				return "NOT";
+			case BITNOT:
+				return "BITNOT";
+			case POS:
+				return "POS";
+			case NEG:
+				return "NEG";
+			case NEW:
+				return "NEW";
+			case DELPROP:
+				return "DELPROP";
+			case TYPEOF:
+				return "TYPEOF";
+			case GETPROP:
+				return "GETPROP";
+			case GETELEM:
+				return "GETELEM";
+			case CALL:
+				return "CALL";
+			case NAME:
+				return "NAME";
+			case LABEL_NAME:
+				return "LABEL_NAME";
+			case NUMBER:
+				return "NUMBER";
+			case STRING:
+				return "STRING";
+			case STRING_KEY:
+				return "STRING_KEY";
+			case NULL:
+				return "NULL";
+			case THIS:
+				return "THIS";
+			case FALSE:
+				return "FALSE";
+			case TRUE:
+				return "TRUE";
+			case SHEQ:
+				return "SHEQ";
+			case SHNE:
+				return "SHNE";
+			case REGEXP:
+				return "REGEXP";
+			case THROW:
+				return "THROW";
+			case IN:
+				return "IN";
+			case INSTANCEOF:
+				return "INSTANCEOF";
+			case ARRAYLIT:
+				return "ARRAYLIT";
+			case OBJECTLIT:
+				return "OBJECTLIT";
+			case TRY:
+				return "TRY";
+			case PARAM_LIST:
+				return "PARAM_LIST";
+			case COMMA:
+				return "COMMA";
+			case ASSIGN:
+				return "ASSIGN";
+			case ASSIGN_BITOR:
+				return "ASSIGN_BITOR";
+			case ASSIGN_BITXOR:
+				return "ASSIGN_BITXOR";
+			case ASSIGN_BITAND:
+				return "ASSIGN_BITAND";
+			case ASSIGN_LSH:
+				return "ASSIGN_LSH";
+			case ASSIGN_RSH:
+				return "ASSIGN_RSH";
+			case ASSIGN_URSH:
+				return "ASSIGN_URSH";
+			case ASSIGN_ADD:
+				return "ASSIGN_ADD";
+			case ASSIGN_SUB:
+				return "ASSIGN_SUB";
+			case ASSIGN_MUL:
+				return "ASSIGN_MUL";
+			case ASSIGN_DIV:
+				return "ASSIGN_DIV";
+			case ASSIGN_MOD:
+				return "ASSIGN_MOD";
+			case HOOK:
+				return "HOOK";
+			case OR:
+				return "OR";
+			case AND:
+				return "AND";
+			case INC:
+				return "INC";
+			case DEC:
+				return "DEC";
+			case FUNCTION:
+				return "FUNCTION";
+			case IF:
+				return "IF";
+			case SWITCH:
+				return "SWITCH";
+			case CASE:
+				return "CASE";
+			case DEFAULT_CASE:
+				return "DEFAULT_CASE";
+			case WHILE:
+				return "WHILE";
+			case DO:
+				return "DO";
+			case FOR:
+				return "FOR";
+			case BREAK:
+				return "BREAK";
+			case CONTINUE:
+				return "CONTINUE";
+			case VAR:
+				return "VAR";
+			case WITH:
+				return "WITH";
+			case CATCH:
+				return "CATCH";
+			case EMPTY:
+				return "EMPTY";
+			case BLOCK:
+				return "BLOCK";
+			case LABEL:
+				return "LABEL";
+			case EXPR_RESULT:
+				return "EXPR_RESULT";
+			case SCRIPT:
+				return "SCRIPT";
+			case GETTER_DEF:
+				return "GETTER_DEF";
+			case SETTER_DEF:
+				return "SETTER_DEF";
+			case CONST:
+				return "CONST";
+			case DEBUGGER:
+				return "DEBUGGER";
+			case CAST:
+				return "CAST";
+			case ANNOTATION:
+				return "ANNOTATION";
+			case PIPE:
+				return "PIPE";
+			case STAR:
+				return "STAR";
+			case EOC:
+				return "EOC";
+			case QMARK:
+				return "QMARK";
+			case ELLIPSIS:
+				return "ELLIPSIS";
+			case BANG:
+				return "BANG";
+			case VOID:
+				return "VOID";
+			case EQUALS:
+				return "EQUALS";
+			case LB:
+				return "LB";
+			case LC:
+				return "LC";
+			case COLON:
+				return "COLON";
+			}
           case PARAM_LIST:      return "PARAM_LIST";
           case COMMA:           return "COMMA";
           case ASSIGN:          return "ASSIGN";


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:32:30.886962148 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:53:40.938356006 -0500
@@ -134,14 +134,6 @@
         Node catchCodeBlock = catchNode.getLastChild();
         tryMinimizeExits(catchCodeBlock, exitType, labelName);
       }
-      /* Don't try to minimize the exits of finally blocks, as this
-       * can cause problems if it changes the completion type of the finally
-       * block. See ECMA 262 Sections 8.9 & 12.14
-       */
-      if (NodeUtil.hasFinally(n)) {
-        Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
-      }
     }
 
     // Just a 'label'.


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_1322/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:53:40.938356006 -0500
@@ -1454,7 +1454,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


