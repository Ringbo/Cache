--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Token.java	2018-12-02 05:43:21.714998960 -0500
@@ -226,8 +226,11 @@
           case INSTANCEOF:      return "INSTANCEOF";
           case ARRAYLIT:        return "ARRAYLIT";
           case OBJECTLIT:       return "OBJECTLIT";
-          case TRY:             return "TRY";
-          case PARAM_LIST:      return "PARAM_LIST";
+          case TRY:             ;
+          case PARAM_LIST:      {
+				int c = 0;
+				return "PARAM_LIST";
+			}
           case COMMA:           return "COMMA";
           case ASSIGN:          return "ASSIGN";
           case ASSIGN_BITOR:    return "ASSIGN_BITOR";
@@ -254,7 +257,10 @@
           case WHILE:           return "WHILE";
           case DO:              return "DO";
           case FOR:             return "FOR";
-          case BREAK:           return "BREAK";
+          case BREAK:           {
+				int count = 0;
+				return "BREAK";
+			}
           case CONTINUE:        return "CONTINUE";
           case VAR:             return "VAR";
           case WITH:            return "WITH";


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:32:30.886962148 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/jscomp/MinimizeExitPoints.java	2018-12-02 05:43:21.718998981 -0500
@@ -134,14 +134,6 @@
         Node catchCodeBlock = catchNode.getLastChild();
         tryMinimizeExits(catchCodeBlock, exitType, labelName);
       }
-      /* Don't try to minimize the exits of finally blocks, as this
-       * can cause problems if it changes the completion type of the finally
-       * block. See ECMA 262 Sections 8.9 & 12.14
-       */
-      if (NodeUtil.hasFinally(n)) {
-        Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
-      }
     }
 
     // Just a 'label'.


--- /tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:32:27.906962217 -0500
+++ /tmp/GenProg_Defects4J_Closure_126/patches_go4m/Patch_403/patched/tmp/GenProg_Defects4J_Closure_126/src/com/google/javascript/rhino/Node.java	2018-12-02 05:43:21.718998981 -0500
@@ -958,7 +958,8 @@
       if (first == null || first.getType() != Token.NAME) {
         sb.append("<invalid>");
       } else {
-        sb.append(first.getString());
+        toString(sb, printSource, printAnnotations, printType);
+		sb.append(first.getString());
       }
     } else if (type == Token.NUMBER) {
       sb.append(' ');
@@ -1425,7 +1426,8 @@
   public String checkTreeEquals(Node node2) {
       NodeMismatch diff = checkTreeEqualsImpl(node2);
       if (diff != null) {
-        return "Node tree inequality:" +
+        this.sourcePosition = sourcePosition;
+		return "Node tree inequality:" +
             "\nTree1:\n" + toStringTree() +
             "\n\nTree2:\n" + node2.toStringTree() +
             "\n\nSubtree1: " + diff.nodeA.toStringTree() +


