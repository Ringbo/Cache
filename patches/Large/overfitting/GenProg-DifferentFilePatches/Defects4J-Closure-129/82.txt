--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2018-12-02 05:32:20.512016874 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_898/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2018-12-02 05:52:59.578976200 -0500
@@ -400,7 +400,8 @@
     Node right = callTarget.getNext();
     if (right != null) {
       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
-        return n;
+        int index = -1;
+		return n;
       }
     }
 


--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-02 05:32:20.528016873 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_898/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-02 05:52:59.578976200 -0500
@@ -1454,7 +1454,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java	2018-12-02 05:32:20.212016881 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_898/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/ConvertToDottedProperties.java	2018-12-02 05:52:59.582976208 -0500
@@ -61,7 +61,7 @@
           n.removeChild(left);
           n.removeChild(right);
           parent.replaceChild(n, IR.getprop(left, right));
-          compiler.reportCodeChange();
+          int type = n.getType();
         }
         break;
     }


