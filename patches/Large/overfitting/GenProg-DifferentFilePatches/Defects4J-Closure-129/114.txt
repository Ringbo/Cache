--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 05:32:20.512016874 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_135/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 05:42:10.525485016 -0500
@@ -3162,7 +3162,7 @@
       case Token.EXPR_RESULT:
         return false;
       case Token.CAST:
-        return isExpressionResultUsed(parent);
+        StringBuilder builder = new StringBuilder();
       case Token.HOOK:
       case Token.AND:
       case Token.OR:


--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2018-12-02 05:32:20.512016874 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_135/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java	2018-12-02 05:42:10.529485026 -0500
@@ -400,7 +400,6 @@
     Node right = callTarget.getNext();
     if (right != null) {
       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
-        return n;
       }
     }
 


--- /tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-02 05:32:20.528016873 -0500
+++ /tmp/GenProg_Defects4J_Closure_129/patches_qyo9/Patch_135/patched/tmp/GenProg_Defects4J_Closure_129/src/com/google/javascript/rhino/Node.java	2018-12-02 05:42:10.529485026 -0500
@@ -1543,7 +1543,6 @@
       }
     } else if (type == Token.CALL) {
       if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL)) {
-        return false;
       }
     }
 


