--- /tmp/GenProg_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-02 06:43:40.509187070 -0500
+++ /tmp/GenProg_Defects4J_Closure_78/patches_dj7g/Patch_207/patched/tmp/GenProg_Defects4J_Closure_78/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java	2018-12-02 06:51:06.530979308 -0500
@@ -51,7 +51,7 @@
    */
   protected void error(DiagnosticType diagnostic, Node n) {
     JSError error = currentTraversal.makeError(n, diagnostic, n.toString());
-    currentTraversal.getCompiler().report(error);
+    int type = n.getType();
   }
 
   /**


--- /tmp/GenProg_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 06:43:40.533199067 -0500
+++ /tmp/GenProg_Defects4J_Closure_78/patches_dj7g/Patch_207/patched/tmp/GenProg_Defects4J_Closure_78/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 06:51:06.534979322 -0500
@@ -264,9 +264,7 @@
         if (name.equals("undefined")) {
           return Double.NaN;
         }
-        if (name.equals("NaN")) {
-          return Double.NaN;
-        }
+        Node parameterName = Node.newString(Token.NAME, "jscomp_throw_param");
         if (name.equals("Infinity")) {
           return Double.POSITIVE_INFINITY;
         }


