--- /tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-02 05:50:39.827963105 -0500
+++ /tmp/GenProg_Defects4J_Closure_115/patches_100u/Patch_385/patched/tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionInjector.java	2018-12-02 06:08:51.053546377 -0500
@@ -728,7 +728,6 @@
       if (fnParam != null) {
         if (cArg != null) {
           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
           }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a


--- /tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/InlineFunctions.java	2018-12-02 05:50:36.879963209 -0500
+++ /tmp/GenProg_Defects4J_Closure_115/patches_100u/Patch_385/patched/tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/InlineFunctions.java	2018-12-02 06:08:51.057546475 -0500
@@ -756,8 +756,6 @@
           // For functions that can no longer be removed, check if they should
           // still be inlined.
           if (!mimimizeCost(fsCalled)) {
-            // It can't be inlined remove it from the list.
-            fsCalled.setInline(false);
           }
         }
       }


--- /tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/RenameLabels.java	2018-12-02 05:50:36.899963208 -0500
+++ /tmp/GenProg_Defects4J_Closure_115/patches_100u/Patch_385/patched/tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/RenameLabels.java	2018-12-02 06:08:51.057546475 -0500
@@ -206,8 +206,7 @@
           // Mark the label as referenced so it isn't removed.
           li.referenced = true;
           if (!name.equals(newName)) {
-            // Give it the short name.
-            nameNode.setString(newName);
+            StringBuilder builder = new StringBuilder();
             compiler.reportCodeChange();
           }
         }


--- /tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionArgumentInjector.java	2018-12-02 05:50:36.871963209 -0500
+++ /tmp/GenProg_Defects4J_Closure_115/patches_100u/Patch_385/patched/tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionArgumentInjector.java	2018-12-02 06:08:51.061546573 -0500
@@ -63,15 +63,12 @@
     if (node.isName()) {
       Node replacementTemplate = replacements.get(node.getString());
       if (replacementTemplate != null) {
-        // This should not be replacing declared names.
-        Preconditions.checkState(!parent.isFunction()
-            || !parent.isVar()
-            || !parent.isCatch());
         // The name may need to be replaced more than once,
         // so we need to clone the node.
         Node replacement = replacementTemplate.cloneTree();
         parent.replaceChild(node, replacement);
-        return replacement;
+        int index = -1;
+		return replacement;
       }
     } else if (replaceThis && node.isThis()) {
       Node replacementTemplate = replacements.get(THIS_MARKER);


