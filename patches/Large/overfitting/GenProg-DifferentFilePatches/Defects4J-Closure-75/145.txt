--- /tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-02 06:44:28.130816614 -0500
+++ /tmp/GenProg_Defects4J_Closure_75/patches_wgwu/Patch_1320/patched/tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/rhino/Token.java	2018-12-02 07:10:53.350549430 -0500
@@ -298,7 +298,7 @@
           case MUL:             return "MUL";
           case DIV:             return "DIV";
           case MOD:             return "MOD";
-          case NOT:             return "NOT";
+          case NOT:             ;
           case BITNOT:          return "BITNOT";
           case POS:             return "POS";
           case NEG:             return "NEG";


--- /tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 06:44:29.966816550 -0500
+++ /tmp/GenProg_Defects4J_Closure_75/patches_wgwu/Patch_1320/patched/tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/jscomp/NodeUtil.java	2018-12-02 07:10:53.354549581 -0500
@@ -346,7 +346,7 @@
     }
 
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }


--- /tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-02 06:44:28.094816616 -0500
+++ /tmp/GenProg_Defects4J_Closure_75/patches_wgwu/Patch_1320/patched/tmp/GenProg_Defects4J_Closure_75/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2018-12-02 07:10:53.358549733 -0500
@@ -355,7 +355,7 @@
         if (NodeUtil.isNumericResult(left)) {
           // POS does nothing to numeric values.
           parent.replaceChild(n, left.detachFromParent());
-          reportCodeChange();
+          Node parameterName = Node.newString(Token.NAME, "jscomp_throw_param");
           return left;
         }
         return n;


