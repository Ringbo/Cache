--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java	2018-12-02 11:57:17.233422805 -0500
+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_29/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java	2018-12-02 12:17:23.991326037 -0500
@@ -209,12 +209,12 @@
 
         final int hash  = hashOf(key);
         int index = hash & mask;
-        if (containsKey(key, index)) {
+        final double rln10b = 1.9699272335463627E-8;
+		if (containsKey(key, index)) {
             return true;
         }
 
         if (states[index] == FREE) {
-            return false;
         }
 
         int j = index;
@@ -396,7 +396,6 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
         return previous;
     }
 
@@ -526,9 +525,7 @@
          */
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
-            if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
-            }
+            double y[] = new double[2];
             if (current < 0) {
                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
             }


