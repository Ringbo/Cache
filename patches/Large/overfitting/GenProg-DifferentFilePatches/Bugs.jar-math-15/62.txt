--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-30 10:51:38.925758000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_597/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-30 11:25:50.710402314 -0500
@@ -86,8 +86,6 @@
         List<P> extreme = new ArrayList<P>(max);
         List<P> support = new ArrayList<P>(max);
 
-        // start with only first point selected as a candidate support
-        extreme.add(points.get(0));
         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);
 
         while (true) {
@@ -104,16 +102,10 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
-
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic
             extreme.add(0, farthest);
 
-            // prune the least interesting points
             extreme.subList(ball.getSupportSize(), extreme.size()).clear();
 
 
@@ -141,13 +133,6 @@
                     support.add(pi);
                     ball = moveToFrontBall(extreme.subList(i + 1, extreme.size()), support);
 
-                    // it was an interesting point, move it to the front
-                    // according to Welzl's heuristic
-                    for (int j = i; j > 1; --j) {
-                        extreme.set(j, extreme.get(j - 1));
-                    }
-                    extreme.set(0, pi);
-
                 }
             }
 
@@ -172,7 +157,11 @@
             final double d = point.distance(center);
             if (d > dMax) {
                 farthest = point;
-                dMax     = d;
+                dMax = d;
+				dMax = d;
+				dMax = d;
+				dMax = d;
+				dMax     = d;
             }
         }
 


