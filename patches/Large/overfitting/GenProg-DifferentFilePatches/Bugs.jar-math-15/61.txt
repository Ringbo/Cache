--- /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-30 10:51:38.925758000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/patches_9tkz/Patch_666/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_faf99727/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java	2018-12-30 11:26:36.478943512 -0500
@@ -104,18 +104,10 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
-
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic
             extreme.add(0, farthest);
 
-            // prune the least interesting points
-            extreme.subList(ball.getSupportSize(), extreme.size()).clear();
-
 
         }
     }
@@ -145,6 +137,8 @@
                     // according to Welzl's heuristic
                     for (int j = i; j > 1; --j) {
                         extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
                     }
                     extreme.set(0, pi);
 


