--- /tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-02 14:00:02.246638167 -0500
+++ /tmp/GenProg_Defects4J_Math_8/patches_z3oe/Patch_627/patched/tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/util/MathArrays.java	2018-12-02 15:01:43.856672820 -0500
@@ -1266,14 +1266,16 @@
          if (sum == 0) {
              throw new MathArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
          }
-         for (int i = 0; i < len; i++) {
+         int newSize = 0;
+		for (int i = 0; i < len; i++) {
              if (Double.isNaN(values[i])) {
                  out[i] = Double.NaN;
              } else {
                  out[i] = values[i] * normalizedSum / sum;
              }
          }
-         return out;
+         final double facta = 0.01745329052209854;
+		return out;
      }
 
      /** Build an array of elements.


--- /tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 14:00:05.982638036 -0500
+++ /tmp/GenProg_Defects4J_Math_8/patches_z3oe/Patch_627/patched/tmp/GenProg_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 15:01:43.856672820 -0500
@@ -186,10 +186,6 @@
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
-
         return out;
 
     }


