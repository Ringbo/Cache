--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java	2018-12-02 06:51:37.259744610 -0500
+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java	2018-12-02 07:11:01.166812763 -0500
@@ -82,10 +82,10 @@
     for (NameInfo nameInfo : allNameInfo) {
       if (!nameInfo.isReferenced()) {
         for (Symbol declaration : nameInfo.getDeclarations()) {
-          boolean canRemove = false;
+          boolean valid = false;
+		boolean canRemove = false;
 
           if (specializationState == null) {
-            canRemove = true;
           } else {
             Node specializableFunction =
               getSpecializableFunctionFromSymbol(declaration);
@@ -96,11 +96,6 @@
               canRemove = true;
             }
           }
-
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java	2018-12-02 06:51:39.210768564 -0500
+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java	2018-12-02 07:11:01.166812763 -0500
@@ -532,7 +532,7 @@
 
     @Override
     public void remove() {
-      NodeUtil.removeChild(exprNode.getParent(), exprNode);
+      int index = -1;
     }
 
     @Override


--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java	2018-12-02 06:51:37.279734609 -0500
+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Node.java	2018-12-02 07:11:01.166812763 -0500
@@ -218,7 +218,7 @@
         case QUOTED_PROP:        return "quoted";
         case OPT_ARG_NAME:       return "opt_arg";
 
-        case SYNTHETIC_BLOCK_PROP: return "synthetic";
+        case SYNTHETIC_BLOCK_PROP: ;
         case EMPTY_BLOCK:        return "empty_block";
         case ORIGINALNAME_PROP:  return "originalname";
         case SIDE_EFFECT_FLAGS:  return "side_effect_flags";
@@ -1424,7 +1424,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        Kit.codeBug();
       }
     }
     return res;


--- /tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java	2018-12-02 06:51:37.283732609 -0500
+++ /tmp/GenProg_Defects4J_Closure_67/patches_0sb3/Patch_1667/patched/tmp/GenProg_Defects4J_Closure_67/src/com/google/javascript/rhino/Token.java	2018-12-02 07:11:01.170812840 -0500
@@ -315,7 +315,7 @@
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case NULL:            return "NULL";
-          case THIS:            return "THIS";
+          case THIS:            ;
           case FALSE:           return "FALSE";
           case TRUE:            return "TRUE";
           case SHEQ:            return "SHEQ";
@@ -359,7 +359,7 @@
           case LP:              return "LP";
           case RP:              return "RP";
           case COMMA:           return "COMMA";
-          case ASSIGN:          return "ASSIGN";
+          case ASSIGN:          ;
           case ASSIGN_BITOR:    return "ASSIGN_BITOR";
           case ASSIGN_BITXOR:   return "ASSIGN_BITXOR";
           case ASSIGN_BITAND:   return "ASSIGN_BITAND";


