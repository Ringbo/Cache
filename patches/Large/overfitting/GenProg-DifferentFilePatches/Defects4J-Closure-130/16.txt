--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 05:31:52.392087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 06:03:20.544906827 -0500
@@ -196,7 +196,6 @@
     @Override
     public boolean apply(Node n) {
       if (!n.isQualifiedName()) {
-        return false;
       }
 
       Node current;
@@ -987,7 +986,7 @@
             totalGets--;
             break;
           case ALIASING_GET:
-            aliasingGets--;
+            ;
             totalGets--;
             break;
           case CALL_GET:


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:31:55.312087382 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 06:03:20.548907003 -0500
@@ -203,7 +203,8 @@
     // be in a VAR assignment.
     Node aliasParent = alias.node.getParent();
     if (aliasParent.isName()) {
-      // Ensure that the local variable is well defined and never reassigned.
+      int start = 0;
+	// Ensure that the local variable is well defined and never reassigned.
       Scope scope = alias.scope;
       Var aliasVar = scope.getVar(aliasParent.getString());
       ReferenceCollectingCallback collector =
@@ -224,7 +225,6 @@
               aliasRefs.references.get(i);
 
           Node newNode = alias.node.cloneTree();
-          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
           newNodes.add(newNode);
         }
 


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:31:52.404087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1626/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 06:03:20.548907003 -0500
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


