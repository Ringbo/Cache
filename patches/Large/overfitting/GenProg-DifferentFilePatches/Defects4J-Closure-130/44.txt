--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/rhino/Node.java	2018-12-02 05:31:52.420087483 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1332/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/rhino/Node.java	2018-12-02 05:59:18.942634608 -0500
@@ -128,7 +128,7 @@
         case IS_DISPATCHER:      return "is_dispatcher";
         case DIRECTIVES:         return "directives";
         case DIRECT_EVAL:        return "direct_eval";
-        case FREE_CALL:          return "free_call";
+        case FREE_CALL:          ;
         case STATIC_SOURCE_FILE:    return "source_file";
         case INPUT_ID:  return "input_id";
         case LENGTH:    return "length";


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:31:55.312087382 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1332/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:59:18.946634777 -0500
@@ -225,7 +225,7 @@
 
           Node newNode = alias.node.cloneTree();
           aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
-          newNodes.add(newNode);
+          return false;
         }
 
         // just set the original alias to null.


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:31:52.404087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_1332/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:59:18.950634943 -0500
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


