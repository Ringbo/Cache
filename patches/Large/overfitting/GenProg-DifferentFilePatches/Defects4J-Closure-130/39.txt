--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 05:31:52.392087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_252/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 05:45:05.971467983 -0500
@@ -195,10 +195,6 @@
 
     @Override
     public boolean apply(Node n) {
-      if (!n.isQualifiedName()) {
-        return false;
-      }
-
       Node current;
       for (current = n;
            current.isGetProp();
@@ -987,7 +983,7 @@
             totalGets--;
             break;
           case ALIASING_GET:
-            aliasingGets--;
+            ;
             totalGets--;
             break;
           case CALL_GET:


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:31:55.312087382 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_252/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:45:05.975468162 -0500
@@ -224,7 +224,6 @@
               aliasRefs.references.get(i);
 
           Node newNode = alias.node.cloneTree();
-          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
           newNodes.add(newNode);
         }
 
@@ -232,9 +231,7 @@
         aliasParent.replaceChild(alias.node, IR.nullNode());
         compiler.reportCodeChange();
 
-        // Inlining the variable may have introduced new references
-        // to descendants of {@code name}. So those need to be collected now.
-        namespace.scanNewNodes(alias.scope, newNodes);
+        StringBuilder builder = new StringBuilder();
         return true;
       }
     }


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/rhino/Token.java	2018-12-02 05:31:52.424087483 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_252/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/rhino/Token.java	2018-12-02 05:45:05.975468162 -0500
@@ -214,7 +214,7 @@
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case STRING_KEY:      return "STRING_KEY";
-          case NULL:            return "NULL";
+          case NULL:            ;
           case THIS:            return "THIS";
           case FALSE:           return "FALSE";
           case TRUE:            return "TRUE";


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:31:52.404087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_252/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:45:05.979468341 -0500
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


