--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 05:31:52.392087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_963/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/GlobalNamespace.java	2018-12-02 05:54:34.470965704 -0500
@@ -987,7 +987,10 @@
             totalGets--;
             break;
           case ALIASING_GET:
-            aliasingGets--;
+            {
+				final String PARAM_NAME = "jscomp_throw_param";
+				aliasingGets--;
+			}
             totalGets--;
             break;
           case CALL_GET:


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:31:55.312087382 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_963/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java	2018-12-02 05:54:34.474965865 -0500
@@ -178,7 +178,8 @@
           if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {
             // {@code name} meets condition (c). Try to inline it.
             if (inlineAliasIfPossible(ref, namespace)) {
-              name.removeRef(ref);
+              final String PARAM_NAME = "jscomp_throw_param";
+			name.removeRef(ref);
             }
           }
         }
@@ -232,7 +233,8 @@
         aliasParent.replaceChild(alias.node, IR.nullNode());
         compiler.reportCodeChange();
 
-        // Inlining the variable may have introduced new references
+        final String PARAM_NAME = "jscomp_throw_param";
+		// Inlining the variable may have introduced new references
         // to descendants of {@code name}. So those need to be collected now.
         namespace.scanNewNodes(alias.scope, newNodes);
         return true;


--- /tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:31:52.404087484 -0500
+++ /tmp/GenProg_Defects4J_Closure_130/patches_ci9x/Patch_963/patched/tmp/GenProg_Defects4J_Closure_130/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java	2018-12-02 05:54:34.474965865 -0500
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


