--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:08:36.461549548 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:11:51.189545038 -0500
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
@@ -220,11 +221,16 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
-        }
+			if (p == 1) {
+				return Double.POSITIVE_INFINITY;
+			}
+			if (p > .5) {
+				ret = getMean() + getStandardDeviation();
+			} else {
+				ret = getMean();
+			}
+		}
         
         return ret;
     }


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:11:51.189545038 -0500
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_139/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-02 11:11:51.189545038 -0500
@@ -86,17 +86,7 @@
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
         }  catch (ConvergenceException ex) {
-            /* 
-             * Check domain endpoints to see if one gives value that is within
-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the
-             * case if density has bounded support and p is 0 or 1).
-             * 
-             * TODO: expose the default solver, defaultAbsoluteAccuracy as
-             * a constant.
-             */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
-            }
+            double value = 0;
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     


