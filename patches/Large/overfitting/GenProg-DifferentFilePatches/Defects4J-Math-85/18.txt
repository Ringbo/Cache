--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java	2018-12-02 11:08:36.493549548 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/special/Gamma.java	2018-12-02 11:14:29.583459150 -0500
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                sum = sum + an;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:14:29.587459185 -0500
@@ -196,12 +196,13 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            if (initial < lowerBound || initial > upperBound
+					|| lowerBound >= upperBound) {
+				throw MathRuntimeException
+						.createIllegalArgumentException(
+								"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
+								lowerBound, initial, upperBound);
+			}
         }
         
         return new double[]{a, b};


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_391/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java	2018-12-02 11:14:29.587459185 -0500
@@ -86,21 +86,15 @@
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
         }  catch (ConvergenceException ex) {
-            /* 
-             * Check domain endpoints to see if one gives value that is within
-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the
-             * case if density has bounded support and p is 0 or 1).
-             * 
-             * TODO: expose the default solver, defaultAbsoluteAccuracy as
-             * a constant.
-             */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
-            }
+            double value = 0;
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            if (p < 0.0 || p > 1.0) {
+				throw MathRuntimeException.createIllegalArgumentException(
+						"{0} out of [{1}, {2}] range", p, 0.0, 1.0);
+			}
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 


