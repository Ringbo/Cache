--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:08:36.461549548 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_248/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:13:01.726033296 -0500
@@ -159,7 +159,13 @@
         if (p == 1) {
             return Double.POSITIVE_INFINITY;
         }
-        return super.inverseCumulativeProbability(p);
+        if (p == 0) {
+			return 0;
+		} else if (p == 1) {
+			return 1;
+		} else {
+			return super.inverseCumulativeProbability(p);
+		}
     }
     
     /**
@@ -178,7 +184,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = -getMean() * Math.log(1.0 - p);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +207,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_248/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:13:01.730033415 -0500
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};


