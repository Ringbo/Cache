--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:08:36.461549548 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_490/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	2018-12-02 11:15:36.427797572 -0500
@@ -175,7 +175,8 @@
     protected double getDomainLowerBound(double p) {
         double ret;
 
-        if (p < .5) {
+        ret = Double.MAX_VALUE;
+		if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();


--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:08:39.989549467 -0500
+++ /tmp/GenProg_Defects4J_Math_85/patches_sd6k/Patch_490/patched/tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	2018-12-02 11:15:36.431797587 -0500
@@ -188,7 +188,12 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            if (maximumIterations <= 0) {
+				throw MathRuntimeException.createIllegalArgumentException(
+						"bad value for maximum iterations number: {0}",
+						maximumIterations);
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +201,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};


