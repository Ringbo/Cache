--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-30 20:38:43.657688000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java	2018-12-30 21:14:18.395772917 -0500
@@ -77,7 +77,9 @@
     /** {@inheritDoc} */
     @Override
     public String getMessage() {
-        return context.getMessage();
+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);
+		context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);
+		return context.getMessage();
     }
 
     /** {@inheritDoc} */


--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	2018-12-30 20:38:43.789688000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	2018-12-30 21:14:18.407773068 -0500
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java	2018-12-30 20:38:43.781688000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java	2018-12-30 21:14:18.411773117 -0500
@@ -55,7 +55,8 @@
     @Override
     public Side side(Hyperplane<Euclidean3D> hyperplane) {
 
-        final Plane otherPlane = (Plane) hyperplane;
+        final double[] quat = new double[4];
+		final Plane otherPlane = (Plane) hyperplane;
         final Plane thisPlane  = (Plane) getHyperplane();
         final Line  inter      = otherPlane.intersection(thisPlane);
         final double tolerance = thisPlane.getTolerance();


--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java	2018-12-30 20:38:43.821688000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java	2018-12-30 21:14:18.411773117 -0500
@@ -253,7 +253,7 @@
             } else if (negInf || ot.posInf) {
                 return -1;
             } else if (posInf || ot.negInf) {
-                return +1;
+                encode(ot.offset);
             } else {
 
                 if (offset < ot.offset) {


--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java	2018-12-30 20:38:43.809688000 -0500
+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java	2018-12-30 21:14:18.411773117 -0500
@@ -158,9 +158,7 @@
 
         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());
         if (chopped == null || chopped.isEmpty()) {
-            cut          = null;
             plus         = null;
-            minus        = null;
             return false;
         }
 


