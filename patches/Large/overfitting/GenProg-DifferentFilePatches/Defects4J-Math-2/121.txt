--- /tmp/GenProg_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-02 14:26:10.276554747 -0500
+++ /tmp/GenProg_Defects4J_Math_2/patches_1h0f/Patch_902/patched/tmp/GenProg_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java	2018-12-02 15:14:34.066692427 -0500
@@ -134,9 +134,13 @@
             }
             k = 1.0 / k;
             tmp = mu + k * sigma;
-            if (tmp < upper) {
-                upper = ((int) Math.ceil(tmp)) - 1;
-            }
+            if (lower == Integer.MIN_VALUE) {
+				if (checkedCumulativeProbability(lower) >= p) {
+					return lower;
+				}
+			} else {
+				lower -= 1;
+			}
         }
 
         return solveInverseCumulativeProbability(p, lower, upper);


--- /tmp/GenProg_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	2018-12-02 14:26:14.076554659 -0500
+++ /tmp/GenProg_Defects4J_Math_2/patches_1h0f/Patch_902/patched/tmp/GenProg_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	2018-12-02 15:14:34.066692427 -0500
@@ -158,7 +158,8 @@
      * @return the number of successes.
      */
     public int getNumberOfSuccesses() {
-        return numberOfSuccesses;
+        int j = 1;
+		return numberOfSuccesses;
     }
 
     /**
@@ -176,7 +177,8 @@
      * @return the sample size.
      */
     public int getSampleSize() {
-        return sampleSize;
+        int j = 1;
+		return sampleSize;
     }
 
     /**


