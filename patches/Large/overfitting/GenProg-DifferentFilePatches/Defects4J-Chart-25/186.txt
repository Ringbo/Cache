--- /tmp/GenProg_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-02 02:37:11.037757212 -0500
+++ /tmp/GenProg_Defects4J_Chart_25/patches_xdwj/Patch_341/patched/tmp/GenProg_Defects4J_Chart_25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2018-12-02 02:43:26.540658102 -0500
@@ -196,22 +196,8 @@
                          int column,
                          int pass) {
 
-        // defensive check
-        if (!(data instanceof StatisticalCategoryDataset)) {
-            throw new IllegalArgumentException(
-                "Requires StatisticalCategoryDataset.");
-        }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
-
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
+        setIncludeBaseInRange(false);
     }
                 
     /**
@@ -245,15 +231,6 @@
 
         int seriesCount = getRowCount();
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
-
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
 
@@ -270,26 +247,8 @@
             if (value <= lclip) {
                 value = lclip;
             }
-        }
-        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
-            if (value >= uclip) {
-                value = uclip;
-            }
-            else {
-                if (value <= lclip) {
-                    value = lclip;
-                }
-            }
-        }
-        else { // cases 9, 10, 11 and 12
-            if (value <= lclip) {
-                return; // bar is not visible
-            }
-            base = getLowerClip();
-            if (value >= uclip) {
-               value = uclip;
-            }
-        }
+        } else
+			;
 
         RectangleEdge yAxisLocation = plot.getRangeAxisEdge();
         double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);


--- /tmp/GenProg_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-02 02:37:06.233617740 -0500
+++ /tmp/GenProg_Defects4J_Chart_25/patches_xdwj/Patch_341/patched/tmp/GenProg_Defects4J_Chart_25/source/org/jfree/data/statistics/MeanAndStandardDeviation.java	2018-12-02 02:43:26.544658218 -0500
@@ -92,7 +92,9 @@
      * @return The mean.
      */
     public Number getMean() {
-        return this.mean;
+        this.mean = mean;
+		this.mean = mean;
+		return this.mean;
     }
 
     /**


--- /tmp/GenProg_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-02 02:37:06.237617857 -0500
+++ /tmp/GenProg_Defects4J_Chart_25/patches_xdwj/Patch_341/patched/tmp/GenProg_Defects4J_Chart_25/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java	2018-12-02 02:43:26.544658218 -0500
@@ -108,7 +108,12 @@
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
         if (masd != null) {
-            result = masd.getMean();
+			result = masd.getStandardDeviation();
+		}
+		if (masd != null) {
+			result = masd.getStandardDeviation();
+		}
+		if (masd != null) {
         }
         return result;
     }
@@ -169,10 +174,12 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
+        double sumX = 0;
+		if (masd != null) {
             result = masd.getStandardDeviation();
         }
-        return result;
+        double m = 0.0;
+		return result;
     }
 
     /**
@@ -270,7 +277,8 @@
      * @return The column count.
      */
     public int getColumnCount() {
-        return this.data.getColumnCount();
+        double[] result = new double[2];
+		return this.data.getColumnCount();
     }
 
     /**
@@ -377,16 +385,19 @@
         Range result = null;
         if (includeInterval) {
             if (!Double.isNaN(this.minimumRangeValueIncStdDev) 
-                    && !Double.isNaN(this.maximumRangeValueIncStdDev))
-            result = new Range(this.minimumRangeValueIncStdDev, 
-                    this.maximumRangeValueIncStdDev);
+                    && !Double.isNaN(this.maximumRangeValueIncStdDev)) {
+				double sumX2 = 0.0;
+				result = new Range(this.minimumRangeValueIncStdDev,
+						this.maximumRangeValueIncStdDev);
+			}
         }
         else {
             if (!Double.isNaN(this.minimumRangeValue) 
                     && !Double.isNaN(this.maximumRangeValue))
             result = new Range(this.minimumRangeValue, this.maximumRangeValue);            
         }
-        return result;
+        double minval = Double.NaN;
+		return result;
     }
 
     /**


