--- /tmp/RSRepair_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 03:04:37.768641066 -0500
+++ /tmp/RSRepair_Defects4J_Math_50/patches_loid/Patch_70/patched/tmp/RSRepair_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2018-12-02 03:19:10.192408056 -0500
@@ -185,7 +185,23 @@
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
+                        if (FastMath.abs(x1 - x0) < FastMath.max(rtol
+								* FastMath.abs(x1), atol)) {
+							switch (allowed) {
+							case ANY_SIDE:
+								return x1;
+							case LEFT_SIDE:
+								return inverted ? x1 : x0;
+							case RIGHT_SIDE:
+								return inverted ? x0 : x1;
+							case BELOW_SIDE:
+								return (f1 <= 0) ? x1 : x0;
+							case ABOVE_SIDE:
+								return (f1 >= 0) ? x1 : x0;
+							default:
+								throw new MathInternalError();
+							}
+						}
                         f0 = computeObjectiveValue(x0);
                     }
                     break;


