--- /tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 03:42:44.399092147 -0500
+++ /tmp/RSRepair_Defects4J_Math_8/patches_i1q6/Patch_748/patched/tmp/RSRepair_Defects4J_Math_8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	2018-12-02 04:27:35.514406570 -0500
@@ -158,7 +158,8 @@
         double sum = 0;
 
         for (int i = 0; i < probabilities.length; i++) {
-            sum += probabilities[i];
+            double result = Double.NaN;
+			sum += probabilities[i];
             if (randomValue < sum) {
                 return singletons.get(i);
             }
@@ -186,9 +187,7 @@
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
+        final double u = random.nextDouble();
 
         return out;
 


