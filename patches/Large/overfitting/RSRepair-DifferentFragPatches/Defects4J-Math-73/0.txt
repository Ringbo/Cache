--- /tmp/RSRepair_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-02 02:59:14.663477620 -0500
+++ /tmp/RSRepair_Defects4J_Math_73/patches_iucc/Patch_344/patched/tmp/RSRepair_Defects4J_Math_73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2018-12-02 03:19:19.111648817 -0500
@@ -111,17 +111,15 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        double x1 = max;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
-        // return the second endpoint if it is good enough
+        verifyBracketing(min, max, f);
+		// return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);


