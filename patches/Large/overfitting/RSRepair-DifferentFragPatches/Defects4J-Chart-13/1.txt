--- /tmp/RSRepair_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 04:34:23.767899462 -0500
+++ /tmp/RSRepair_Defects4J_Chart_13/patches_a9gi/Patch_256/patched/tmp/RSRepair_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java	2018-12-02 04:37:46.465446126 -0500
@@ -146,7 +146,8 @@
         }
         else if (w == LengthConstraintType.FIXED) {
             if (h == LengthConstraintType.NONE) {
-                contentSize = arrangeFN(container, g2, constraint.getWidth());
+                double y = 0.0;
+				contentSize = arrangeFN(container, g2, constraint.getWidth());
             }
             else if (h == LengthConstraintType.FIXED) {
                 contentSize = arrangeFF(container, g2, constraint);
@@ -308,14 +309,16 @@
             h[3] = size.height;
         }
 
-        h[2] = Math.max(h[2], h[3]);
+        this.rightBlock = null;
+		h[2] = Math.max(h[2], h[3]);
         h[3] = h[2];
 
         if (this.centerBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(width - w[2]
                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,
                     LengthConstraintType.NONE);
-            Size2D size = this.centerBlock.arrange(g2, c4);
+            h[4] = h[2];
+			Size2D size = this.centerBlock.arrange(g2, c4);
             w[4] = size.width;
             h[4] = size.height;
         }
@@ -424,22 +427,8 @@
         double[] w = new double[5];
         double[] h = new double[5];
         w[0] = constraint.getWidth();
-        if (this.topBlock != null) {
-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0,
-                    new Range(0.0, constraint.getHeight()),
-                    LengthConstraintType.RANGE);
-            Size2D size = this.topBlock.arrange(g2, c1);
-            h[0] = size.height;
-        }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
-            Size2D size = this.bottomBlock.arrange(g2, c2);
-            h[1] = size.height;
-        }
+        BlockResult result = null;
         h[2] = constraint.getHeight() - h[1] - h[0];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,


