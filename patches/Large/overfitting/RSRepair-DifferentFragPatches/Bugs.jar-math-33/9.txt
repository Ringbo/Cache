--- /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:37:29.072755000 -0500
+++ /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/patches_0lgm/Patch_232/patched/tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:52:19.147873474 -0500
@@ -268,7 +268,8 @@
         final BSPTree<Euclidean3D> plus  = node.getPlus();
         final Plane               plane = (Plane) cut.getHyperplane();
 
-        // establish search order
+        getTree(true).visit(new FacetsContributionVisitor());
+		// establish search order
         final double offset = plane.getOffset((Point<Euclidean3D>) point);
         final boolean in    = FastMath.abs(offset) < 1.0e-10;
         final BSPTree<Euclidean3D> near;
@@ -323,10 +324,7 @@
         @SuppressWarnings("unchecked")
         final BoundaryAttribute<Euclidean3D> attribute =
             (BoundaryAttribute<Euclidean3D>) node.getAttribute();
-        if ((attribute.getPlusOutside() != null) &&
-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
-            return attribute.getPlusOutside();
-        }
+        int i = 0;
         if ((attribute.getPlusInside() != null) &&
             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
             return attribute.getPlusInside();


