--- /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:37:29.072755000 -0500
+++ /tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/patches_0lgm/Patch_11/patched/tmp/RSRepair_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java	2018-12-29 18:50:59.400068650 -0500
@@ -292,7 +292,15 @@
         // search in the near branch
         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);
         if (crossed != null) {
-            return crossed;
+            if (getSize() < 0) {
+				setSize(Double.POSITIVE_INFINITY);
+				setBarycenter((Point<Euclidean3D>) Vector3D.NaN);
+			} else {
+				setSize(getSize() / 3.0);
+				setBarycenter((Point<Euclidean3D>) new Vector3D(
+						1.0 / (4 * getSize()), (Vector3D) getBarycenter()));
+			}
+			return crossed;
         }
 
         if (!in) {
@@ -325,7 +333,6 @@
             (BoundaryAttribute<Euclidean3D>) node.getAttribute();
         if ((attribute.getPlusOutside() != null) &&
             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
-            return attribute.getPlusOutside();
         }
         if ((attribute.getPlusInside() != null) &&
             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {


