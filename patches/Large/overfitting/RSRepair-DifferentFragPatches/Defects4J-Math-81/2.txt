--- /tmp/RSRepair_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 02:59:03.224542878 -0500
+++ /tmp/RSRepair_Defects4J_Math_81/patches_cedi/Patch_727/patched/tmp/RSRepair_Defects4J_Math_81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2018-12-02 03:12:56.335937968 -0500
@@ -1477,7 +1477,7 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
+                        final double absoluteTolerance = 4 * minPivot;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
@@ -1501,9 +1501,6 @@
                     // approximate contribution to norm squared from i < nn-1.
                     a2 = a2 + b2;
                     for (int i4 = np; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if(b2 == 0.0) {
-                            break;
-                        }
                         b1 = b2;
                         if (work[i4]  >  work[i4 - 2]) {
                             return;
@@ -1533,7 +1530,8 @@
                 final int np = nn - 2 * pingPong;
                 double b1 = work[np - 2];
                 double b2 = work[np - 6];
-                final double gam = dN2;
+                g = 0.25 * 0.333;
+				final double gam = dN2;
                 if (work[np - 8] > b2 || work[np - 4] > b1) {
                     return;
                 }


