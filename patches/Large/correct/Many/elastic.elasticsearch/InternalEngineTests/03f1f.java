diff --git a/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java b/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
index ddd56ec..6e12e64 100644
--- a/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
+++ b/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
@@ -1582,7 +1582,7 @@
         index = new Engine.Create(null, analyzer, newUid("1"), doc, Versions.MATCH_ANY, VersionType.INTERNAL, PRIMARY, System.nanoTime(), canHaveDuplicates, autoGeneratedId);
         engine.create(index);
         assertThat(index.version(), equalTo(1l));
-        engine.refresh("test", true);
+        engine.refresh("test");
         Engine.Searcher searcher = engine.acquireSearcher("test");
         TopDocs topDocs = searcher.searcher().search(new MatchAllDocsQuery(), 10);
         assertThat(topDocs.totalHits, equalTo(1));
@@ -1594,7 +1594,7 @@
         } catch (VersionConflictEngineException e) {
             // we ignore version conflicts on replicas, see TransportShardReplicationOperationAction.ignoreReplicaException
         }
-        replicaEngine.refresh("test", true);
+        replicaEngine.refresh("test");
         Engine.Searcher replicaSearcher = replicaEngine.acquireSearcher("test");
         topDocs = replicaSearcher.searcher().search(new MatchAllDocsQuery(), 10);
         assertThat(topDocs.totalHits, equalTo(1));
@@ -1626,7 +1626,7 @@
             // we can ignore the exception. In case this happens because the retry request arrived first then this error will not be sent back anyway.
             // in any other case this is an actual error
         }
-        engine.refresh("test", true);
+        engine.refresh("test");
         Engine.Searcher searcher = engine.acquireSearcher("test");
         TopDocs topDocs = searcher.searcher().search(new MatchAllDocsQuery(), 10);
         assertThat(topDocs.totalHits, equalTo(1));
@@ -1638,7 +1638,7 @@
         } catch (VersionConflictEngineException e) {
             // we ignore version conflicts on replicas, see TransportShardReplicationOperationAction.ignoreReplicaException.
         }
-        replicaEngine.refresh("test", true);
+        replicaEngine.refresh("test");
         Engine.Searcher replicaSearcher = replicaEngine.acquireSearcher("test");
         topDocs = replicaSearcher.searcher().search(new MatchAllDocsQuery(), 10);
         assertThat(topDocs.totalHits, equalTo(1));
