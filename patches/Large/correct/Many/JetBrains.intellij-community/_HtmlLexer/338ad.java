diff --git a/source/com/intellij/lexer/_HtmlLexer.java b/source/com/intellij/lexer/_HtmlLexer.java
index 79da660..29f081e 100644
--- a/source/com/intellij/lexer/_HtmlLexer.java
+++ b/source/com/intellij/lexer/_HtmlLexer.java
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex 1.4 on 17.05.05 17:10 */
+/* The following code was generated by JFlex 1.4 on 5/20/05 6:25 PM */
 
 /* It's an automatically generated code. Do not modify it. */
 package com.intellij.lexer;
@@ -11,8 +11,8 @@
 /**
  * This class is a scanner generated by 
  * <a href="http://www.jflex.de/">JFlex</a> 1.4
- * on 17.05.05 17:10 from the specification file
- * <tt>/home/ik/projects/Irida/tools/lexer/_HtmlLexer.flex</tt>
+ * on 5/20/05 6:25 PM from the specification file
+ * <tt>C:/Irida/tools/lexer/_HtmlLexer.flex</tt>
  */
 public class _HtmlLexer implements FlexLexer,ELHostLexer {
   /** initial size of the lookahead buffer */
@@ -109,17 +109,17 @@
   private static final int [] ZZ_ACTION = zzUnpackAction();
 
   private static final String ZZ_ACTION_PACKED_0 =
-    "\1\1\4\0\1\2\2\3\1\4\1\1\1\5\1\6"+
-    "\1\1\6\7\1\10\3\11\1\12\1\13\1\12\1\14"+
-    "\1\15\1\12\1\16\1\2\1\17\1\20\1\7\2\3"+
-    "\1\21\4\3\1\4\1\7\1\22\1\1\1\0\1\23"+
-    "\1\24\1\1\7\0\1\3\4\0\1\25\2\3\4\0"+
-    "\1\1\1\26\1\27\11\0\1\30\1\3\1\0\1\3"+
-    "\1\31\1\0\1\26\1\32\3\0\1\14\1\33\3\0"+
-    "\1\34\2\0\1\35";
+    "\1\1\1\0\1\2\2\0\1\3\2\4\1\5\1\1"+
+    "\1\6\1\7\1\1\6\10\1\11\1\2\1\10\1\12"+
+    "\1\13\1\12\1\14\1\15\1\12\1\16\1\3\1\17"+
+    "\1\20\1\10\2\4\1\21\4\4\1\5\1\10\1\22"+
+    "\1\1\1\0\1\23\1\24\1\1\7\0\1\4\5\0"+
+    "\1\25\2\4\4\0\1\1\1\26\1\27\12\0\1\30"+
+    "\1\4\1\0\1\4\1\31\1\0\1\26\1\32\3\0"+
+    "\1\14\1\33\3\0\1\34\2\0\1\35";
 
   private static int [] zzUnpackAction() {
-    int [] result = new int[100];
+    int [] result = new int[101];
     int offset = 0;
     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
     return result;
@@ -146,20 +146,20 @@
   private static final String ZZ_ROWMAP_PACKED_0 =
     "\0\0\0\60\0\140\0\220\0\300\0\360\0\u0120\0\u0150"+
     "\0\u0180\0\u01b0\0\u01e0\0\u0210\0\u0240\0\u0270\0\u02a0\0\u02d0"+
-    "\0\u0300\0\u0330\0\u0360\0\u02a0\0\u02a0\0\u0390\0\u0270\0\u02a0"+
-    "\0\u03c0\0\u0270\0\u03f0\0\u02a0\0\u0420\0\u02a0\0\u0450\0\u02a0"+
-    "\0\u02a0\0\u0420\0\u0480\0\u04b0\0\u02a0\0\u04e0\0\u0510\0\u0540"+
-    "\0\u0570\0\u05a0\0\u05d0\0\u02a0\0\u0600\0\u0630\0\u02a0\0\u02a0"+
-    "\0\u0660\0\u0690\0\u06c0\0\u06f0\0\u0720\0\u0750\0\u0780\0\u02d0"+
-    "\0\u02a0\0\u0300\0\u07b0\0\u07e0\0\u0810\0\u02a0\0\u0840\0\u0870"+
-    "\0\u08a0\0\u08d0\0\u0900\0\u0930\0\u0960\0\u01b0\0\u02a0\0\u0990"+
-    "\0\u09c0\0\u09f0\0\u0a20\0\u0a50\0\u0a80\0\u0ab0\0\u0ae0\0\u0b10"+
-    "\0\u02a0\0\u0b40\0\u0b70\0\u0ba0\0\u02a0\0\u0bd0\0\u02a0\0\u02a0"+
-    "\0\u0c00\0\u0c30\0\u0c60\0\u02a0\0\u02a0\0\u0c90\0\u0cc0\0\u0cf0"+
-    "\0\u02a0\0\u0d20\0\u0d50\0\u02a0";
+    "\0\u0300\0\u0330\0\u0360\0\u02a0\0\u0390\0\u03c0\0\u02a0\0\u03f0"+
+    "\0\u0270\0\u0420\0\u02a0\0\u0450\0\u02a0\0\u0480\0\u02a0\0\u02a0"+
+    "\0\u0450\0\u04b0\0\u04e0\0\u02a0\0\u0510\0\u0540\0\u0570\0\u05a0"+
+    "\0\u05d0\0\u0600\0\u02a0\0\u0630\0\u0660\0\u02a0\0\u02a0\0\u0690"+
+    "\0\u06c0\0\u06f0\0\u0720\0\u0750\0\u0780\0\u07b0\0\u02d0\0\u02a0"+
+    "\0\u0300\0\u07e0\0\u0810\0\u0840\0\u0870\0\u02a0\0\u08a0\0\u08d0"+
+    "\0\u0900\0\u0930\0\u0960\0\u0990\0\u09c0\0\u01b0\0\u02a0\0\u09f0"+
+    "\0\u0a20\0\u0a50\0\u0a80\0\u0ab0\0\u0ae0\0\u0b10\0\u0b40\0\u0b70"+
+    "\0\u0ba0\0\u02a0\0\u0bd0\0\u0c00\0\u0c30\0\u02a0\0\u0c60\0\u02a0"+
+    "\0\u02a0\0\u0c90\0\u0cc0\0\u0cf0\0\u02a0\0\u02a0\0\u0d20\0\u0d50"+
+    "\0\u0d80\0\u02a0\0\u0db0\0\u0de0\0\u02a0";
 
   private static int [] zzUnpackRowMap() {
-    int [] result = new int[100];
+    int [] result = new int[101];
     int offset = 0;
     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
     return result;
@@ -185,65 +185,66 @@
     "\3\12\1\13\5\12\1\14\25\12\1\15\5\12\1\16"+
     "\12\12\3\17\1\13\3\17\1\20\1\21\11\17\2\22"+
     "\1\17\1\23\15\17\1\24\1\17\1\16\12\17\5\25"+
-    "\1\26\37\25\1\27\12\25\1\30\1\31\1\30\1\13"+
-    "\7\30\24\31\6\30\1\32\2\30\5\31\1\30\2\31"+
-    "\1\30\1\33\1\30\1\13\7\30\24\33\4\30\1\34"+
-    "\1\35\1\32\1\36\1\30\5\33\1\30\2\33\3\37"+
-    "\1\13\3\37\1\40\1\41\32\37\1\34\1\42\13\37"+
-    "\6\43\1\44\1\45\27\43\1\46\20\43\6\47\1\50"+
-    "\1\47\1\45\26\47\1\51\20\47\42\52\1\53\1\54"+
-    "\14\52\3\12\1\0\5\12\1\0\25\12\1\55\5\12"+
-    "\1\0\12\12\3\0\1\13\66\0\1\56\27\0\1\57"+
-    "\1\0\1\60\13\0\11\12\1\0\25\12\1\55\1\61"+
-    "\4\12\1\0\12\12\1\0\1\62\11\0\16\62\1\63"+
-    "\5\62\11\0\1\63\1\64\1\62\1\65\1\66\1\67"+
-    "\2\62\60\0\7\70\1\71\50\70\10\72\1\71\47\72"+
-    "\32\0\2\73\43\0\2\74\44\0\1\75\53\0\2\31"+
-    "\1\0\2\31\5\0\24\31\11\0\5\31\1\0\2\31"+
-    "\1\0\2\33\1\0\2\33\5\0\24\33\11\0\5\33"+
-    "\1\0\2\33\43\0\1\76\14\0\3\37\1\0\3\37"+
-    "\2\0\32\37\2\0\13\37\6\43\1\44\1\0\56\43"+
-    "\1\44\57\43\1\44\1\0\30\43\1\77\17\43\6\47"+
-    "\1\50\1\47\1\0\55\47\1\50\57\47\1\50\1\47"+
-    "\1\0\27\47\1\100\17\47\42\52\1\101\1\0\57\52"+
-    "\1\54\14\52\11\12\1\0\25\12\1\55\5\12\1\0"+
-    "\12\12\5\0\1\102\5\0\1\103\44\0\3\61\1\104"+
-    "\5\61\1\104\25\61\1\105\1\61\1\106\3\61\1\104"+
-    "\12\61\1\0\2\62\1\0\2\62\5\0\24\62\10\0"+
-    "\1\107\5\62\1\0\2\62\1\0\2\62\1\0\2\62"+
-    "\5\0\5\62\1\110\16\62\10\0\1\107\5\62\1\0"+
-    "\2\62\1\0\2\62\1\0\2\62\5\0\10\62\1\111"+
-    "\3\62\1\112\7\62\10\0\1\107\5\62\1\0\2\62"+
-    "\1\0\2\62\1\0\2\62\5\0\20\62\1\113\3\62"+
-    "\10\0\1\107\5\62\1\0\2\62\1\0\2\62\1\0"+
-    "\2\62\5\0\22\62\1\114\1\62\10\0\1\107\5\62"+
-    "\1\0\2\62\2\0\1\115\53\0\1\116\35\0\2\117"+
-    "\50\0\2\120\73\0\1\121\14\0\6\77\1\122\1\123"+
-    "\31\77\1\43\16\77\6\100\1\124\1\100\1\123\30\100"+
-    "\1\47\16\100\43\52\1\0\14\52\5\0\1\125\66\0"+
-    "\2\126\42\0\41\104\1\127\16\104\11\61\1\104\25\61"+
-    "\1\105\1\61\1\106\3\61\1\104\12\61\1\0\2\62"+
-    "\1\0\2\62\5\0\24\62\10\0\1\130\5\62\1\0"+
-    "\2\62\1\0\2\62\1\0\2\62\5\0\2\62\1\131"+
-    "\21\62\10\0\1\107\5\62\1\0\2\62\1\0\2\62"+
-    "\1\0\2\62\5\0\10\62\1\110\13\62\10\0\1\107"+
-    "\5\62\1\0\2\62\1\0\2\62\1\0\2\62\5\0"+
-    "\2\62\1\63\21\62\10\0\1\107\5\62\1\0\2\62"+
-    "\1\0\2\62\1\0\2\62\5\0\24\62\10\0\1\107"+
-    "\2\62\1\112\2\62\1\0\2\62\2\0\1\115\44\0"+
-    "\1\130\12\0\1\132\10\0\1\132\2\0\1\132\5\0"+
-    "\1\132\7\0\2\132\13\0\1\132\5\0\1\132\30\0"+
-    "\2\133\56\0\2\134\26\0\6\77\1\122\32\77\1\43"+
-    "\16\77\41\123\1\135\16\123\6\100\1\124\32\100\1\47"+
-    "\16\100\16\0\1\136\42\0\2\62\1\0\2\62\5\0"+
-    "\24\62\10\0\1\107\2\62\1\110\2\62\1\0\2\62"+
-    "\2\0\1\132\10\0\1\132\2\0\1\132\5\0\1\132"+
-    "\7\0\2\132\11\0\1\130\1\0\1\132\5\0\1\132"+
-    "\36\0\1\137\40\0\2\140\55\0\1\141\62\0\1\142"+
-    "\60\0\2\143\60\0\1\144\33\0";
+    "\1\26\52\25\1\27\1\30\1\27\1\13\7\27\24\30"+
+    "\6\27\1\31\2\27\5\30\1\27\2\30\1\27\1\32"+
+    "\1\27\1\13\7\27\24\32\4\27\1\33\1\34\1\31"+
+    "\1\35\1\27\5\32\1\27\2\32\3\36\1\13\3\36"+
+    "\1\37\1\40\32\36\1\33\1\41\13\36\6\42\1\43"+
+    "\1\44\27\42\1\45\20\42\6\46\1\47\1\46\1\44"+
+    "\26\46\1\50\20\46\42\51\1\52\1\53\14\51\3\12"+
+    "\1\0\5\12\1\0\25\12\1\54\5\12\1\0\12\12"+
+    "\3\0\1\13\66\0\1\55\27\0\1\56\1\0\1\57"+
+    "\13\0\11\12\1\0\25\12\1\54\1\60\4\12\1\0"+
+    "\12\12\1\0\1\61\11\0\16\61\1\62\5\61\11\0"+
+    "\1\62\1\63\1\61\1\64\1\65\1\66\2\61\60\0"+
+    "\7\67\1\70\50\67\10\71\1\70\47\71\32\0\2\72"+
+    "\43\0\2\73\37\0\5\25\1\74\57\25\1\75\52\25"+
+    "\1\0\2\30\1\0\2\30\5\0\24\30\11\0\5\30"+
+    "\1\0\2\30\1\0\2\32\1\0\2\32\5\0\24\32"+
+    "\11\0\5\32\1\0\2\32\43\0\1\76\14\0\3\36"+
+    "\1\0\3\36\2\0\32\36\2\0\13\36\6\42\1\43"+
+    "\1\0\56\42\1\43\57\42\1\43\1\0\30\42\1\77"+
+    "\17\42\6\46\1\47\1\46\1\0\55\46\1\47\57\46"+
+    "\1\47\1\46\1\0\27\46\1\100\17\46\42\51\1\101"+
+    "\1\0\57\51\1\53\14\51\11\12\1\0\25\12\1\54"+
+    "\5\12\1\0\12\12\5\0\1\102\5\0\1\103\44\0"+
+    "\3\60\1\104\5\60\1\104\25\60\1\105\1\60\1\106"+
+    "\3\60\1\104\12\60\1\0\2\61\1\0\2\61\5\0"+
+    "\24\61\10\0\1\107\5\61\1\0\2\61\1\0\2\61"+
+    "\1\0\2\61\5\0\5\61\1\110\16\61\10\0\1\107"+
+    "\5\61\1\0\2\61\1\0\2\61\1\0\2\61\5\0"+
+    "\10\61\1\111\3\61\1\112\7\61\10\0\1\107\5\61"+
+    "\1\0\2\61\1\0\2\61\1\0\2\61\5\0\20\61"+
+    "\1\113\3\61\10\0\1\107\5\61\1\0\2\61\1\0"+
+    "\2\61\1\0\2\61\5\0\22\61\1\114\1\61\10\0"+
+    "\1\107\5\61\1\0\2\61\2\0\1\115\53\0\1\116"+
+    "\35\0\2\117\50\0\2\120\30\0\5\25\1\121\115\25"+
+    "\1\122\14\25\6\77\1\123\1\124\31\77\1\42\16\77"+
+    "\6\100\1\125\1\100\1\124\30\100\1\46\16\100\43\51"+
+    "\1\0\14\51\5\0\1\126\66\0\2\127\42\0\41\104"+
+    "\1\130\16\104\11\60\1\104\25\60\1\105\1\60\1\106"+
+    "\3\60\1\104\12\60\1\0\2\61\1\0\2\61\5\0"+
+    "\24\61\10\0\1\131\5\61\1\0\2\61\1\0\2\61"+
+    "\1\0\2\61\5\0\2\61\1\132\21\61\10\0\1\107"+
+    "\5\61\1\0\2\61\1\0\2\61\1\0\2\61\5\0"+
+    "\10\61\1\110\13\61\10\0\1\107\5\61\1\0\2\61"+
+    "\1\0\2\61\1\0\2\61\5\0\2\61\1\62\21\61"+
+    "\10\0\1\107\5\61\1\0\2\61\1\0\2\61\1\0"+
+    "\2\61\5\0\24\61\10\0\1\107\2\61\1\112\2\61"+
+    "\1\0\2\61\2\0\1\115\44\0\1\131\12\0\1\133"+
+    "\10\0\1\133\2\0\1\133\5\0\1\133\7\0\2\133"+
+    "\13\0\1\133\5\0\1\133\30\0\2\134\56\0\2\135"+
+    "\26\0\43\25\1\0\14\25\6\77\1\123\32\77\1\42"+
+    "\16\77\41\124\1\136\16\124\6\100\1\125\32\100\1\46"+
+    "\16\100\16\0\1\137\42\0\2\61\1\0\2\61\5\0"+
+    "\24\61\10\0\1\107\2\61\1\110\2\61\1\0\2\61"+
+    "\2\0\1\133\10\0\1\133\2\0\1\133\5\0\1\133"+
+    "\7\0\2\133\11\0\1\131\1\0\1\133\5\0\1\133"+
+    "\36\0\1\140\40\0\2\141\55\0\1\142\62\0\1\143"+
+    "\60\0\2\144\60\0\1\145\33\0";
 
   private static int [] zzUnpackTrans() {
-    int [] result = new int[3456];
+    int [] result = new int[3600];
     int offset = 0;
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
     return result;
@@ -284,15 +285,15 @@
   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();
 
   private static final String ZZ_ATTRIBUTE_PACKED_0 =
-    "\1\1\4\0\11\1\1\11\4\1\2\11\2\1\1\11"+
-    "\3\1\1\11\1\1\1\11\1\1\2\11\3\1\1\11"+
-    "\6\1\1\11\1\1\1\0\2\11\1\1\7\0\1\11"+
-    "\4\0\1\11\2\1\4\0\2\1\1\11\11\0\1\11"+
-    "\1\1\1\0\1\1\1\11\1\0\2\11\3\0\2\11"+
-    "\3\0\1\11\2\0\1\11";
+    "\1\1\1\0\1\1\2\0\11\1\1\11\4\1\1\11"+
+    "\2\1\1\11\3\1\1\11\1\1\1\11\1\1\2\11"+
+    "\3\1\1\11\6\1\1\11\1\1\1\0\2\11\1\1"+
+    "\7\0\1\11\5\0\1\11\2\1\4\0\2\1\1\11"+
+    "\12\0\1\11\1\1\1\0\1\1\1\11\1\0\2\11"+
+    "\3\0\2\11\3\0\1\11\2\0\1\11";
 
   private static int [] zzUnpackAttribute() {
-    int [] result = new int[100];
+    int [] result = new int[101];
     int offset = 0;
     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
     return result;
@@ -604,11 +605,11 @@
       zzMarkedPos = zzMarkedPosL;
 
       switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
-        case 3: 
+        case 4: 
           { return XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
           }
         case 30: break;
-        case 7: 
+        case 8: 
           { return XmlTokenType.XML_BAD_CHARACTER;
           }
         case 31: break;
@@ -640,7 +641,7 @@
           { yybegin(DOC_TYPE); return XmlTokenType.XML_DOCTYPE_START;
           }
         case 38: break;
-        case 4: 
+        case 5: 
           { return XmlTokenType.XML_PI_TARGET;
           }
         case 39: break;
@@ -664,11 +665,11 @@
           { yybegin(COMMENT); return XmlTokenType.XML_COMMENT_START;
           }
         case 44: break;
-        case 2: 
+        case 3: 
           { yybegin(TAG_ATTRIBUTES); return XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN;
           }
         case 45: break;
-        case 9: 
+        case 2: 
           { return XmlTokenType.XML_COMMENT_CHARACTERS;
           }
         case 46: break;
@@ -680,7 +681,7 @@
           { yybegin(END_TAG_NAME); return XmlTokenType.XML_END_TAG_START;
           }
         case 48: break;
-        case 8: 
+        case 9: 
           { yybegin(YYINITIAL); return XmlTokenType.XML_DOCTYPE_END;
           }
         case 49: break;
@@ -688,7 +689,7 @@
           { yybegin(ATTRIBUTE_VALUE_SQ); return XmlTokenType.XML_ATTRIBUTE_VALUE_START_DELIMITER;
           }
         case 50: break;
-        case 6: 
+        case 7: 
           { yybegin(START_TAG_NAME); return XmlTokenType.XML_START_TAG_START;
           }
         case 51: break;
@@ -712,7 +713,7 @@
           { yybegin(PROCESSING_INSTRUCTION); return XmlTokenType.XML_PI_START;
           }
         case 56: break;
-        case 5: 
+        case 6: 
           { return XmlTokenType.XML_WHITE_SPACE;
           }
         case 57: break;
