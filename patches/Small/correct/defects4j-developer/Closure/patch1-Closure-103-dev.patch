diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 6ef2548..3b67af3 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -891,7 +891,6 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
       case Token.ASSIGN:
       case Token.INC:
       case Token.DEC:
-      case Token.INSTANCEOF:
         return true;
       case Token.FUNCTION:
         return false;
diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index ca5edbd..4937879 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -760,16 +760,9 @@ class DisambiguateProperties<T> implements CompilerPass {
       }
       // If the property does not exist on the referenced type but the original
       // type is an object type, see if any subtype has the property.
-      if (foundType == null) {
-        ObjectType maybeType = ObjectType.cast(
-            registry.getGreatestSubtypeWithProperty(type, field));
         // getGreatestSubtypeWithProperty does not guarantee that the property
         // is defined on the returned type, it just indicates that it might be,
         // so we have to double check.
-        if (maybeType != null && maybeType.hasOwnProperty(field)) {
-          foundType = maybeType;
-        }
-      }
       return foundType;
     }
 
