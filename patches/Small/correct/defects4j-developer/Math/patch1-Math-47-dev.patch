diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java
index 137765c..bebfead 100644
--- a/src/main/java/org/apache/commons/math/complex/Complex.java
+++ b/src/main/java/org/apache/commons/math/complex/Complex.java
@@ -79,7 +79,6 @@ public class Complex implements FieldElement<Complex>, Serializable  {
     /** Record whether this complex number is infinite. */
     private final transient boolean isInfinite;
     /** Record whether this complex number is zero. */
-    private final transient boolean isZero;
 
     /**
      * Create a complex number given only the real part.
@@ -103,7 +102,6 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
         isInfinite = !isNaN &&
             (Double.isInfinite(real) || Double.isInfinite(imaginary));
-        isZero = real == 0 && imaginary == 0;
     }
 
     /**
@@ -255,8 +253,8 @@ public class Complex implements FieldElement<Complex>, Serializable  {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            return isZero ? NaN : INF;
+        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,7 +290,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
             return NaN;
         }
         if (divisor == 0d) {
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
