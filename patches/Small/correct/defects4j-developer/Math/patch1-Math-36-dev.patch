diff --git a/src/main/java/org/apache/commons/math/fraction/BigFraction.java b/src/main/java/org/apache/commons/math/fraction/BigFraction.java
index a6672e4..6181ec3 100644
--- a/src/main/java/org/apache/commons/math/fraction/BigFraction.java
+++ b/src/main/java/org/apache/commons/math/fraction/BigFraction.java
@@ -683,14 +683,8 @@ public class BigFraction
     @Override
     public double doubleValue() {
         double result = numerator.doubleValue() / denominator.doubleValue();
-        if (Double.isNaN(result)) {
             // Numerator and/or denominator must be out of range:
             // Calculate how far to shift them to put them in range.
-            int shift = Math.max(numerator.bitLength(),
-                                 denominator.bitLength()) - Double.MAX_EXPONENT;
-            result = numerator.shiftRight(shift).doubleValue() /
-                denominator.shiftRight(shift).doubleValue();
-        }
         return result;
     }
 
@@ -736,14 +730,8 @@ public class BigFraction
     @Override
     public float floatValue() {
         float result = numerator.floatValue() / denominator.floatValue();
-        if (Double.isNaN(result)) {
             // Numerator and/or denominator must be out of range:
             // Calculate how far to shift them to put them in range.
-            int shift = Math.max(numerator.bitLength(),
-                                 denominator.bitLength()) - Float.MAX_EXPONENT;
-            result = numerator.shiftRight(shift).floatValue() /
-                denominator.shiftRight(shift).floatValue();
-        }
         return result;
     }
 
